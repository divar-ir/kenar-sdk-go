/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsEvaluationRowSection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsEvaluationRowSection{}

// AddonsEvaluationRowSection struct for AddonsEvaluationRowSection
type AddonsEvaluationRowSection struct {
	Text *string `json:"text,omitempty"`
	SectionColor *AddonsWidgetColor `json:"section_color,omitempty"`
}

// NewAddonsEvaluationRowSection instantiates a new AddonsEvaluationRowSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsEvaluationRowSection() *AddonsEvaluationRowSection {
	this := AddonsEvaluationRowSection{}
	return &this
}

// NewAddonsEvaluationRowSectionWithDefaults instantiates a new AddonsEvaluationRowSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsEvaluationRowSectionWithDefaults() *AddonsEvaluationRowSection {
	this := AddonsEvaluationRowSection{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *AddonsEvaluationRowSection) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsEvaluationRowSection) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *AddonsEvaluationRowSection) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *AddonsEvaluationRowSection) SetText(v string) {
	o.Text = &v
}

// GetSectionColor returns the SectionColor field value if set, zero value otherwise.
func (o *AddonsEvaluationRowSection) GetSectionColor() AddonsWidgetColor {
	if o == nil || IsNil(o.SectionColor) {
		var ret AddonsWidgetColor
		return ret
	}
	return *o.SectionColor
}

// GetSectionColorOk returns a tuple with the SectionColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsEvaluationRowSection) GetSectionColorOk() (*AddonsWidgetColor, bool) {
	if o == nil || IsNil(o.SectionColor) {
		return nil, false
	}
	return o.SectionColor, true
}

// HasSectionColor returns a boolean if a field has been set.
func (o *AddonsEvaluationRowSection) HasSectionColor() bool {
	if o != nil && !IsNil(o.SectionColor) {
		return true
	}

	return false
}

// SetSectionColor gets a reference to the given AddonsWidgetColor and assigns it to the SectionColor field.
func (o *AddonsEvaluationRowSection) SetSectionColor(v AddonsWidgetColor) {
	o.SectionColor = &v
}

func (o AddonsEvaluationRowSection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsEvaluationRowSection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.SectionColor) {
		toSerialize["section_color"] = o.SectionColor
	}
	return toSerialize, nil
}

type NullableAddonsEvaluationRowSection struct {
	value *AddonsEvaluationRowSection
	isSet bool
}

func (v NullableAddonsEvaluationRowSection) Get() *AddonsEvaluationRowSection {
	return v.value
}

func (v *NullableAddonsEvaluationRowSection) Set(val *AddonsEvaluationRowSection) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsEvaluationRowSection) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsEvaluationRowSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsEvaluationRowSection(val *AddonsEvaluationRowSection) *NullableAddonsEvaluationRowSection {
	return &NullableAddonsEvaluationRowSection{value: val, isSet: true}
}

func (v NullableAddonsEvaluationRowSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsEvaluationRowSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


