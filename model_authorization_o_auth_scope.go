/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AuthorizationOAuthScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationOAuthScope{}

// AuthorizationOAuthScope struct for AuthorizationOAuthScope
type AuthorizationOAuthScope struct {
	ResourceId *string `json:"resource_id,omitempty"`
	Scope *OAuthScopeScope `json:"scope,omitempty"`
}

// NewAuthorizationOAuthScope instantiates a new AuthorizationOAuthScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationOAuthScope() *AuthorizationOAuthScope {
	this := AuthorizationOAuthScope{}
	return &this
}

// NewAuthorizationOAuthScopeWithDefaults instantiates a new AuthorizationOAuthScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationOAuthScopeWithDefaults() *AuthorizationOAuthScope {
	this := AuthorizationOAuthScope{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *AuthorizationOAuthScope) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationOAuthScope) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *AuthorizationOAuthScope) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *AuthorizationOAuthScope) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *AuthorizationOAuthScope) GetScope() OAuthScopeScope {
	if o == nil || IsNil(o.Scope) {
		var ret OAuthScopeScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationOAuthScope) GetScopeOk() (*OAuthScopeScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *AuthorizationOAuthScope) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given OAuthScopeScope and assigns it to the Scope field.
func (o *AuthorizationOAuthScope) SetScope(v OAuthScopeScope) {
	o.Scope = &v
}

func (o AuthorizationOAuthScope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationOAuthScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceId) {
		toSerialize["resource_id"] = o.ResourceId
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableAuthorizationOAuthScope struct {
	value *AuthorizationOAuthScope
	isSet bool
}

func (v NullableAuthorizationOAuthScope) Get() *AuthorizationOAuthScope {
	return v.value
}

func (v *NullableAuthorizationOAuthScope) Set(val *AuthorizationOAuthScope) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationOAuthScope) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationOAuthScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationOAuthScope(val *AuthorizationOAuthScope) *NullableAuthorizationOAuthScope {
	return &NullableAuthorizationOAuthScope{value: val, isSet: true}
}

func (v NullableAuthorizationOAuthScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationOAuthScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


