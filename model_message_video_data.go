/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the MessageVideoData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageVideoData{}

// MessageVideoData struct for MessageVideoData
type MessageVideoData struct {
	Link *string `json:"link,omitempty"`
	SizeBytes *string `json:"size_bytes,omitempty"`
	ThumbnailLink *string `json:"thumbnail_link,omitempty"`
}

// NewMessageVideoData instantiates a new MessageVideoData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageVideoData() *MessageVideoData {
	this := MessageVideoData{}
	return &this
}

// NewMessageVideoDataWithDefaults instantiates a new MessageVideoData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageVideoDataWithDefaults() *MessageVideoData {
	this := MessageVideoData{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *MessageVideoData) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageVideoData) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *MessageVideoData) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *MessageVideoData) SetLink(v string) {
	o.Link = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *MessageVideoData) GetSizeBytes() string {
	if o == nil || IsNil(o.SizeBytes) {
		var ret string
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageVideoData) GetSizeBytesOk() (*string, bool) {
	if o == nil || IsNil(o.SizeBytes) {
		return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *MessageVideoData) HasSizeBytes() bool {
	if o != nil && !IsNil(o.SizeBytes) {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given string and assigns it to the SizeBytes field.
func (o *MessageVideoData) SetSizeBytes(v string) {
	o.SizeBytes = &v
}

// GetThumbnailLink returns the ThumbnailLink field value if set, zero value otherwise.
func (o *MessageVideoData) GetThumbnailLink() string {
	if o == nil || IsNil(o.ThumbnailLink) {
		var ret string
		return ret
	}
	return *o.ThumbnailLink
}

// GetThumbnailLinkOk returns a tuple with the ThumbnailLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageVideoData) GetThumbnailLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailLink) {
		return nil, false
	}
	return o.ThumbnailLink, true
}

// HasThumbnailLink returns a boolean if a field has been set.
func (o *MessageVideoData) HasThumbnailLink() bool {
	if o != nil && !IsNil(o.ThumbnailLink) {
		return true
	}

	return false
}

// SetThumbnailLink gets a reference to the given string and assigns it to the ThumbnailLink field.
func (o *MessageVideoData) SetThumbnailLink(v string) {
	o.ThumbnailLink = &v
}

func (o MessageVideoData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageVideoData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.SizeBytes) {
		toSerialize["size_bytes"] = o.SizeBytes
	}
	if !IsNil(o.ThumbnailLink) {
		toSerialize["thumbnail_link"] = o.ThumbnailLink
	}
	return toSerialize, nil
}

type NullableMessageVideoData struct {
	value *MessageVideoData
	isSet bool
}

func (v NullableMessageVideoData) Get() *MessageVideoData {
	return v.value
}

func (v *NullableMessageVideoData) Set(val *MessageVideoData) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageVideoData) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageVideoData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageVideoData(val *MessageVideoData) *NullableMessageVideoData {
	return &NullableMessageVideoData{value: val, isSet: true}
}

func (v NullableMessageVideoData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageVideoData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


