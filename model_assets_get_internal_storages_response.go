/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AssetsGetInternalStoragesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetsGetInternalStoragesResponse{}

// AssetsGetInternalStoragesResponse struct for AssetsGetInternalStoragesResponse
type AssetsGetInternalStoragesResponse struct {
	InternalStorages []AssetsEnumOption `json:"internal_storages,omitempty"`
}

// NewAssetsGetInternalStoragesResponse instantiates a new AssetsGetInternalStoragesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetsGetInternalStoragesResponse() *AssetsGetInternalStoragesResponse {
	this := AssetsGetInternalStoragesResponse{}
	return &this
}

// NewAssetsGetInternalStoragesResponseWithDefaults instantiates a new AssetsGetInternalStoragesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetsGetInternalStoragesResponseWithDefaults() *AssetsGetInternalStoragesResponse {
	this := AssetsGetInternalStoragesResponse{}
	return &this
}

// GetInternalStorages returns the InternalStorages field value if set, zero value otherwise.
func (o *AssetsGetInternalStoragesResponse) GetInternalStorages() []AssetsEnumOption {
	if o == nil || IsNil(o.InternalStorages) {
		var ret []AssetsEnumOption
		return ret
	}
	return o.InternalStorages
}

// GetInternalStoragesOk returns a tuple with the InternalStorages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsGetInternalStoragesResponse) GetInternalStoragesOk() ([]AssetsEnumOption, bool) {
	if o == nil || IsNil(o.InternalStorages) {
		return nil, false
	}
	return o.InternalStorages, true
}

// HasInternalStorages returns a boolean if a field has been set.
func (o *AssetsGetInternalStoragesResponse) HasInternalStorages() bool {
	if o != nil && !IsNil(o.InternalStorages) {
		return true
	}

	return false
}

// SetInternalStorages gets a reference to the given []AssetsEnumOption and assigns it to the InternalStorages field.
func (o *AssetsGetInternalStoragesResponse) SetInternalStorages(v []AssetsEnumOption) {
	o.InternalStorages = v
}

func (o AssetsGetInternalStoragesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetsGetInternalStoragesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InternalStorages) {
		toSerialize["internal_storages"] = o.InternalStorages
	}
	return toSerialize, nil
}

type NullableAssetsGetInternalStoragesResponse struct {
	value *AssetsGetInternalStoragesResponse
	isSet bool
}

func (v NullableAssetsGetInternalStoragesResponse) Get() *AssetsGetInternalStoragesResponse {
	return v.value
}

func (v *NullableAssetsGetInternalStoragesResponse) Set(val *AssetsGetInternalStoragesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetsGetInternalStoragesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetsGetInternalStoragesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetsGetInternalStoragesResponse(val *AssetsGetInternalStoragesResponse) *NullableAssetsGetInternalStoragesResponse {
	return &NullableAssetsGetInternalStoragesResponse{value: val, isSet: true}
}

func (v NullableAssetsGetInternalStoragesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetsGetInternalStoragesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


