/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// OAuthScopeScope the model 'OAuthScopeScope'
type OAuthScopeScope string

// List of OAuthScopeScope
const (
	OAUTHSCOPESCOPE_POST_ADDON_CREATE OAuthScopeScope = "POST_ADDON_CREATE"
	OAUTHSCOPESCOPE_USER_PHONE OAuthScopeScope = "USER_PHONE"
	OAUTHSCOPESCOPE_USER_ID OAuthScopeScope = "USER_ID"
	OAUTHSCOPESCOPE_USER_ADDON_CREATE OAuthScopeScope = "USER_ADDON_CREATE"
	OAUTHSCOPESCOPE_CHAT_MESSAGE_SEND OAuthScopeScope = "CHAT_MESSAGE_SEND"
	OAUTHSCOPESCOPE_CHAT_CONVERSATION_READ OAuthScopeScope = "CHAT_CONVERSATION_READ"
	OAUTHSCOPESCOPE_USER_POSTS_GET OAuthScopeScope = "USER_POSTS_GET"
	OAUTHSCOPESCOPE_USER_POSTS_STATS_READ OAuthScopeScope = "USER_POSTS_STATS_READ"
	OAUTHSCOPESCOPE_CHAT_POST_CONVERSATIONS_READ OAuthScopeScope = "CHAT_POST_CONVERSATIONS_READ"
	OAUTHSCOPESCOPE_CHAT_POST_CONVERSATIONS_MESSAGE_SEND OAuthScopeScope = "CHAT_POST_CONVERSATIONS_MESSAGE_SEND"
	OAUTHSCOPESCOPE_CHAT_SUPPLIER_ALL_CONVERSATIONS_READ OAuthScopeScope = "CHAT_SUPPLIER_ALL_CONVERSATIONS_READ"
	OAUTHSCOPESCOPE_CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND OAuthScopeScope = "CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND"
	OAUTHSCOPESCOPE_CHAT_BOT_USER_MESSAGE_SEND OAuthScopeScope = "CHAT_BOT_USER_MESSAGE_SEND"
	OAUTHSCOPESCOPE_USER_VERIFICATION_CREATE OAuthScopeScope = "USER_VERIFICATION_CREATE"
	OAUTHSCOPESCOPE_OFFLINE_ACCESS OAuthScopeScope = "OFFLINE_ACCESS"
	OAUTHSCOPESCOPE_OPENID OAuthScopeScope = "OPENID"
	OAUTHSCOPESCOPE_PAYMENT_ALL_POSTS_PRICING_READ OAuthScopeScope = "PAYMENT_ALL_POSTS_PRICING_READ"
	OAUTHSCOPESCOPE_PAYMENT_ALL_POSTS_REORDER OAuthScopeScope = "PAYMENT_ALL_POSTS_REORDER"
	OAUTHSCOPESCOPE_MANAGEMENT_APPS_READ OAuthScopeScope = "MANAGEMENT_APPS_READ"
	OAUTHSCOPESCOPE_MANAGEMENT_APPS_WRITE OAuthScopeScope = "MANAGEMENT_APPS_WRITE"
	OAUTHSCOPESCOPE_POST_ONGOING_IMAGES_GET OAuthScopeScope = "POST_ONGOING_IMAGES_GET"
	OAUTHSCOPESCOPE_USER_POSTS_ADDON_CREATE OAuthScopeScope = "USER_POSTS_ADDON_CREATE"
	OAUTHSCOPESCOPE_POST_EDIT OAuthScopeScope = "POST_EDIT"
	OAUTHSCOPESCOPE_CONVERSATION_SEND_MESSAGE OAuthScopeScope = "CONVERSATION_SEND_MESSAGE"
	OAUTHSCOPESCOPE_BUSINESS_ADDON_CREATE OAuthScopeScope = "BUSINESS_ADDON_CREATE"
	OAUTHSCOPESCOPE_POST_SEMANTIC_CREATE OAuthScopeScope = "POST_SEMANTIC_CREATE"
	OAUTHSCOPESCOPE_NOTIFICATION_ACCESS_REVOCATION OAuthScopeScope = "NOTIFICATION_ACCESS_REVOCATION"
	OAUTHSCOPESCOPE_SEND_EVENT OAuthScopeScope = "SEND_EVENT"
	OAUTHSCOPESCOPE_CREATE_WALLET_PAYMENT OAuthScopeScope = "CREATE_WALLET_PAYMENT"
)

// All allowed values of OAuthScopeScope enum
var AllowedOAuthScopeScopeEnumValues = []OAuthScopeScope{
	"POST_ADDON_CREATE",
	"USER_PHONE",
	"USER_ID",
	"USER_ADDON_CREATE",
	"CHAT_MESSAGE_SEND",
	"CHAT_CONVERSATION_READ",
	"USER_POSTS_GET",
	"USER_POSTS_STATS_READ",
	"CHAT_POST_CONVERSATIONS_READ",
	"CHAT_POST_CONVERSATIONS_MESSAGE_SEND",
	"CHAT_SUPPLIER_ALL_CONVERSATIONS_READ",
	"CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND",
	"CHAT_BOT_USER_MESSAGE_SEND",
	"USER_VERIFICATION_CREATE",
	"OFFLINE_ACCESS",
	"OPENID",
	"PAYMENT_ALL_POSTS_PRICING_READ",
	"PAYMENT_ALL_POSTS_REORDER",
	"MANAGEMENT_APPS_READ",
	"MANAGEMENT_APPS_WRITE",
	"POST_ONGOING_IMAGES_GET",
	"USER_POSTS_ADDON_CREATE",
	"POST_EDIT",
	"CONVERSATION_SEND_MESSAGE",
	"BUSINESS_ADDON_CREATE",
	"POST_SEMANTIC_CREATE",
	"NOTIFICATION_ACCESS_REVOCATION",
	"SEND_EVENT",
	"CREATE_WALLET_PAYMENT",
}

func (v *OAuthScopeScope) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OAuthScopeScope(value)
	for _, existing := range AllowedOAuthScopeScopeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OAuthScopeScope", value)
}

// NewOAuthScopeScopeFromValue returns a pointer to a valid OAuthScopeScope
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOAuthScopeScopeFromValue(v string) (*OAuthScopeScope, error) {
	ev := OAuthScopeScope(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OAuthScopeScope: valid values are %v", v, AllowedOAuthScopeScopeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OAuthScopeScope) IsValid() bool {
	for _, existing := range AllowedOAuthScopeScopeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OAuthScopeScope value
func (v OAuthScopeScope) Ptr() *OAuthScopeScope {
	return &v
}

type NullableOAuthScopeScope struct {
	value *OAuthScopeScope
	isSet bool
}

func (v NullableOAuthScopeScope) Get() *OAuthScopeScope {
	return v.value
}

func (v *NullableOAuthScopeScope) Set(val *OAuthScopeScope) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthScopeScope) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthScopeScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthScopeScope(val *OAuthScopeScope) *NullableOAuthScopeScope {
	return &NullableOAuthScopeScope{value: val, isSet: true}
}

func (v NullableOAuthScopeScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthScopeScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

