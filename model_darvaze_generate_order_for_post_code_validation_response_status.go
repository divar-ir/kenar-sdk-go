/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// DarvazeGenerateOrderForPostCodeValidationResponseStatus the model 'DarvazeGenerateOrderForPostCodeValidationResponseStatus'
type DarvazeGenerateOrderForPostCodeValidationResponseStatus string

// List of darvazeGenerateOrderForPostCodeValidationResponseStatus
const (
	DARVAZEGENERATEORDERFORPOSTCODEVALIDATIONRESPONSESTATUS_SUCCESS DarvazeGenerateOrderForPostCodeValidationResponseStatus = "SUCCESS"
	DARVAZEGENERATEORDERFORPOSTCODEVALIDATIONRESPONSESTATUS_FAILED DarvazeGenerateOrderForPostCodeValidationResponseStatus = "FAILED"
)

// All allowed values of DarvazeGenerateOrderForPostCodeValidationResponseStatus enum
var AllowedDarvazeGenerateOrderForPostCodeValidationResponseStatusEnumValues = []DarvazeGenerateOrderForPostCodeValidationResponseStatus{
	"SUCCESS",
	"FAILED",
}

func (v *DarvazeGenerateOrderForPostCodeValidationResponseStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DarvazeGenerateOrderForPostCodeValidationResponseStatus(value)
	for _, existing := range AllowedDarvazeGenerateOrderForPostCodeValidationResponseStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DarvazeGenerateOrderForPostCodeValidationResponseStatus", value)
}

// NewDarvazeGenerateOrderForPostCodeValidationResponseStatusFromValue returns a pointer to a valid DarvazeGenerateOrderForPostCodeValidationResponseStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDarvazeGenerateOrderForPostCodeValidationResponseStatusFromValue(v string) (*DarvazeGenerateOrderForPostCodeValidationResponseStatus, error) {
	ev := DarvazeGenerateOrderForPostCodeValidationResponseStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DarvazeGenerateOrderForPostCodeValidationResponseStatus: valid values are %v", v, AllowedDarvazeGenerateOrderForPostCodeValidationResponseStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DarvazeGenerateOrderForPostCodeValidationResponseStatus) IsValid() bool {
	for _, existing := range AllowedDarvazeGenerateOrderForPostCodeValidationResponseStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to darvazeGenerateOrderForPostCodeValidationResponseStatus value
func (v DarvazeGenerateOrderForPostCodeValidationResponseStatus) Ptr() *DarvazeGenerateOrderForPostCodeValidationResponseStatus {
	return &v
}

type NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus struct {
	value *DarvazeGenerateOrderForPostCodeValidationResponseStatus
	isSet bool
}

func (v NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) Get() *DarvazeGenerateOrderForPostCodeValidationResponseStatus {
	return v.value
}

func (v *NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) Set(val *DarvazeGenerateOrderForPostCodeValidationResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDarvazeGenerateOrderForPostCodeValidationResponseStatus(val *DarvazeGenerateOrderForPostCodeValidationResponseStatus) *NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus {
	return &NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus{value: val, isSet: true}
}

func (v NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDarvazeGenerateOrderForPostCodeValidationResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

