/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AuthorizationAPICallerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationAPICallerInfo{}

// AuthorizationAPICallerInfo struct for AuthorizationAPICallerInfo
type AuthorizationAPICallerInfo struct {
	ApiKeyId *int32 `json:"api_key_id,omitempty"`
	App *AppsApp `json:"app,omitempty"`
	Scopes []AuthorizationOAuthScope `json:"scopes,omitempty"`
	ApiKeyIdV2 *string `json:"api_key_id_v2,omitempty"`
}

// NewAuthorizationAPICallerInfo instantiates a new AuthorizationAPICallerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationAPICallerInfo() *AuthorizationAPICallerInfo {
	this := AuthorizationAPICallerInfo{}
	return &this
}

// NewAuthorizationAPICallerInfoWithDefaults instantiates a new AuthorizationAPICallerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationAPICallerInfoWithDefaults() *AuthorizationAPICallerInfo {
	this := AuthorizationAPICallerInfo{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value if set, zero value otherwise.
func (o *AuthorizationAPICallerInfo) GetApiKeyId() int32 {
	if o == nil || IsNil(o.ApiKeyId) {
		var ret int32
		return ret
	}
	return *o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAPICallerInfo) GetApiKeyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApiKeyId) {
		return nil, false
	}
	return o.ApiKeyId, true
}

// HasApiKeyId returns a boolean if a field has been set.
func (o *AuthorizationAPICallerInfo) HasApiKeyId() bool {
	if o != nil && !IsNil(o.ApiKeyId) {
		return true
	}

	return false
}

// SetApiKeyId gets a reference to the given int32 and assigns it to the ApiKeyId field.
func (o *AuthorizationAPICallerInfo) SetApiKeyId(v int32) {
	o.ApiKeyId = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AuthorizationAPICallerInfo) GetApp() AppsApp {
	if o == nil || IsNil(o.App) {
		var ret AppsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAPICallerInfo) GetAppOk() (*AppsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AuthorizationAPICallerInfo) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppsApp and assigns it to the App field.
func (o *AuthorizationAPICallerInfo) SetApp(v AppsApp) {
	o.App = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *AuthorizationAPICallerInfo) GetScopes() []AuthorizationOAuthScope {
	if o == nil || IsNil(o.Scopes) {
		var ret []AuthorizationOAuthScope
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAPICallerInfo) GetScopesOk() ([]AuthorizationOAuthScope, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *AuthorizationAPICallerInfo) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []AuthorizationOAuthScope and assigns it to the Scopes field.
func (o *AuthorizationAPICallerInfo) SetScopes(v []AuthorizationOAuthScope) {
	o.Scopes = v
}

// GetApiKeyIdV2 returns the ApiKeyIdV2 field value if set, zero value otherwise.
func (o *AuthorizationAPICallerInfo) GetApiKeyIdV2() string {
	if o == nil || IsNil(o.ApiKeyIdV2) {
		var ret string
		return ret
	}
	return *o.ApiKeyIdV2
}

// GetApiKeyIdV2Ok returns a tuple with the ApiKeyIdV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAPICallerInfo) GetApiKeyIdV2Ok() (*string, bool) {
	if o == nil || IsNil(o.ApiKeyIdV2) {
		return nil, false
	}
	return o.ApiKeyIdV2, true
}

// HasApiKeyIdV2 returns a boolean if a field has been set.
func (o *AuthorizationAPICallerInfo) HasApiKeyIdV2() bool {
	if o != nil && !IsNil(o.ApiKeyIdV2) {
		return true
	}

	return false
}

// SetApiKeyIdV2 gets a reference to the given string and assigns it to the ApiKeyIdV2 field.
func (o *AuthorizationAPICallerInfo) SetApiKeyIdV2(v string) {
	o.ApiKeyIdV2 = &v
}

func (o AuthorizationAPICallerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationAPICallerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKeyId) {
		toSerialize["api_key_id"] = o.ApiKeyId
	}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.ApiKeyIdV2) {
		toSerialize["api_key_id_v2"] = o.ApiKeyIdV2
	}
	return toSerialize, nil
}

type NullableAuthorizationAPICallerInfo struct {
	value *AuthorizationAPICallerInfo
	isSet bool
}

func (v NullableAuthorizationAPICallerInfo) Get() *AuthorizationAPICallerInfo {
	return v.value
}

func (v *NullableAuthorizationAPICallerInfo) Set(val *AuthorizationAPICallerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationAPICallerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationAPICallerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationAPICallerInfo(val *AuthorizationAPICallerInfo) *NullableAuthorizationAPICallerInfo {
	return &NullableAuthorizationAPICallerInfo{value: val, isSet: true}
}

func (v NullableAuthorizationAPICallerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationAPICallerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


