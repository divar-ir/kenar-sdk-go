/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsCreatePostAddonV2Body type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsCreatePostAddonV2Body{}

// AddonsCreatePostAddonV2Body struct for AddonsCreatePostAddonV2Body
type AddonsCreatePostAddonV2Body struct {
	Widgets []AddonsWidget `json:"widgets,omitempty"`
	Semantic *map[string]string `json:"semantic,omitempty"`
	Notes *string `json:"notes,omitempty"`
}

// NewAddonsCreatePostAddonV2Body instantiates a new AddonsCreatePostAddonV2Body object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsCreatePostAddonV2Body() *AddonsCreatePostAddonV2Body {
	this := AddonsCreatePostAddonV2Body{}
	return &this
}

// NewAddonsCreatePostAddonV2BodyWithDefaults instantiates a new AddonsCreatePostAddonV2Body object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsCreatePostAddonV2BodyWithDefaults() *AddonsCreatePostAddonV2Body {
	this := AddonsCreatePostAddonV2Body{}
	return &this
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *AddonsCreatePostAddonV2Body) GetWidgets() []AddonsWidget {
	if o == nil || IsNil(o.Widgets) {
		var ret []AddonsWidget
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreatePostAddonV2Body) GetWidgetsOk() ([]AddonsWidget, bool) {
	if o == nil || IsNil(o.Widgets) {
		return nil, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *AddonsCreatePostAddonV2Body) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given []AddonsWidget and assigns it to the Widgets field.
func (o *AddonsCreatePostAddonV2Body) SetWidgets(v []AddonsWidget) {
	o.Widgets = v
}

// GetSemantic returns the Semantic field value if set, zero value otherwise.
func (o *AddonsCreatePostAddonV2Body) GetSemantic() map[string]string {
	if o == nil || IsNil(o.Semantic) {
		var ret map[string]string
		return ret
	}
	return *o.Semantic
}

// GetSemanticOk returns a tuple with the Semantic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreatePostAddonV2Body) GetSemanticOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Semantic) {
		return nil, false
	}
	return o.Semantic, true
}

// HasSemantic returns a boolean if a field has been set.
func (o *AddonsCreatePostAddonV2Body) HasSemantic() bool {
	if o != nil && !IsNil(o.Semantic) {
		return true
	}

	return false
}

// SetSemantic gets a reference to the given map[string]string and assigns it to the Semantic field.
func (o *AddonsCreatePostAddonV2Body) SetSemantic(v map[string]string) {
	o.Semantic = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AddonsCreatePostAddonV2Body) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreatePostAddonV2Body) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AddonsCreatePostAddonV2Body) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *AddonsCreatePostAddonV2Body) SetNotes(v string) {
	o.Notes = &v
}

func (o AddonsCreatePostAddonV2Body) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsCreatePostAddonV2Body) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	if !IsNil(o.Semantic) {
		toSerialize["semantic"] = o.Semantic
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	return toSerialize, nil
}

type NullableAddonsCreatePostAddonV2Body struct {
	value *AddonsCreatePostAddonV2Body
	isSet bool
}

func (v NullableAddonsCreatePostAddonV2Body) Get() *AddonsCreatePostAddonV2Body {
	return v.value
}

func (v *NullableAddonsCreatePostAddonV2Body) Set(val *AddonsCreatePostAddonV2Body) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsCreatePostAddonV2Body) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsCreatePostAddonV2Body) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsCreatePostAddonV2Body(val *AddonsCreatePostAddonV2Body) *NullableAddonsCreatePostAddonV2Body {
	return &NullableAddonsCreatePostAddonV2Body{value: val, isSet: true}
}

func (v NullableAddonsCreatePostAddonV2Body) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsCreatePostAddonV2Body) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


