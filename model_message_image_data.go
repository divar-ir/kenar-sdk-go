/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the MessageImageData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageImageData{}

// MessageImageData struct for MessageImageData
type MessageImageData struct {
	Link *string `json:"link,omitempty"`
	SizeBytes *string `json:"size_bytes,omitempty"`
	HeightPx *int64 `json:"height_px,omitempty"`
	WidthPx *int64 `json:"width_px,omitempty"`
}

// NewMessageImageData instantiates a new MessageImageData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageImageData() *MessageImageData {
	this := MessageImageData{}
	return &this
}

// NewMessageImageDataWithDefaults instantiates a new MessageImageData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageImageDataWithDefaults() *MessageImageData {
	this := MessageImageData{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *MessageImageData) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageImageData) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *MessageImageData) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *MessageImageData) SetLink(v string) {
	o.Link = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *MessageImageData) GetSizeBytes() string {
	if o == nil || IsNil(o.SizeBytes) {
		var ret string
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageImageData) GetSizeBytesOk() (*string, bool) {
	if o == nil || IsNil(o.SizeBytes) {
		return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *MessageImageData) HasSizeBytes() bool {
	if o != nil && !IsNil(o.SizeBytes) {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given string and assigns it to the SizeBytes field.
func (o *MessageImageData) SetSizeBytes(v string) {
	o.SizeBytes = &v
}

// GetHeightPx returns the HeightPx field value if set, zero value otherwise.
func (o *MessageImageData) GetHeightPx() int64 {
	if o == nil || IsNil(o.HeightPx) {
		var ret int64
		return ret
	}
	return *o.HeightPx
}

// GetHeightPxOk returns a tuple with the HeightPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageImageData) GetHeightPxOk() (*int64, bool) {
	if o == nil || IsNil(o.HeightPx) {
		return nil, false
	}
	return o.HeightPx, true
}

// HasHeightPx returns a boolean if a field has been set.
func (o *MessageImageData) HasHeightPx() bool {
	if o != nil && !IsNil(o.HeightPx) {
		return true
	}

	return false
}

// SetHeightPx gets a reference to the given int64 and assigns it to the HeightPx field.
func (o *MessageImageData) SetHeightPx(v int64) {
	o.HeightPx = &v
}

// GetWidthPx returns the WidthPx field value if set, zero value otherwise.
func (o *MessageImageData) GetWidthPx() int64 {
	if o == nil || IsNil(o.WidthPx) {
		var ret int64
		return ret
	}
	return *o.WidthPx
}

// GetWidthPxOk returns a tuple with the WidthPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageImageData) GetWidthPxOk() (*int64, bool) {
	if o == nil || IsNil(o.WidthPx) {
		return nil, false
	}
	return o.WidthPx, true
}

// HasWidthPx returns a boolean if a field has been set.
func (o *MessageImageData) HasWidthPx() bool {
	if o != nil && !IsNil(o.WidthPx) {
		return true
	}

	return false
}

// SetWidthPx gets a reference to the given int64 and assigns it to the WidthPx field.
func (o *MessageImageData) SetWidthPx(v int64) {
	o.WidthPx = &v
}

func (o MessageImageData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageImageData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.SizeBytes) {
		toSerialize["size_bytes"] = o.SizeBytes
	}
	if !IsNil(o.HeightPx) {
		toSerialize["height_px"] = o.HeightPx
	}
	if !IsNil(o.WidthPx) {
		toSerialize["width_px"] = o.WidthPx
	}
	return toSerialize, nil
}

type NullableMessageImageData struct {
	value *MessageImageData
	isSet bool
}

func (v NullableMessageImageData) Get() *MessageImageData {
	return v.value
}

func (v *NullableMessageImageData) Set(val *MessageImageData) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageImageData) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageImageData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageImageData(val *MessageImageData) *NullableMessageImageData {
	return &NullableMessageImageData{value: val, isSet: true}
}

func (v NullableMessageImageData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageImageData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


