/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the WidgetsAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetsAction{}

// WidgetsAction struct for WidgetsAction
type WidgetsAction struct {
	// deprecated; use is_new_flow = 1 in PagePresentation instead.
	PagePopLink *bool `json:"page_pop_link,omitempty"`
	Payload *ProtobufAny `json:"payload,omitempty"`
	Type *WidgetsActionType `json:"type,omitempty"`
}

// NewWidgetsAction instantiates a new WidgetsAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetsAction() *WidgetsAction {
	this := WidgetsAction{}
	return &this
}

// NewWidgetsActionWithDefaults instantiates a new WidgetsAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetsActionWithDefaults() *WidgetsAction {
	this := WidgetsAction{}
	return &this
}

// GetPagePopLink returns the PagePopLink field value if set, zero value otherwise.
func (o *WidgetsAction) GetPagePopLink() bool {
	if o == nil || IsNil(o.PagePopLink) {
		var ret bool
		return ret
	}
	return *o.PagePopLink
}

// GetPagePopLinkOk returns a tuple with the PagePopLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetsAction) GetPagePopLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.PagePopLink) {
		return nil, false
	}
	return o.PagePopLink, true
}

// HasPagePopLink returns a boolean if a field has been set.
func (o *WidgetsAction) HasPagePopLink() bool {
	if o != nil && !IsNil(o.PagePopLink) {
		return true
	}

	return false
}

// SetPagePopLink gets a reference to the given bool and assigns it to the PagePopLink field.
func (o *WidgetsAction) SetPagePopLink(v bool) {
	o.PagePopLink = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *WidgetsAction) GetPayload() ProtobufAny {
	if o == nil || IsNil(o.Payload) {
		var ret ProtobufAny
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetsAction) GetPayloadOk() (*ProtobufAny, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *WidgetsAction) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given ProtobufAny and assigns it to the Payload field.
func (o *WidgetsAction) SetPayload(v ProtobufAny) {
	o.Payload = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WidgetsAction) GetType() WidgetsActionType {
	if o == nil || IsNil(o.Type) {
		var ret WidgetsActionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetsAction) GetTypeOk() (*WidgetsActionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WidgetsAction) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given WidgetsActionType and assigns it to the Type field.
func (o *WidgetsAction) SetType(v WidgetsActionType) {
	o.Type = &v
}

func (o WidgetsAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetsAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PagePopLink) {
		toSerialize["page_pop_link"] = o.PagePopLink
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableWidgetsAction struct {
	value *WidgetsAction
	isSet bool
}

func (v NullableWidgetsAction) Get() *WidgetsAction {
	return v.value
}

func (v *NullableWidgetsAction) Set(val *WidgetsAction) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetsAction) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetsAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetsAction(val *WidgetsAction) *NullableWidgetsAction {
	return &NullableWidgetsAction{value: val, isSet: true}
}

func (v NullableWidgetsAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetsAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


