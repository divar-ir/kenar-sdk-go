/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the PaymentCommitWalletTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentCommitWalletTransactionResponse{}

// PaymentCommitWalletTransactionResponse struct for PaymentCommitWalletTransactionResponse
type PaymentCommitWalletTransactionResponse struct {
	Transaction *PaymentWalletTransaction `json:"transaction,omitempty"`
}

// NewPaymentCommitWalletTransactionResponse instantiates a new PaymentCommitWalletTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentCommitWalletTransactionResponse() *PaymentCommitWalletTransactionResponse {
	this := PaymentCommitWalletTransactionResponse{}
	return &this
}

// NewPaymentCommitWalletTransactionResponseWithDefaults instantiates a new PaymentCommitWalletTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentCommitWalletTransactionResponseWithDefaults() *PaymentCommitWalletTransactionResponse {
	this := PaymentCommitWalletTransactionResponse{}
	return &this
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *PaymentCommitWalletTransactionResponse) GetTransaction() PaymentWalletTransaction {
	if o == nil || IsNil(o.Transaction) {
		var ret PaymentWalletTransaction
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentCommitWalletTransactionResponse) GetTransactionOk() (*PaymentWalletTransaction, bool) {
	if o == nil || IsNil(o.Transaction) {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *PaymentCommitWalletTransactionResponse) HasTransaction() bool {
	if o != nil && !IsNil(o.Transaction) {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given PaymentWalletTransaction and assigns it to the Transaction field.
func (o *PaymentCommitWalletTransactionResponse) SetTransaction(v PaymentWalletTransaction) {
	o.Transaction = &v
}

func (o PaymentCommitWalletTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentCommitWalletTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transaction) {
		toSerialize["transaction"] = o.Transaction
	}
	return toSerialize, nil
}

type NullablePaymentCommitWalletTransactionResponse struct {
	value *PaymentCommitWalletTransactionResponse
	isSet bool
}

func (v NullablePaymentCommitWalletTransactionResponse) Get() *PaymentCommitWalletTransactionResponse {
	return v.value
}

func (v *NullablePaymentCommitWalletTransactionResponse) Set(val *PaymentCommitWalletTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentCommitWalletTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentCommitWalletTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentCommitWalletTransactionResponse(val *PaymentCommitWalletTransactionResponse) *NullablePaymentCommitWalletTransactionResponse {
	return &NullablePaymentCommitWalletTransactionResponse{value: val, isSet: true}
}

func (v NullablePaymentCommitWalletTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentCommitWalletTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


