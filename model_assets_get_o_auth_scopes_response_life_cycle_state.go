/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// AssetsGetOAuthScopesResponseLifeCycleState the model 'AssetsGetOAuthScopesResponseLifeCycleState'
type AssetsGetOAuthScopesResponseLifeCycleState string

// List of assetsGetOAuthScopesResponseLifeCycleState
const (
	ASSETSGETOAUTHSCOPESRESPONSELIFECYCLESTATE_EXPERIMENTAL AssetsGetOAuthScopesResponseLifeCycleState = "EXPERIMENTAL"
	ASSETSGETOAUTHSCOPESRESPONSELIFECYCLESTATE_ACTIVE AssetsGetOAuthScopesResponseLifeCycleState = "ACTIVE"
	ASSETSGETOAUTHSCOPESRESPONSELIFECYCLESTATE_DEPRECATING_SOON AssetsGetOAuthScopesResponseLifeCycleState = "DEPRECATING_SOON"
	ASSETSGETOAUTHSCOPESRESPONSELIFECYCLESTATE_DEPRECATED AssetsGetOAuthScopesResponseLifeCycleState = "DEPRECATED"
)

// All allowed values of AssetsGetOAuthScopesResponseLifeCycleState enum
var AllowedAssetsGetOAuthScopesResponseLifeCycleStateEnumValues = []AssetsGetOAuthScopesResponseLifeCycleState{
	"EXPERIMENTAL",
	"ACTIVE",
	"DEPRECATING_SOON",
	"DEPRECATED",
}

func (v *AssetsGetOAuthScopesResponseLifeCycleState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AssetsGetOAuthScopesResponseLifeCycleState(value)
	for _, existing := range AllowedAssetsGetOAuthScopesResponseLifeCycleStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AssetsGetOAuthScopesResponseLifeCycleState", value)
}

// NewAssetsGetOAuthScopesResponseLifeCycleStateFromValue returns a pointer to a valid AssetsGetOAuthScopesResponseLifeCycleState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAssetsGetOAuthScopesResponseLifeCycleStateFromValue(v string) (*AssetsGetOAuthScopesResponseLifeCycleState, error) {
	ev := AssetsGetOAuthScopesResponseLifeCycleState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AssetsGetOAuthScopesResponseLifeCycleState: valid values are %v", v, AllowedAssetsGetOAuthScopesResponseLifeCycleStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AssetsGetOAuthScopesResponseLifeCycleState) IsValid() bool {
	for _, existing := range AllowedAssetsGetOAuthScopesResponseLifeCycleStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to assetsGetOAuthScopesResponseLifeCycleState value
func (v AssetsGetOAuthScopesResponseLifeCycleState) Ptr() *AssetsGetOAuthScopesResponseLifeCycleState {
	return &v
}

type NullableAssetsGetOAuthScopesResponseLifeCycleState struct {
	value *AssetsGetOAuthScopesResponseLifeCycleState
	isSet bool
}

func (v NullableAssetsGetOAuthScopesResponseLifeCycleState) Get() *AssetsGetOAuthScopesResponseLifeCycleState {
	return v.value
}

func (v *NullableAssetsGetOAuthScopesResponseLifeCycleState) Set(val *AssetsGetOAuthScopesResponseLifeCycleState) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetsGetOAuthScopesResponseLifeCycleState) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetsGetOAuthScopesResponseLifeCycleState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetsGetOAuthScopesResponseLifeCycleState(val *AssetsGetOAuthScopesResponseLifeCycleState) *NullableAssetsGetOAuthScopesResponseLifeCycleState {
	return &NullableAssetsGetOAuthScopesResponseLifeCycleState{value: val, isSet: true}
}

func (v NullableAssetsGetOAuthScopesResponseLifeCycleState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetsGetOAuthScopesResponseLifeCycleState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

