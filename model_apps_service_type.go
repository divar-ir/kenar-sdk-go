/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// AppsServiceType the model 'AppsServiceType'
type AppsServiceType string

// List of appsServiceType
const (
	APPSSERVICETYPE_FUNC_CLICK_AND_COLLECT AppsServiceType = "FUNC_CLICK_AND_COLLECT"
	APPSSERVICETYPE_FUNC_DELIVERY AppsServiceType = "FUNC_DELIVERY"
	APPSSERVICETYPE_FUNC_SECURE_PAYMENT AppsServiceType = "FUNC_SECURE_PAYMENT"
	APPSSERVICETYPE_LEAD_GEN_PURE AppsServiceType = "LEAD_GEN_PURE"
	APPSSERVICETYPE_LEAD_GEN_LOAN AppsServiceType = "LEAD_GEN_LOAN"
	APPSSERVICETYPE_REPORT_INSPECTION AppsServiceType = "REPORT_INSPECTION"
	APPSSERVICETYPE_REPORT_PRICE_EVALUATION AppsServiceType = "REPORT_PRICE_EVALUATION"
	APPSSERVICETYPE_REPORT_VERIFICATION AppsServiceType = "REPORT_VERIFICATION"
	APPSSERVICETYPE_FUNC_CONTRACT AppsServiceType = "FUNC_CONTRACT"
	APPSSERVICETYPE_FUNC_FINANCING AppsServiceType = "FUNC_FINANCING"
	APPSSERVICETYPE_USER_FACE_ID_VERIFICATION AppsServiceType = "USER_FACE_ID_VERIFICATION"
	APPSSERVICETYPE_POST_VERIFICATION AppsServiceType = "POST_VERIFICATION"
	APPSSERVICETYPE_INTERNAL AppsServiceType = "INTERNAL"
	APPSSERVICETYPE_USER_BACKGROUND_VERIFICATION AppsServiceType = "USER_BACKGROUND_VERIFICATION"
	APPSSERVICETYPE_USER_BUSINESS_VERIFICATION AppsServiceType = "USER_BUSINESS_VERIFICATION"
	APPSSERVICETYPE_CHARITY AppsServiceType = "CHARITY"
	APPSSERVICETYPE_SECURE_PAYMENT_POST_PROMOTION AppsServiceType = "SECURE_PAYMENT_POST_PROMOTION"
	APPSSERVICETYPE_PHOTOGRAPHY AppsServiceType = "PHOTOGRAPHY"
	APPSSERVICETYPE_DOWNLOADABLE_CONTENT_GENERATION AppsServiceType = "DOWNLOADABLE_CONTENT_GENERATION"
	APPSSERVICETYPE_REPORT_INSPECTION_CHAT AppsServiceType = "REPORT_INSPECTION_CHAT"
	APPSSERVICETYPE_ADDITIONAL_INFORMATION AppsServiceType = "ADDITIONAL_INFORMATION"
	APPSSERVICETYPE_ACCOUNTING AppsServiceType = "ACCOUNTING"
	APPSSERVICETYPE_ASSISTANT AppsServiceType = "ASSISTANT"
	APPSSERVICETYPE_ADVERTISEMENT AppsServiceType = "ADVERTISEMENT"
	APPSSERVICETYPE_CONTRACT_POST AppsServiceType = "CONTRACT_POST"
	APPSSERVICETYPE_SITE_BUILDER AppsServiceType = "SITE_BUILDER"
	APPSSERVICETYPE_FORM_BUILDER AppsServiceType = "FORM_BUILDER"
	APPSSERVICETYPE_AUCTION AppsServiceType = "AUCTION"
	APPSSERVICETYPE_POST_DETAIL_ENHANCER AppsServiceType = "POST_DETAIL_ENHANCER"
	APPSSERVICETYPE_POST_REORDER AppsServiceType = "POST_REORDER"
)

// All allowed values of AppsServiceType enum
var AllowedAppsServiceTypeEnumValues = []AppsServiceType{
	"FUNC_CLICK_AND_COLLECT",
	"FUNC_DELIVERY",
	"FUNC_SECURE_PAYMENT",
	"LEAD_GEN_PURE",
	"LEAD_GEN_LOAN",
	"REPORT_INSPECTION",
	"REPORT_PRICE_EVALUATION",
	"REPORT_VERIFICATION",
	"FUNC_CONTRACT",
	"FUNC_FINANCING",
	"USER_FACE_ID_VERIFICATION",
	"POST_VERIFICATION",
	"INTERNAL",
	"USER_BACKGROUND_VERIFICATION",
	"USER_BUSINESS_VERIFICATION",
	"CHARITY",
	"SECURE_PAYMENT_POST_PROMOTION",
	"PHOTOGRAPHY",
	"DOWNLOADABLE_CONTENT_GENERATION",
	"REPORT_INSPECTION_CHAT",
	"ADDITIONAL_INFORMATION",
	"ACCOUNTING",
	"ASSISTANT",
	"ADVERTISEMENT",
	"CONTRACT_POST",
	"SITE_BUILDER",
	"FORM_BUILDER",
	"AUCTION",
	"POST_DETAIL_ENHANCER",
	"POST_REORDER",
}

func (v *AppsServiceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppsServiceType(value)
	for _, existing := range AllowedAppsServiceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppsServiceType", value)
}

// NewAppsServiceTypeFromValue returns a pointer to a valid AppsServiceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAppsServiceTypeFromValue(v string) (*AppsServiceType, error) {
	ev := AppsServiceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AppsServiceType: valid values are %v", v, AllowedAppsServiceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AppsServiceType) IsValid() bool {
	for _, existing := range AllowedAppsServiceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to appsServiceType value
func (v AppsServiceType) Ptr() *AppsServiceType {
	return &v
}

type NullableAppsServiceType struct {
	value *AppsServiceType
	isSet bool
}

func (v NullableAppsServiceType) Get() *AppsServiceType {
	return v.value
}

func (v *NullableAppsServiceType) Set(val *AppsServiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsServiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsServiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsServiceType(val *AppsServiceType) *NullableAppsServiceType {
	return &NullableAppsServiceType{value: val, isSet: true}
}

func (v NullableAppsServiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsServiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

