/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostApartmentSellFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostApartmentSellFields{}

// PostApartmentSellFields struct for PostApartmentSellFields
type PostApartmentSellFields struct {
	// Floor of the property. Use -1 for under ground floor and 0 for ground floor. Use 1 for first floor and so on.
	Floor int32 `json:"floor"`
	// Whether the property has an elevator
	HasElevator bool `json:"has_elevator"`
	// تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
	HasOwnImage bool `json:"has_own_image"`
	// Whether the property has a parking
	HasParking bool `json:"has_parking"`
	// Whether the property has a warehouse
	HasWarehouse bool `json:"has_warehouse"`
	// Price of the property in Toman
	Price string `json:"price"`
	RoomsCount PostRoomsCount `json:"rooms_count"`
	// Size of the property in square meters
	Size int32 `json:"size"`
	// Year the property was built (Persian/Shamsi calendar)
	YearBuilt int32 `json:"year_built"`
}

type _PostApartmentSellFields PostApartmentSellFields

// NewPostApartmentSellFields instantiates a new PostApartmentSellFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostApartmentSellFields(floor int32, hasElevator bool, hasOwnImage bool, hasParking bool, hasWarehouse bool, price string, roomsCount PostRoomsCount, size int32, yearBuilt int32) *PostApartmentSellFields {
	this := PostApartmentSellFields{}
	this.Floor = floor
	this.HasElevator = hasElevator
	this.HasOwnImage = hasOwnImage
	this.HasParking = hasParking
	this.HasWarehouse = hasWarehouse
	this.Price = price
	this.RoomsCount = roomsCount
	this.Size = size
	this.YearBuilt = yearBuilt
	return &this
}

// NewPostApartmentSellFieldsWithDefaults instantiates a new PostApartmentSellFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostApartmentSellFieldsWithDefaults() *PostApartmentSellFields {
	this := PostApartmentSellFields{}
	return &this
}

// GetFloor returns the Floor field value
func (o *PostApartmentSellFields) GetFloor() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Floor
}

// GetFloorOk returns a tuple with the Floor field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetFloorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Floor, true
}

// SetFloor sets field value
func (o *PostApartmentSellFields) SetFloor(v int32) {
	o.Floor = v
}

// GetHasElevator returns the HasElevator field value
func (o *PostApartmentSellFields) GetHasElevator() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasElevator
}

// GetHasElevatorOk returns a tuple with the HasElevator field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetHasElevatorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasElevator, true
}

// SetHasElevator sets field value
func (o *PostApartmentSellFields) SetHasElevator(v bool) {
	o.HasElevator = v
}

// GetHasOwnImage returns the HasOwnImage field value
func (o *PostApartmentSellFields) GetHasOwnImage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasOwnImage
}

// GetHasOwnImageOk returns a tuple with the HasOwnImage field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetHasOwnImageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasOwnImage, true
}

// SetHasOwnImage sets field value
func (o *PostApartmentSellFields) SetHasOwnImage(v bool) {
	o.HasOwnImage = v
}

// GetHasParking returns the HasParking field value
func (o *PostApartmentSellFields) GetHasParking() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasParking
}

// GetHasParkingOk returns a tuple with the HasParking field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetHasParkingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasParking, true
}

// SetHasParking sets field value
func (o *PostApartmentSellFields) SetHasParking(v bool) {
	o.HasParking = v
}

// GetHasWarehouse returns the HasWarehouse field value
func (o *PostApartmentSellFields) GetHasWarehouse() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasWarehouse
}

// GetHasWarehouseOk returns a tuple with the HasWarehouse field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetHasWarehouseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasWarehouse, true
}

// SetHasWarehouse sets field value
func (o *PostApartmentSellFields) SetHasWarehouse(v bool) {
	o.HasWarehouse = v
}

// GetPrice returns the Price field value
func (o *PostApartmentSellFields) GetPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *PostApartmentSellFields) SetPrice(v string) {
	o.Price = v
}

// GetRoomsCount returns the RoomsCount field value
func (o *PostApartmentSellFields) GetRoomsCount() PostRoomsCount {
	if o == nil {
		var ret PostRoomsCount
		return ret
	}

	return o.RoomsCount
}

// GetRoomsCountOk returns a tuple with the RoomsCount field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetRoomsCountOk() (*PostRoomsCount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomsCount, true
}

// SetRoomsCount sets field value
func (o *PostApartmentSellFields) SetRoomsCount(v PostRoomsCount) {
	o.RoomsCount = v
}

// GetSize returns the Size field value
func (o *PostApartmentSellFields) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *PostApartmentSellFields) SetSize(v int32) {
	o.Size = v
}

// GetYearBuilt returns the YearBuilt field value
func (o *PostApartmentSellFields) GetYearBuilt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.YearBuilt
}

// GetYearBuiltOk returns a tuple with the YearBuilt field value
// and a boolean to check if the value has been set.
func (o *PostApartmentSellFields) GetYearBuiltOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.YearBuilt, true
}

// SetYearBuilt sets field value
func (o *PostApartmentSellFields) SetYearBuilt(v int32) {
	o.YearBuilt = v
}

func (o PostApartmentSellFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostApartmentSellFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["floor"] = o.Floor
	toSerialize["has_elevator"] = o.HasElevator
	toSerialize["has_own_image"] = o.HasOwnImage
	toSerialize["has_parking"] = o.HasParking
	toSerialize["has_warehouse"] = o.HasWarehouse
	toSerialize["price"] = o.Price
	toSerialize["rooms_count"] = o.RoomsCount
	toSerialize["size"] = o.Size
	toSerialize["year_built"] = o.YearBuilt
	return toSerialize, nil
}

func (o *PostApartmentSellFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"floor",
		"has_elevator",
		"has_own_image",
		"has_parking",
		"has_warehouse",
		"price",
		"rooms_count",
		"size",
		"year_built",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostApartmentSellFields := _PostApartmentSellFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostApartmentSellFields)

	if err != nil {
		return err
	}

	*o = PostApartmentSellFields(varPostApartmentSellFields)

	return err
}

type NullablePostApartmentSellFields struct {
	value *PostApartmentSellFields
	isSet bool
}

func (v NullablePostApartmentSellFields) Get() *PostApartmentSellFields {
	return v.value
}

func (v *NullablePostApartmentSellFields) Set(val *PostApartmentSellFields) {
	v.value = val
	v.isSet = true
}

func (v NullablePostApartmentSellFields) IsSet() bool {
	return v.isSet
}

func (v *NullablePostApartmentSellFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostApartmentSellFields(val *PostApartmentSellFields) *NullablePostApartmentSellFields {
	return &NullablePostApartmentSellFields{value: val, isSet: true}
}

func (v NullablePostApartmentSellFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostApartmentSellFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


