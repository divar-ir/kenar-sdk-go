/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// HomePresellFieldsDeliveryMonth ماه تحویل (تقویم شمسی)
type HomePresellFieldsDeliveryMonth string

// List of HomePresellFieldsDeliveryMonth
const (
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_FARVARDIN HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_FARVARDIN"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_ORDIBEHESHT HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_ORDIBEHESHT"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_KHORDAD HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_KHORDAD"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_TIR HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_TIR"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_MORDAD HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_MORDAD"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_SHAHRIVAR HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_SHAHRIVAR"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_MEHR HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_MEHR"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_ABAN HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_ABAN"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_AZAR HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_AZAR"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_DEY HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_DEY"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_BAHMAN HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_BAHMAN"
	HOMEPRESELLFIELDSDELIVERYMONTH_DELIVERY_MONTH_ESFAND HomePresellFieldsDeliveryMonth = "DELIVERY_MONTH_ESFAND"
)

// All allowed values of HomePresellFieldsDeliveryMonth enum
var AllowedHomePresellFieldsDeliveryMonthEnumValues = []HomePresellFieldsDeliveryMonth{
	"DELIVERY_MONTH_FARVARDIN",
	"DELIVERY_MONTH_ORDIBEHESHT",
	"DELIVERY_MONTH_KHORDAD",
	"DELIVERY_MONTH_TIR",
	"DELIVERY_MONTH_MORDAD",
	"DELIVERY_MONTH_SHAHRIVAR",
	"DELIVERY_MONTH_MEHR",
	"DELIVERY_MONTH_ABAN",
	"DELIVERY_MONTH_AZAR",
	"DELIVERY_MONTH_DEY",
	"DELIVERY_MONTH_BAHMAN",
	"DELIVERY_MONTH_ESFAND",
}

func (v *HomePresellFieldsDeliveryMonth) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := HomePresellFieldsDeliveryMonth(value)
	for _, existing := range AllowedHomePresellFieldsDeliveryMonthEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid HomePresellFieldsDeliveryMonth", value)
}

// NewHomePresellFieldsDeliveryMonthFromValue returns a pointer to a valid HomePresellFieldsDeliveryMonth
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewHomePresellFieldsDeliveryMonthFromValue(v string) (*HomePresellFieldsDeliveryMonth, error) {
	ev := HomePresellFieldsDeliveryMonth(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for HomePresellFieldsDeliveryMonth: valid values are %v", v, AllowedHomePresellFieldsDeliveryMonthEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v HomePresellFieldsDeliveryMonth) IsValid() bool {
	for _, existing := range AllowedHomePresellFieldsDeliveryMonthEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to HomePresellFieldsDeliveryMonth value
func (v HomePresellFieldsDeliveryMonth) Ptr() *HomePresellFieldsDeliveryMonth {
	return &v
}

type NullableHomePresellFieldsDeliveryMonth struct {
	value *HomePresellFieldsDeliveryMonth
	isSet bool
}

func (v NullableHomePresellFieldsDeliveryMonth) Get() *HomePresellFieldsDeliveryMonth {
	return v.value
}

func (v *NullableHomePresellFieldsDeliveryMonth) Set(val *HomePresellFieldsDeliveryMonth) {
	v.value = val
	v.isSet = true
}

func (v NullableHomePresellFieldsDeliveryMonth) IsSet() bool {
	return v.isSet
}

func (v *NullableHomePresellFieldsDeliveryMonth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHomePresellFieldsDeliveryMonth(val *HomePresellFieldsDeliveryMonth) *NullableHomePresellFieldsDeliveryMonth {
	return &NullableHomePresellFieldsDeliveryMonth{value: val, isSet: true}
}

func (v NullableHomePresellFieldsDeliveryMonth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHomePresellFieldsDeliveryMonth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

