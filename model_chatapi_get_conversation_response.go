/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatapiGetConversationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatapiGetConversationResponse{}

// ChatapiGetConversationResponse struct for ChatapiGetConversationResponse
type ChatapiGetConversationResponse struct {
	Conversation ChatapiConversation `json:"conversation"`
	// List of messages in the conversation
	Messages []ChatapiMessage `json:"messages"`
}

type _ChatapiGetConversationResponse ChatapiGetConversationResponse

// NewChatapiGetConversationResponse instantiates a new ChatapiGetConversationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatapiGetConversationResponse(conversation ChatapiConversation, messages []ChatapiMessage) *ChatapiGetConversationResponse {
	this := ChatapiGetConversationResponse{}
	this.Conversation = conversation
	this.Messages = messages
	return &this
}

// NewChatapiGetConversationResponseWithDefaults instantiates a new ChatapiGetConversationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatapiGetConversationResponseWithDefaults() *ChatapiGetConversationResponse {
	this := ChatapiGetConversationResponse{}
	return &this
}

// GetConversation returns the Conversation field value
func (o *ChatapiGetConversationResponse) GetConversation() ChatapiConversation {
	if o == nil {
		var ret ChatapiConversation
		return ret
	}

	return o.Conversation
}

// GetConversationOk returns a tuple with the Conversation field value
// and a boolean to check if the value has been set.
func (o *ChatapiGetConversationResponse) GetConversationOk() (*ChatapiConversation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conversation, true
}

// SetConversation sets field value
func (o *ChatapiGetConversationResponse) SetConversation(v ChatapiConversation) {
	o.Conversation = v
}

// GetMessages returns the Messages field value
func (o *ChatapiGetConversationResponse) GetMessages() []ChatapiMessage {
	if o == nil {
		var ret []ChatapiMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *ChatapiGetConversationResponse) GetMessagesOk() ([]ChatapiMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *ChatapiGetConversationResponse) SetMessages(v []ChatapiMessage) {
	o.Messages = v
}

func (o ChatapiGetConversationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatapiGetConversationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conversation"] = o.Conversation
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *ChatapiGetConversationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conversation",
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatapiGetConversationResponse := _ChatapiGetConversationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatapiGetConversationResponse)

	if err != nil {
		return err
	}

	*o = ChatapiGetConversationResponse(varChatapiGetConversationResponse)

	return err
}

type NullableChatapiGetConversationResponse struct {
	value *ChatapiGetConversationResponse
	isSet bool
}

func (v NullableChatapiGetConversationResponse) Get() *ChatapiGetConversationResponse {
	return v.value
}

func (v *NullableChatapiGetConversationResponse) Set(val *ChatapiGetConversationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChatapiGetConversationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChatapiGetConversationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatapiGetConversationResponse(val *ChatapiGetConversationResponse) *NullableChatapiGetConversationResponse {
	return &NullableChatapiGetConversationResponse{value: val, isSet: true}
}

func (v NullableChatapiGetConversationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatapiGetConversationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


