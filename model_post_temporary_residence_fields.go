/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the PostTemporaryResidenceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTemporaryResidenceFields{}

// PostTemporaryResidenceFields struct for PostTemporaryResidenceFields
type PostTemporaryResidenceFields struct {
	// Area of the residence in square meters
	Area *int32 `json:"area,omitempty"`
	// Number of allowed extra people that can stay in the residence
	ExtraPersonCapacity *int32 `json:"extra_person_capacity,omitempty"`
	// Whether the images are of the property itself and not decorative/stock photos.
	HasOwnImage *bool `json:"has_own_image,omitempty"`
	// Cost per extra person per night in Toman
	PriceCostPerExtraPerson *string `json:"price_cost_per_extra_person,omitempty"`
	// Price of the residence for regular days (Saturday to Tuesday) in Toman
	PriceRegularDays *string `json:"price_regular_days,omitempty"`
	// Price of the residence for special days (holidays and occasions) in Toman
	PriceSpecialDays *string `json:"price_special_days,omitempty"`
	// Price of the residence for weekends (Wednesday to Friday) in Toman
	PriceWeekends *string `json:"price_weekends,omitempty"`
	// Number of allowed regular people that can stay in the residence
	RegularPersonCapacity *int32 `json:"regular_person_capacity,omitempty"`
	RoomsCount *TemporaryResidenceFieldsRoomsCount `json:"rooms_count,omitempty"`
}

// NewPostTemporaryResidenceFields instantiates a new PostTemporaryResidenceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTemporaryResidenceFields() *PostTemporaryResidenceFields {
	this := PostTemporaryResidenceFields{}
	return &this
}

// NewPostTemporaryResidenceFieldsWithDefaults instantiates a new PostTemporaryResidenceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTemporaryResidenceFieldsWithDefaults() *PostTemporaryResidenceFields {
	this := PostTemporaryResidenceFields{}
	return &this
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetArea() int32 {
	if o == nil || IsNil(o.Area) {
		var ret int32
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetAreaOk() (*int32, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given int32 and assigns it to the Area field.
func (o *PostTemporaryResidenceFields) SetArea(v int32) {
	o.Area = &v
}

// GetExtraPersonCapacity returns the ExtraPersonCapacity field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetExtraPersonCapacity() int32 {
	if o == nil || IsNil(o.ExtraPersonCapacity) {
		var ret int32
		return ret
	}
	return *o.ExtraPersonCapacity
}

// GetExtraPersonCapacityOk returns a tuple with the ExtraPersonCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetExtraPersonCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtraPersonCapacity) {
		return nil, false
	}
	return o.ExtraPersonCapacity, true
}

// HasExtraPersonCapacity returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasExtraPersonCapacity() bool {
	if o != nil && !IsNil(o.ExtraPersonCapacity) {
		return true
	}

	return false
}

// SetExtraPersonCapacity gets a reference to the given int32 and assigns it to the ExtraPersonCapacity field.
func (o *PostTemporaryResidenceFields) SetExtraPersonCapacity(v int32) {
	o.ExtraPersonCapacity = &v
}

// GetHasOwnImage returns the HasOwnImage field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetHasOwnImage() bool {
	if o == nil || IsNil(o.HasOwnImage) {
		var ret bool
		return ret
	}
	return *o.HasOwnImage
}

// GetHasOwnImageOk returns a tuple with the HasOwnImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetHasOwnImageOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOwnImage) {
		return nil, false
	}
	return o.HasOwnImage, true
}

// HasHasOwnImage returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasHasOwnImage() bool {
	if o != nil && !IsNil(o.HasOwnImage) {
		return true
	}

	return false
}

// SetHasOwnImage gets a reference to the given bool and assigns it to the HasOwnImage field.
func (o *PostTemporaryResidenceFields) SetHasOwnImage(v bool) {
	o.HasOwnImage = &v
}

// GetPriceCostPerExtraPerson returns the PriceCostPerExtraPerson field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetPriceCostPerExtraPerson() string {
	if o == nil || IsNil(o.PriceCostPerExtraPerson) {
		var ret string
		return ret
	}
	return *o.PriceCostPerExtraPerson
}

// GetPriceCostPerExtraPersonOk returns a tuple with the PriceCostPerExtraPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceCostPerExtraPersonOk() (*string, bool) {
	if o == nil || IsNil(o.PriceCostPerExtraPerson) {
		return nil, false
	}
	return o.PriceCostPerExtraPerson, true
}

// HasPriceCostPerExtraPerson returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasPriceCostPerExtraPerson() bool {
	if o != nil && !IsNil(o.PriceCostPerExtraPerson) {
		return true
	}

	return false
}

// SetPriceCostPerExtraPerson gets a reference to the given string and assigns it to the PriceCostPerExtraPerson field.
func (o *PostTemporaryResidenceFields) SetPriceCostPerExtraPerson(v string) {
	o.PriceCostPerExtraPerson = &v
}

// GetPriceRegularDays returns the PriceRegularDays field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetPriceRegularDays() string {
	if o == nil || IsNil(o.PriceRegularDays) {
		var ret string
		return ret
	}
	return *o.PriceRegularDays
}

// GetPriceRegularDaysOk returns a tuple with the PriceRegularDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceRegularDaysOk() (*string, bool) {
	if o == nil || IsNil(o.PriceRegularDays) {
		return nil, false
	}
	return o.PriceRegularDays, true
}

// HasPriceRegularDays returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasPriceRegularDays() bool {
	if o != nil && !IsNil(o.PriceRegularDays) {
		return true
	}

	return false
}

// SetPriceRegularDays gets a reference to the given string and assigns it to the PriceRegularDays field.
func (o *PostTemporaryResidenceFields) SetPriceRegularDays(v string) {
	o.PriceRegularDays = &v
}

// GetPriceSpecialDays returns the PriceSpecialDays field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetPriceSpecialDays() string {
	if o == nil || IsNil(o.PriceSpecialDays) {
		var ret string
		return ret
	}
	return *o.PriceSpecialDays
}

// GetPriceSpecialDaysOk returns a tuple with the PriceSpecialDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceSpecialDaysOk() (*string, bool) {
	if o == nil || IsNil(o.PriceSpecialDays) {
		return nil, false
	}
	return o.PriceSpecialDays, true
}

// HasPriceSpecialDays returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasPriceSpecialDays() bool {
	if o != nil && !IsNil(o.PriceSpecialDays) {
		return true
	}

	return false
}

// SetPriceSpecialDays gets a reference to the given string and assigns it to the PriceSpecialDays field.
func (o *PostTemporaryResidenceFields) SetPriceSpecialDays(v string) {
	o.PriceSpecialDays = &v
}

// GetPriceWeekends returns the PriceWeekends field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetPriceWeekends() string {
	if o == nil || IsNil(o.PriceWeekends) {
		var ret string
		return ret
	}
	return *o.PriceWeekends
}

// GetPriceWeekendsOk returns a tuple with the PriceWeekends field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceWeekendsOk() (*string, bool) {
	if o == nil || IsNil(o.PriceWeekends) {
		return nil, false
	}
	return o.PriceWeekends, true
}

// HasPriceWeekends returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasPriceWeekends() bool {
	if o != nil && !IsNil(o.PriceWeekends) {
		return true
	}

	return false
}

// SetPriceWeekends gets a reference to the given string and assigns it to the PriceWeekends field.
func (o *PostTemporaryResidenceFields) SetPriceWeekends(v string) {
	o.PriceWeekends = &v
}

// GetRegularPersonCapacity returns the RegularPersonCapacity field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetRegularPersonCapacity() int32 {
	if o == nil || IsNil(o.RegularPersonCapacity) {
		var ret int32
		return ret
	}
	return *o.RegularPersonCapacity
}

// GetRegularPersonCapacityOk returns a tuple with the RegularPersonCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetRegularPersonCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.RegularPersonCapacity) {
		return nil, false
	}
	return o.RegularPersonCapacity, true
}

// HasRegularPersonCapacity returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasRegularPersonCapacity() bool {
	if o != nil && !IsNil(o.RegularPersonCapacity) {
		return true
	}

	return false
}

// SetRegularPersonCapacity gets a reference to the given int32 and assigns it to the RegularPersonCapacity field.
func (o *PostTemporaryResidenceFields) SetRegularPersonCapacity(v int32) {
	o.RegularPersonCapacity = &v
}

// GetRoomsCount returns the RoomsCount field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetRoomsCount() TemporaryResidenceFieldsRoomsCount {
	if o == nil || IsNil(o.RoomsCount) {
		var ret TemporaryResidenceFieldsRoomsCount
		return ret
	}
	return *o.RoomsCount
}

// GetRoomsCountOk returns a tuple with the RoomsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetRoomsCountOk() (*TemporaryResidenceFieldsRoomsCount, bool) {
	if o == nil || IsNil(o.RoomsCount) {
		return nil, false
	}
	return o.RoomsCount, true
}

// HasRoomsCount returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasRoomsCount() bool {
	if o != nil && !IsNil(o.RoomsCount) {
		return true
	}

	return false
}

// SetRoomsCount gets a reference to the given TemporaryResidenceFieldsRoomsCount and assigns it to the RoomsCount field.
func (o *PostTemporaryResidenceFields) SetRoomsCount(v TemporaryResidenceFieldsRoomsCount) {
	o.RoomsCount = &v
}

func (o PostTemporaryResidenceFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTemporaryResidenceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	if !IsNil(o.ExtraPersonCapacity) {
		toSerialize["extra_person_capacity"] = o.ExtraPersonCapacity
	}
	if !IsNil(o.HasOwnImage) {
		toSerialize["has_own_image"] = o.HasOwnImage
	}
	if !IsNil(o.PriceCostPerExtraPerson) {
		toSerialize["price_cost_per_extra_person"] = o.PriceCostPerExtraPerson
	}
	if !IsNil(o.PriceRegularDays) {
		toSerialize["price_regular_days"] = o.PriceRegularDays
	}
	if !IsNil(o.PriceSpecialDays) {
		toSerialize["price_special_days"] = o.PriceSpecialDays
	}
	if !IsNil(o.PriceWeekends) {
		toSerialize["price_weekends"] = o.PriceWeekends
	}
	if !IsNil(o.RegularPersonCapacity) {
		toSerialize["regular_person_capacity"] = o.RegularPersonCapacity
	}
	if !IsNil(o.RoomsCount) {
		toSerialize["rooms_count"] = o.RoomsCount
	}
	return toSerialize, nil
}

type NullablePostTemporaryResidenceFields struct {
	value *PostTemporaryResidenceFields
	isSet bool
}

func (v NullablePostTemporaryResidenceFields) Get() *PostTemporaryResidenceFields {
	return v.value
}

func (v *NullablePostTemporaryResidenceFields) Set(val *PostTemporaryResidenceFields) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTemporaryResidenceFields) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTemporaryResidenceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTemporaryResidenceFields(val *PostTemporaryResidenceFields) *NullablePostTemporaryResidenceFields {
	return &NullablePostTemporaryResidenceFields{value: val, isSet: true}
}

func (v NullablePostTemporaryResidenceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTemporaryResidenceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


