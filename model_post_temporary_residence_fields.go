/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostTemporaryResidenceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTemporaryResidenceFields{}

// PostTemporaryResidenceFields struct for PostTemporaryResidenceFields
type PostTemporaryResidenceFields struct {
	// متراژ اقامتگاه به متر مربع
	Area int32 `json:"area"`
	// تعداد افراد اضافه مجاز در اقامتگاه
	ExtraPersonCapacity int32 `json:"extra_person_capacity"`
	// تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
	HasOwnImage bool `json:"has_own_image"`
	// هزینه هر نفر اضافه به ازای هر شب به تومان
	PriceCostPerExtraPerson string `json:"price_cost_per_extra_person"`
	// قیمت اقامتگاه در روزهای عادی (شنبه تا سه‌شنبه) به تومان
	PriceRegularDays string `json:"price_regular_days"`
	// قیمت اقامتگاه در روزهای خاص (تعطیلات و مناسبت‌ها) به تومان
	PriceSpecialDays string `json:"price_special_days"`
	// قیمت اقامتگاه در آخر هفته (چهارشنبه تا جمعه) به تومان
	PriceWeekends string `json:"price_weekends"`
	// ظرفیت استاندارد افراد در اقامتگاه
	RegularPersonCapacity int32 `json:"regular_person_capacity"`
	RoomsCount PostRoomsCount `json:"rooms_count"`
	// Check-in time
	CheckInTime *string `json:"check_in_time,omitempty"`
	// Check-out time
	CheckOutTime *string `json:"check_out_time,omitempty"`
	ComfortAmenities []TemporaryResidenceFieldsComfortAmenity `json:"comfort_amenities,omitempty"`
	// Damage deposit amount in Toman
	DamageDeposit *string `json:"damage_deposit,omitempty"`
	// Whether the residence is fully furnished
	FullyFurnished *bool `json:"fully_furnished,omitempty"`
	HeatingCoolingSystem []TemporaryResidenceFieldsHeatingCoolingSystem `json:"heating_cooling_system,omitempty"`
	// House rules and regulations
	HouseRules *string `json:"house_rules,omitempty"`
	// Minimum number of days required for stay
	MinimumStay *int32 `json:"minimum_stay,omitempty"`
	PetsAllowed *TemporaryResidenceFieldsPetsAllowed `json:"pets_allowed,omitempty"`
	RentalPeriod *TemporaryResidenceFieldsRentalPeriod `json:"rental_period,omitempty"`
}

type _PostTemporaryResidenceFields PostTemporaryResidenceFields

// NewPostTemporaryResidenceFields instantiates a new PostTemporaryResidenceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTemporaryResidenceFields(area int32, extraPersonCapacity int32, hasOwnImage bool, priceCostPerExtraPerson string, priceRegularDays string, priceSpecialDays string, priceWeekends string, regularPersonCapacity int32, roomsCount PostRoomsCount) *PostTemporaryResidenceFields {
	this := PostTemporaryResidenceFields{}
	this.Area = area
	this.ExtraPersonCapacity = extraPersonCapacity
	this.HasOwnImage = hasOwnImage
	this.PriceCostPerExtraPerson = priceCostPerExtraPerson
	this.PriceRegularDays = priceRegularDays
	this.PriceSpecialDays = priceSpecialDays
	this.PriceWeekends = priceWeekends
	this.RegularPersonCapacity = regularPersonCapacity
	this.RoomsCount = roomsCount
	return &this
}

// NewPostTemporaryResidenceFieldsWithDefaults instantiates a new PostTemporaryResidenceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTemporaryResidenceFieldsWithDefaults() *PostTemporaryResidenceFields {
	this := PostTemporaryResidenceFields{}
	return &this
}

// GetArea returns the Area field value
func (o *PostTemporaryResidenceFields) GetArea() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Area
}

// GetAreaOk returns a tuple with the Area field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetAreaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Area, true
}

// SetArea sets field value
func (o *PostTemporaryResidenceFields) SetArea(v int32) {
	o.Area = v
}

// GetExtraPersonCapacity returns the ExtraPersonCapacity field value
func (o *PostTemporaryResidenceFields) GetExtraPersonCapacity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExtraPersonCapacity
}

// GetExtraPersonCapacityOk returns a tuple with the ExtraPersonCapacity field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetExtraPersonCapacityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtraPersonCapacity, true
}

// SetExtraPersonCapacity sets field value
func (o *PostTemporaryResidenceFields) SetExtraPersonCapacity(v int32) {
	o.ExtraPersonCapacity = v
}

// GetHasOwnImage returns the HasOwnImage field value
func (o *PostTemporaryResidenceFields) GetHasOwnImage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasOwnImage
}

// GetHasOwnImageOk returns a tuple with the HasOwnImage field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetHasOwnImageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasOwnImage, true
}

// SetHasOwnImage sets field value
func (o *PostTemporaryResidenceFields) SetHasOwnImage(v bool) {
	o.HasOwnImage = v
}

// GetPriceCostPerExtraPerson returns the PriceCostPerExtraPerson field value
func (o *PostTemporaryResidenceFields) GetPriceCostPerExtraPerson() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceCostPerExtraPerson
}

// GetPriceCostPerExtraPersonOk returns a tuple with the PriceCostPerExtraPerson field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceCostPerExtraPersonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceCostPerExtraPerson, true
}

// SetPriceCostPerExtraPerson sets field value
func (o *PostTemporaryResidenceFields) SetPriceCostPerExtraPerson(v string) {
	o.PriceCostPerExtraPerson = v
}

// GetPriceRegularDays returns the PriceRegularDays field value
func (o *PostTemporaryResidenceFields) GetPriceRegularDays() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceRegularDays
}

// GetPriceRegularDaysOk returns a tuple with the PriceRegularDays field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceRegularDaysOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceRegularDays, true
}

// SetPriceRegularDays sets field value
func (o *PostTemporaryResidenceFields) SetPriceRegularDays(v string) {
	o.PriceRegularDays = v
}

// GetPriceSpecialDays returns the PriceSpecialDays field value
func (o *PostTemporaryResidenceFields) GetPriceSpecialDays() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceSpecialDays
}

// GetPriceSpecialDaysOk returns a tuple with the PriceSpecialDays field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceSpecialDaysOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceSpecialDays, true
}

// SetPriceSpecialDays sets field value
func (o *PostTemporaryResidenceFields) SetPriceSpecialDays(v string) {
	o.PriceSpecialDays = v
}

// GetPriceWeekends returns the PriceWeekends field value
func (o *PostTemporaryResidenceFields) GetPriceWeekends() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceWeekends
}

// GetPriceWeekendsOk returns a tuple with the PriceWeekends field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPriceWeekendsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceWeekends, true
}

// SetPriceWeekends sets field value
func (o *PostTemporaryResidenceFields) SetPriceWeekends(v string) {
	o.PriceWeekends = v
}

// GetRegularPersonCapacity returns the RegularPersonCapacity field value
func (o *PostTemporaryResidenceFields) GetRegularPersonCapacity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RegularPersonCapacity
}

// GetRegularPersonCapacityOk returns a tuple with the RegularPersonCapacity field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetRegularPersonCapacityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegularPersonCapacity, true
}

// SetRegularPersonCapacity sets field value
func (o *PostTemporaryResidenceFields) SetRegularPersonCapacity(v int32) {
	o.RegularPersonCapacity = v
}

// GetRoomsCount returns the RoomsCount field value
func (o *PostTemporaryResidenceFields) GetRoomsCount() PostRoomsCount {
	if o == nil {
		var ret PostRoomsCount
		return ret
	}

	return o.RoomsCount
}

// GetRoomsCountOk returns a tuple with the RoomsCount field value
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetRoomsCountOk() (*PostRoomsCount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomsCount, true
}

// SetRoomsCount sets field value
func (o *PostTemporaryResidenceFields) SetRoomsCount(v PostRoomsCount) {
	o.RoomsCount = v
}

// GetCheckInTime returns the CheckInTime field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetCheckInTime() string {
	if o == nil || IsNil(o.CheckInTime) {
		var ret string
		return ret
	}
	return *o.CheckInTime
}

// GetCheckInTimeOk returns a tuple with the CheckInTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetCheckInTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CheckInTime) {
		return nil, false
	}
	return o.CheckInTime, true
}

// HasCheckInTime returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasCheckInTime() bool {
	if o != nil && !IsNil(o.CheckInTime) {
		return true
	}

	return false
}

// SetCheckInTime gets a reference to the given string and assigns it to the CheckInTime field.
func (o *PostTemporaryResidenceFields) SetCheckInTime(v string) {
	o.CheckInTime = &v
}

// GetCheckOutTime returns the CheckOutTime field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetCheckOutTime() string {
	if o == nil || IsNil(o.CheckOutTime) {
		var ret string
		return ret
	}
	return *o.CheckOutTime
}

// GetCheckOutTimeOk returns a tuple with the CheckOutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetCheckOutTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CheckOutTime) {
		return nil, false
	}
	return o.CheckOutTime, true
}

// HasCheckOutTime returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasCheckOutTime() bool {
	if o != nil && !IsNil(o.CheckOutTime) {
		return true
	}

	return false
}

// SetCheckOutTime gets a reference to the given string and assigns it to the CheckOutTime field.
func (o *PostTemporaryResidenceFields) SetCheckOutTime(v string) {
	o.CheckOutTime = &v
}

// GetComfortAmenities returns the ComfortAmenities field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetComfortAmenities() []TemporaryResidenceFieldsComfortAmenity {
	if o == nil || IsNil(o.ComfortAmenities) {
		var ret []TemporaryResidenceFieldsComfortAmenity
		return ret
	}
	return o.ComfortAmenities
}

// GetComfortAmenitiesOk returns a tuple with the ComfortAmenities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetComfortAmenitiesOk() ([]TemporaryResidenceFieldsComfortAmenity, bool) {
	if o == nil || IsNil(o.ComfortAmenities) {
		return nil, false
	}
	return o.ComfortAmenities, true
}

// HasComfortAmenities returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasComfortAmenities() bool {
	if o != nil && !IsNil(o.ComfortAmenities) {
		return true
	}

	return false
}

// SetComfortAmenities gets a reference to the given []TemporaryResidenceFieldsComfortAmenity and assigns it to the ComfortAmenities field.
func (o *PostTemporaryResidenceFields) SetComfortAmenities(v []TemporaryResidenceFieldsComfortAmenity) {
	o.ComfortAmenities = v
}

// GetDamageDeposit returns the DamageDeposit field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetDamageDeposit() string {
	if o == nil || IsNil(o.DamageDeposit) {
		var ret string
		return ret
	}
	return *o.DamageDeposit
}

// GetDamageDepositOk returns a tuple with the DamageDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetDamageDepositOk() (*string, bool) {
	if o == nil || IsNil(o.DamageDeposit) {
		return nil, false
	}
	return o.DamageDeposit, true
}

// HasDamageDeposit returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasDamageDeposit() bool {
	if o != nil && !IsNil(o.DamageDeposit) {
		return true
	}

	return false
}

// SetDamageDeposit gets a reference to the given string and assigns it to the DamageDeposit field.
func (o *PostTemporaryResidenceFields) SetDamageDeposit(v string) {
	o.DamageDeposit = &v
}

// GetFullyFurnished returns the FullyFurnished field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetFullyFurnished() bool {
	if o == nil || IsNil(o.FullyFurnished) {
		var ret bool
		return ret
	}
	return *o.FullyFurnished
}

// GetFullyFurnishedOk returns a tuple with the FullyFurnished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetFullyFurnishedOk() (*bool, bool) {
	if o == nil || IsNil(o.FullyFurnished) {
		return nil, false
	}
	return o.FullyFurnished, true
}

// HasFullyFurnished returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasFullyFurnished() bool {
	if o != nil && !IsNil(o.FullyFurnished) {
		return true
	}

	return false
}

// SetFullyFurnished gets a reference to the given bool and assigns it to the FullyFurnished field.
func (o *PostTemporaryResidenceFields) SetFullyFurnished(v bool) {
	o.FullyFurnished = &v
}

// GetHeatingCoolingSystem returns the HeatingCoolingSystem field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetHeatingCoolingSystem() []TemporaryResidenceFieldsHeatingCoolingSystem {
	if o == nil || IsNil(o.HeatingCoolingSystem) {
		var ret []TemporaryResidenceFieldsHeatingCoolingSystem
		return ret
	}
	return o.HeatingCoolingSystem
}

// GetHeatingCoolingSystemOk returns a tuple with the HeatingCoolingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetHeatingCoolingSystemOk() ([]TemporaryResidenceFieldsHeatingCoolingSystem, bool) {
	if o == nil || IsNil(o.HeatingCoolingSystem) {
		return nil, false
	}
	return o.HeatingCoolingSystem, true
}

// HasHeatingCoolingSystem returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasHeatingCoolingSystem() bool {
	if o != nil && !IsNil(o.HeatingCoolingSystem) {
		return true
	}

	return false
}

// SetHeatingCoolingSystem gets a reference to the given []TemporaryResidenceFieldsHeatingCoolingSystem and assigns it to the HeatingCoolingSystem field.
func (o *PostTemporaryResidenceFields) SetHeatingCoolingSystem(v []TemporaryResidenceFieldsHeatingCoolingSystem) {
	o.HeatingCoolingSystem = v
}

// GetHouseRules returns the HouseRules field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetHouseRules() string {
	if o == nil || IsNil(o.HouseRules) {
		var ret string
		return ret
	}
	return *o.HouseRules
}

// GetHouseRulesOk returns a tuple with the HouseRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetHouseRulesOk() (*string, bool) {
	if o == nil || IsNil(o.HouseRules) {
		return nil, false
	}
	return o.HouseRules, true
}

// HasHouseRules returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasHouseRules() bool {
	if o != nil && !IsNil(o.HouseRules) {
		return true
	}

	return false
}

// SetHouseRules gets a reference to the given string and assigns it to the HouseRules field.
func (o *PostTemporaryResidenceFields) SetHouseRules(v string) {
	o.HouseRules = &v
}

// GetMinimumStay returns the MinimumStay field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetMinimumStay() int32 {
	if o == nil || IsNil(o.MinimumStay) {
		var ret int32
		return ret
	}
	return *o.MinimumStay
}

// GetMinimumStayOk returns a tuple with the MinimumStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetMinimumStayOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumStay) {
		return nil, false
	}
	return o.MinimumStay, true
}

// HasMinimumStay returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasMinimumStay() bool {
	if o != nil && !IsNil(o.MinimumStay) {
		return true
	}

	return false
}

// SetMinimumStay gets a reference to the given int32 and assigns it to the MinimumStay field.
func (o *PostTemporaryResidenceFields) SetMinimumStay(v int32) {
	o.MinimumStay = &v
}

// GetPetsAllowed returns the PetsAllowed field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetPetsAllowed() TemporaryResidenceFieldsPetsAllowed {
	if o == nil || IsNil(o.PetsAllowed) {
		var ret TemporaryResidenceFieldsPetsAllowed
		return ret
	}
	return *o.PetsAllowed
}

// GetPetsAllowedOk returns a tuple with the PetsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetPetsAllowedOk() (*TemporaryResidenceFieldsPetsAllowed, bool) {
	if o == nil || IsNil(o.PetsAllowed) {
		return nil, false
	}
	return o.PetsAllowed, true
}

// HasPetsAllowed returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasPetsAllowed() bool {
	if o != nil && !IsNil(o.PetsAllowed) {
		return true
	}

	return false
}

// SetPetsAllowed gets a reference to the given TemporaryResidenceFieldsPetsAllowed and assigns it to the PetsAllowed field.
func (o *PostTemporaryResidenceFields) SetPetsAllowed(v TemporaryResidenceFieldsPetsAllowed) {
	o.PetsAllowed = &v
}

// GetRentalPeriod returns the RentalPeriod field value if set, zero value otherwise.
func (o *PostTemporaryResidenceFields) GetRentalPeriod() TemporaryResidenceFieldsRentalPeriod {
	if o == nil || IsNil(o.RentalPeriod) {
		var ret TemporaryResidenceFieldsRentalPeriod
		return ret
	}
	return *o.RentalPeriod
}

// GetRentalPeriodOk returns a tuple with the RentalPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTemporaryResidenceFields) GetRentalPeriodOk() (*TemporaryResidenceFieldsRentalPeriod, bool) {
	if o == nil || IsNil(o.RentalPeriod) {
		return nil, false
	}
	return o.RentalPeriod, true
}

// HasRentalPeriod returns a boolean if a field has been set.
func (o *PostTemporaryResidenceFields) HasRentalPeriod() bool {
	if o != nil && !IsNil(o.RentalPeriod) {
		return true
	}

	return false
}

// SetRentalPeriod gets a reference to the given TemporaryResidenceFieldsRentalPeriod and assigns it to the RentalPeriod field.
func (o *PostTemporaryResidenceFields) SetRentalPeriod(v TemporaryResidenceFieldsRentalPeriod) {
	o.RentalPeriod = &v
}

func (o PostTemporaryResidenceFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTemporaryResidenceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["area"] = o.Area
	toSerialize["extra_person_capacity"] = o.ExtraPersonCapacity
	toSerialize["has_own_image"] = o.HasOwnImage
	toSerialize["price_cost_per_extra_person"] = o.PriceCostPerExtraPerson
	toSerialize["price_regular_days"] = o.PriceRegularDays
	toSerialize["price_special_days"] = o.PriceSpecialDays
	toSerialize["price_weekends"] = o.PriceWeekends
	toSerialize["regular_person_capacity"] = o.RegularPersonCapacity
	toSerialize["rooms_count"] = o.RoomsCount
	if !IsNil(o.CheckInTime) {
		toSerialize["check_in_time"] = o.CheckInTime
	}
	if !IsNil(o.CheckOutTime) {
		toSerialize["check_out_time"] = o.CheckOutTime
	}
	if !IsNil(o.ComfortAmenities) {
		toSerialize["comfort_amenities"] = o.ComfortAmenities
	}
	if !IsNil(o.DamageDeposit) {
		toSerialize["damage_deposit"] = o.DamageDeposit
	}
	if !IsNil(o.FullyFurnished) {
		toSerialize["fully_furnished"] = o.FullyFurnished
	}
	if !IsNil(o.HeatingCoolingSystem) {
		toSerialize["heating_cooling_system"] = o.HeatingCoolingSystem
	}
	if !IsNil(o.HouseRules) {
		toSerialize["house_rules"] = o.HouseRules
	}
	if !IsNil(o.MinimumStay) {
		toSerialize["minimum_stay"] = o.MinimumStay
	}
	if !IsNil(o.PetsAllowed) {
		toSerialize["pets_allowed"] = o.PetsAllowed
	}
	if !IsNil(o.RentalPeriod) {
		toSerialize["rental_period"] = o.RentalPeriod
	}
	return toSerialize, nil
}

func (o *PostTemporaryResidenceFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"area",
		"extra_person_capacity",
		"has_own_image",
		"price_cost_per_extra_person",
		"price_regular_days",
		"price_special_days",
		"price_weekends",
		"regular_person_capacity",
		"rooms_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTemporaryResidenceFields := _PostTemporaryResidenceFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTemporaryResidenceFields)

	if err != nil {
		return err
	}

	*o = PostTemporaryResidenceFields(varPostTemporaryResidenceFields)

	return err
}

type NullablePostTemporaryResidenceFields struct {
	value *PostTemporaryResidenceFields
	isSet bool
}

func (v NullablePostTemporaryResidenceFields) Get() *PostTemporaryResidenceFields {
	return v.value
}

func (v *NullablePostTemporaryResidenceFields) Set(val *PostTemporaryResidenceFields) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTemporaryResidenceFields) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTemporaryResidenceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTemporaryResidenceFields(val *PostTemporaryResidenceFields) *NullablePostTemporaryResidenceFields {
	return &NullablePostTemporaryResidenceFields{value: val, isSet: true}
}

func (v NullablePostTemporaryResidenceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTemporaryResidenceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


