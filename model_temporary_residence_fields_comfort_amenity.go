/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// TemporaryResidenceFieldsComfortAmenity the model 'TemporaryResidenceFieldsComfortAmenity'
type TemporaryResidenceFieldsComfortAmenity string

// List of TemporaryResidenceFieldsComfortAmenity
const (
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_TV TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_TV"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_AUDIO_SYSTEM TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_AUDIO_SYSTEM"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_REFRIGERATOR TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_REFRIGERATOR"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_HIGH_SPEED_INTERNET TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_HIGH_SPEED_INTERNET"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_WASHING_MACHINE TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_WASHING_MACHINE"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_GAS_STOVE TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_GAS_STOVE"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_MICROWAVE TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_MICROWAVE"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_COOKING_UTENSILS TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_COOKING_UTENSILS"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_CLEAN_SHEETS_TOWELS TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_CLEAN_SHEETS_TOWELS"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_IRON TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_IRON"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_HAIR_DRYER TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_HAIR_DRYER"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_AIR_CONDITIONER TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_AIR_CONDITIONER"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_PRIVATE_PARKING TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_PRIVATE_PARKING"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_BALCONY TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_BALCONY"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_PRIVATE_BATHROOM TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_PRIVATE_BATHROOM"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_WORK_SPACE TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_WORK_SPACE"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_ELEVATOR_ACCESS TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_ELEVATOR_ACCESS"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_SECURITY_SYSTEM TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_SECURITY_SYSTEM"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_COFFEE_MAKER TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_COFFEE_MAKER"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_AIR_CONDITIONING_SYSTEM TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_AIR_CONDITIONING_SYSTEM"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_CENTRAL_HEATING TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_CENTRAL_HEATING"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_DISHWASHER TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_DISHWASHER"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_POOL TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_POOL"
	TEMPORARYRESIDENCEFIELDSCOMFORTAMENITY_COMFORT_AMENITY_OUTDOOR_SPACE TemporaryResidenceFieldsComfortAmenity = "COMFORT_AMENITY_OUTDOOR_SPACE"
)

// All allowed values of TemporaryResidenceFieldsComfortAmenity enum
var AllowedTemporaryResidenceFieldsComfortAmenityEnumValues = []TemporaryResidenceFieldsComfortAmenity{
	"COMFORT_AMENITY_TV",
	"COMFORT_AMENITY_AUDIO_SYSTEM",
	"COMFORT_AMENITY_REFRIGERATOR",
	"COMFORT_AMENITY_HIGH_SPEED_INTERNET",
	"COMFORT_AMENITY_WASHING_MACHINE",
	"COMFORT_AMENITY_GAS_STOVE",
	"COMFORT_AMENITY_MICROWAVE",
	"COMFORT_AMENITY_COOKING_UTENSILS",
	"COMFORT_AMENITY_CLEAN_SHEETS_TOWELS",
	"COMFORT_AMENITY_IRON",
	"COMFORT_AMENITY_HAIR_DRYER",
	"COMFORT_AMENITY_AIR_CONDITIONER",
	"COMFORT_AMENITY_PRIVATE_PARKING",
	"COMFORT_AMENITY_BALCONY",
	"COMFORT_AMENITY_PRIVATE_BATHROOM",
	"COMFORT_AMENITY_WORK_SPACE",
	"COMFORT_AMENITY_ELEVATOR_ACCESS",
	"COMFORT_AMENITY_SECURITY_SYSTEM",
	"COMFORT_AMENITY_COFFEE_MAKER",
	"COMFORT_AMENITY_AIR_CONDITIONING_SYSTEM",
	"COMFORT_AMENITY_CENTRAL_HEATING",
	"COMFORT_AMENITY_DISHWASHER",
	"COMFORT_AMENITY_POOL",
	"COMFORT_AMENITY_OUTDOOR_SPACE",
}

func (v *TemporaryResidenceFieldsComfortAmenity) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TemporaryResidenceFieldsComfortAmenity(value)
	for _, existing := range AllowedTemporaryResidenceFieldsComfortAmenityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TemporaryResidenceFieldsComfortAmenity", value)
}

// NewTemporaryResidenceFieldsComfortAmenityFromValue returns a pointer to a valid TemporaryResidenceFieldsComfortAmenity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTemporaryResidenceFieldsComfortAmenityFromValue(v string) (*TemporaryResidenceFieldsComfortAmenity, error) {
	ev := TemporaryResidenceFieldsComfortAmenity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TemporaryResidenceFieldsComfortAmenity: valid values are %v", v, AllowedTemporaryResidenceFieldsComfortAmenityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TemporaryResidenceFieldsComfortAmenity) IsValid() bool {
	for _, existing := range AllowedTemporaryResidenceFieldsComfortAmenityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TemporaryResidenceFieldsComfortAmenity value
func (v TemporaryResidenceFieldsComfortAmenity) Ptr() *TemporaryResidenceFieldsComfortAmenity {
	return &v
}

type NullableTemporaryResidenceFieldsComfortAmenity struct {
	value *TemporaryResidenceFieldsComfortAmenity
	isSet bool
}

func (v NullableTemporaryResidenceFieldsComfortAmenity) Get() *TemporaryResidenceFieldsComfortAmenity {
	return v.value
}

func (v *NullableTemporaryResidenceFieldsComfortAmenity) Set(val *TemporaryResidenceFieldsComfortAmenity) {
	v.value = val
	v.isSet = true
}

func (v NullableTemporaryResidenceFieldsComfortAmenity) IsSet() bool {
	return v.isSet
}

func (v *NullableTemporaryResidenceFieldsComfortAmenity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemporaryResidenceFieldsComfortAmenity(val *TemporaryResidenceFieldsComfortAmenity) *NullableTemporaryResidenceFieldsComfortAmenity {
	return &NullableTemporaryResidenceFieldsComfortAmenity{value: val, isSet: true}
}

func (v NullableTemporaryResidenceFieldsComfortAmenity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemporaryResidenceFieldsComfortAmenity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

