/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"time"
)

// checks if the AddonsAddonMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsAddonMetaData{}

// AddonsAddonMetaData struct for AddonsAddonMetaData
type AddonsAddonMetaData struct {
	Id *string `json:"id,omitempty"`
	App *AppsApp `json:"app,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	LastModified *time.Time `json:"last_modified,omitempty"`
	Status *AddonsStatus `json:"status,omitempty"`
	ServiceTags []AppsServiceTag `json:"service_tags,omitempty"`
}

// NewAddonsAddonMetaData instantiates a new AddonsAddonMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsAddonMetaData() *AddonsAddonMetaData {
	this := AddonsAddonMetaData{}
	return &this
}

// NewAddonsAddonMetaDataWithDefaults instantiates a new AddonsAddonMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsAddonMetaDataWithDefaults() *AddonsAddonMetaData {
	this := AddonsAddonMetaData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddonsAddonMetaData) SetId(v string) {
	o.Id = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetApp() AppsApp {
	if o == nil || IsNil(o.App) {
		var ret AppsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetAppOk() (*AppsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppsApp and assigns it to the App field.
func (o *AddonsAddonMetaData) SetApp(v AppsApp) {
	o.App = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AddonsAddonMetaData) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetLastModified() time.Time {
	if o == nil || IsNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *AddonsAddonMetaData) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetStatus() AddonsStatus {
	if o == nil || IsNil(o.Status) {
		var ret AddonsStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetStatusOk() (*AddonsStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AddonsStatus and assigns it to the Status field.
func (o *AddonsAddonMetaData) SetStatus(v AddonsStatus) {
	o.Status = &v
}

// GetServiceTags returns the ServiceTags field value if set, zero value otherwise.
func (o *AddonsAddonMetaData) GetServiceTags() []AppsServiceTag {
	if o == nil || IsNil(o.ServiceTags) {
		var ret []AppsServiceTag
		return ret
	}
	return o.ServiceTags
}

// GetServiceTagsOk returns a tuple with the ServiceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonMetaData) GetServiceTagsOk() ([]AppsServiceTag, bool) {
	if o == nil || IsNil(o.ServiceTags) {
		return nil, false
	}
	return o.ServiceTags, true
}

// HasServiceTags returns a boolean if a field has been set.
func (o *AddonsAddonMetaData) HasServiceTags() bool {
	if o != nil && !IsNil(o.ServiceTags) {
		return true
	}

	return false
}

// SetServiceTags gets a reference to the given []AppsServiceTag and assigns it to the ServiceTags field.
func (o *AddonsAddonMetaData) SetServiceTags(v []AppsServiceTag) {
	o.ServiceTags = v
}

func (o AddonsAddonMetaData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsAddonMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ServiceTags) {
		toSerialize["service_tags"] = o.ServiceTags
	}
	return toSerialize, nil
}

type NullableAddonsAddonMetaData struct {
	value *AddonsAddonMetaData
	isSet bool
}

func (v NullableAddonsAddonMetaData) Get() *AddonsAddonMetaData {
	return v.value
}

func (v *NullableAddonsAddonMetaData) Set(val *AddonsAddonMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsAddonMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsAddonMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsAddonMetaData(val *AddonsAddonMetaData) *NullableAddonsAddonMetaData {
	return &NullableAddonsAddonMetaData{value: val, isSet: true}
}

func (v NullableAddonsAddonMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsAddonMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


