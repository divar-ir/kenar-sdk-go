/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the GetPostStatsResponseDailyStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPostStatsResponseDailyStats{}

// GetPostStatsResponseDailyStats struct for GetPostStatsResponseDailyStats
type GetPostStatsResponseDailyStats struct {
	// تعداد روزانه‌ی آمار مورد نظر (مثلا بازدید)
	Count *int32 `json:"count,omitempty"`
	// تاریخ به فرمت YYYY-MM-DD
	Date *string `json:"date,omitempty"`
}

// NewGetPostStatsResponseDailyStats instantiates a new GetPostStatsResponseDailyStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPostStatsResponseDailyStats() *GetPostStatsResponseDailyStats {
	this := GetPostStatsResponseDailyStats{}
	return &this
}

// NewGetPostStatsResponseDailyStatsWithDefaults instantiates a new GetPostStatsResponseDailyStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPostStatsResponseDailyStatsWithDefaults() *GetPostStatsResponseDailyStats {
	this := GetPostStatsResponseDailyStats{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetPostStatsResponseDailyStats) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostStatsResponseDailyStats) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetPostStatsResponseDailyStats) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GetPostStatsResponseDailyStats) SetCount(v int32) {
	o.Count = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetPostStatsResponseDailyStats) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostStatsResponseDailyStats) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetPostStatsResponseDailyStats) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *GetPostStatsResponseDailyStats) SetDate(v string) {
	o.Date = &v
}

func (o GetPostStatsResponseDailyStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPostStatsResponseDailyStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	return toSerialize, nil
}

type NullableGetPostStatsResponseDailyStats struct {
	value *GetPostStatsResponseDailyStats
	isSet bool
}

func (v NullableGetPostStatsResponseDailyStats) Get() *GetPostStatsResponseDailyStats {
	return v.value
}

func (v *NullableGetPostStatsResponseDailyStats) Set(val *GetPostStatsResponseDailyStats) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPostStatsResponseDailyStats) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPostStatsResponseDailyStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPostStatsResponseDailyStats(val *GetPostStatsResponseDailyStats) *NullableGetPostStatsResponseDailyStats {
	return &NullableGetPostStatsResponseDailyStats{value: val, isSet: true}
}

func (v NullableGetPostStatsResponseDailyStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPostStatsResponseDailyStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


