/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsCreateUserAddonV2Body type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsCreateUserAddonV2Body{}

// AddonsCreateUserAddonV2Body struct for AddonsCreateUserAddonV2Body
type AddonsCreateUserAddonV2Body struct {
	Widgets []AddonsWidget `json:"widgets,omitempty"`
	Semantic *map[string]string `json:"semantic,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Categories []string `json:"categories,omitempty"`
	TicketUuid *string `json:"ticket_uuid,omitempty"`
	Cost *int32 `json:"cost,omitempty"`
}

// NewAddonsCreateUserAddonV2Body instantiates a new AddonsCreateUserAddonV2Body object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsCreateUserAddonV2Body() *AddonsCreateUserAddonV2Body {
	this := AddonsCreateUserAddonV2Body{}
	return &this
}

// NewAddonsCreateUserAddonV2BodyWithDefaults instantiates a new AddonsCreateUserAddonV2Body object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsCreateUserAddonV2BodyWithDefaults() *AddonsCreateUserAddonV2Body {
	this := AddonsCreateUserAddonV2Body{}
	return &this
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetWidgets() []AddonsWidget {
	if o == nil || IsNil(o.Widgets) {
		var ret []AddonsWidget
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetWidgetsOk() ([]AddonsWidget, bool) {
	if o == nil || IsNil(o.Widgets) {
		return nil, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given []AddonsWidget and assigns it to the Widgets field.
func (o *AddonsCreateUserAddonV2Body) SetWidgets(v []AddonsWidget) {
	o.Widgets = v
}

// GetSemantic returns the Semantic field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetSemantic() map[string]string {
	if o == nil || IsNil(o.Semantic) {
		var ret map[string]string
		return ret
	}
	return *o.Semantic
}

// GetSemanticOk returns a tuple with the Semantic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetSemanticOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Semantic) {
		return nil, false
	}
	return o.Semantic, true
}

// HasSemantic returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasSemantic() bool {
	if o != nil && !IsNil(o.Semantic) {
		return true
	}

	return false
}

// SetSemantic gets a reference to the given map[string]string and assigns it to the Semantic field.
func (o *AddonsCreateUserAddonV2Body) SetSemantic(v map[string]string) {
	o.Semantic = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *AddonsCreateUserAddonV2Body) SetPhone(v string) {
	o.Phone = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *AddonsCreateUserAddonV2Body) SetCategories(v []string) {
	o.Categories = v
}

// GetTicketUuid returns the TicketUuid field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetTicketUuid() string {
	if o == nil || IsNil(o.TicketUuid) {
		var ret string
		return ret
	}
	return *o.TicketUuid
}

// GetTicketUuidOk returns a tuple with the TicketUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetTicketUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TicketUuid) {
		return nil, false
	}
	return o.TicketUuid, true
}

// HasTicketUuid returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasTicketUuid() bool {
	if o != nil && !IsNil(o.TicketUuid) {
		return true
	}

	return false
}

// SetTicketUuid gets a reference to the given string and assigns it to the TicketUuid field.
func (o *AddonsCreateUserAddonV2Body) SetTicketUuid(v string) {
	o.TicketUuid = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *AddonsCreateUserAddonV2Body) GetCost() int32 {
	if o == nil || IsNil(o.Cost) {
		var ret int32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsCreateUserAddonV2Body) GetCostOk() (*int32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *AddonsCreateUserAddonV2Body) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given int32 and assigns it to the Cost field.
func (o *AddonsCreateUserAddonV2Body) SetCost(v int32) {
	o.Cost = &v
}

func (o AddonsCreateUserAddonV2Body) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsCreateUserAddonV2Body) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	if !IsNil(o.Semantic) {
		toSerialize["semantic"] = o.Semantic
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.TicketUuid) {
		toSerialize["ticket_uuid"] = o.TicketUuid
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	return toSerialize, nil
}

type NullableAddonsCreateUserAddonV2Body struct {
	value *AddonsCreateUserAddonV2Body
	isSet bool
}

func (v NullableAddonsCreateUserAddonV2Body) Get() *AddonsCreateUserAddonV2Body {
	return v.value
}

func (v *NullableAddonsCreateUserAddonV2Body) Set(val *AddonsCreateUserAddonV2Body) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsCreateUserAddonV2Body) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsCreateUserAddonV2Body) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsCreateUserAddonV2Body(val *AddonsCreateUserAddonV2Body) *NullableAddonsCreateUserAddonV2Body {
	return &NullableAddonsCreateUserAddonV2Body{value: val, isSet: true}
}

func (v NullableAddonsCreateUserAddonV2Body) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsCreateUserAddonV2Body) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


