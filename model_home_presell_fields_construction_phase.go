/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// HomePresellFieldsConstructionPhase وضعیت فعلی پروژه
type HomePresellFieldsConstructionPhase string

// List of HomePresellFieldsConstructionPhase
const (
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_PERMIT_AND_LAND_PREPARATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_PERMIT_AND_LAND_PREPARATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_EXCAVATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_EXCAVATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_FOUNDATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_FOUNDATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_STRUCTURE HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_STRUCTURE"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_ROOFING HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_ROOFING"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_MASONRY HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_MASONRY"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_MEP_ROUGH_IN HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_MEP_ROUGH_IN"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_INTERIOR_PLASTERING HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_INTERIOR_PLASTERING"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_FACADE HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_FACADE"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_TILING_AND_FLOORING HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_TILING_AND_FLOORING"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_PAINTING_AND_INTERIOR_DECORATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_PAINTING_AND_INTERIOR_DECORATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_DOOR_AND_WINDOW_INSTALLATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_DOOR_AND_WINDOW_INSTALLATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_FINAL_MEP_INSTALLATION HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_FINAL_MEP_INSTALLATION"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_LANDSCAPING HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_LANDSCAPING"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_COMPLETION_CERTIFICATE HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_COMPLETION_CERTIFICATE"
	HOMEPRESELLFIELDSCONSTRUCTIONPHASE_CONSTRUCTION_PHASE_FINAL_DELIVERY HomePresellFieldsConstructionPhase = "CONSTRUCTION_PHASE_FINAL_DELIVERY"
)

// All allowed values of HomePresellFieldsConstructionPhase enum
var AllowedHomePresellFieldsConstructionPhaseEnumValues = []HomePresellFieldsConstructionPhase{
	"CONSTRUCTION_PHASE_PERMIT_AND_LAND_PREPARATION",
	"CONSTRUCTION_PHASE_EXCAVATION",
	"CONSTRUCTION_PHASE_FOUNDATION",
	"CONSTRUCTION_PHASE_STRUCTURE",
	"CONSTRUCTION_PHASE_ROOFING",
	"CONSTRUCTION_PHASE_MASONRY",
	"CONSTRUCTION_PHASE_MEP_ROUGH_IN",
	"CONSTRUCTION_PHASE_INTERIOR_PLASTERING",
	"CONSTRUCTION_PHASE_FACADE",
	"CONSTRUCTION_PHASE_TILING_AND_FLOORING",
	"CONSTRUCTION_PHASE_PAINTING_AND_INTERIOR_DECORATION",
	"CONSTRUCTION_PHASE_DOOR_AND_WINDOW_INSTALLATION",
	"CONSTRUCTION_PHASE_FINAL_MEP_INSTALLATION",
	"CONSTRUCTION_PHASE_LANDSCAPING",
	"CONSTRUCTION_PHASE_COMPLETION_CERTIFICATE",
	"CONSTRUCTION_PHASE_FINAL_DELIVERY",
}

func (v *HomePresellFieldsConstructionPhase) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := HomePresellFieldsConstructionPhase(value)
	for _, existing := range AllowedHomePresellFieldsConstructionPhaseEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid HomePresellFieldsConstructionPhase", value)
}

// NewHomePresellFieldsConstructionPhaseFromValue returns a pointer to a valid HomePresellFieldsConstructionPhase
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewHomePresellFieldsConstructionPhaseFromValue(v string) (*HomePresellFieldsConstructionPhase, error) {
	ev := HomePresellFieldsConstructionPhase(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for HomePresellFieldsConstructionPhase: valid values are %v", v, AllowedHomePresellFieldsConstructionPhaseEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v HomePresellFieldsConstructionPhase) IsValid() bool {
	for _, existing := range AllowedHomePresellFieldsConstructionPhaseEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to HomePresellFieldsConstructionPhase value
func (v HomePresellFieldsConstructionPhase) Ptr() *HomePresellFieldsConstructionPhase {
	return &v
}

type NullableHomePresellFieldsConstructionPhase struct {
	value *HomePresellFieldsConstructionPhase
	isSet bool
}

func (v NullableHomePresellFieldsConstructionPhase) Get() *HomePresellFieldsConstructionPhase {
	return v.value
}

func (v *NullableHomePresellFieldsConstructionPhase) Set(val *HomePresellFieldsConstructionPhase) {
	v.value = val
	v.isSet = true
}

func (v NullableHomePresellFieldsConstructionPhase) IsSet() bool {
	return v.isSet
}

func (v *NullableHomePresellFieldsConstructionPhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHomePresellFieldsConstructionPhase(val *HomePresellFieldsConstructionPhase) *NullableHomePresellFieldsConstructionPhase {
	return &NullableHomePresellFieldsConstructionPhase{value: val, isSet: true}
}

func (v NullableHomePresellFieldsConstructionPhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHomePresellFieldsConstructionPhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

