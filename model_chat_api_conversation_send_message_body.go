/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatAPIConversationSendMessageBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatAPIConversationSendMessageBody{}

// ChatAPIConversationSendMessageBody struct for ChatAPIConversationSendMessageBody
type ChatAPIConversationSendMessageBody struct {
	// Token for attached media (if any)
	MediaToken *string `json:"media_token,omitempty"`
	// Text message content to be sent
	Message string `json:"message"`
	ReceiverButtons *ChatapiChatButtonGrid `json:"receiver_buttons,omitempty"`
	SenderButtons *ChatapiChatButtonGrid `json:"sender_buttons,omitempty"`
}

type _ChatAPIConversationSendMessageBody ChatAPIConversationSendMessageBody

// NewChatAPIConversationSendMessageBody instantiates a new ChatAPIConversationSendMessageBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatAPIConversationSendMessageBody(message string) *ChatAPIConversationSendMessageBody {
	this := ChatAPIConversationSendMessageBody{}
	this.Message = message
	return &this
}

// NewChatAPIConversationSendMessageBodyWithDefaults instantiates a new ChatAPIConversationSendMessageBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatAPIConversationSendMessageBodyWithDefaults() *ChatAPIConversationSendMessageBody {
	this := ChatAPIConversationSendMessageBody{}
	return &this
}

// GetMediaToken returns the MediaToken field value if set, zero value otherwise.
func (o *ChatAPIConversationSendMessageBody) GetMediaToken() string {
	if o == nil || IsNil(o.MediaToken) {
		var ret string
		return ret
	}
	return *o.MediaToken
}

// GetMediaTokenOk returns a tuple with the MediaToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatAPIConversationSendMessageBody) GetMediaTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MediaToken) {
		return nil, false
	}
	return o.MediaToken, true
}

// HasMediaToken returns a boolean if a field has been set.
func (o *ChatAPIConversationSendMessageBody) HasMediaToken() bool {
	if o != nil && !IsNil(o.MediaToken) {
		return true
	}

	return false
}

// SetMediaToken gets a reference to the given string and assigns it to the MediaToken field.
func (o *ChatAPIConversationSendMessageBody) SetMediaToken(v string) {
	o.MediaToken = &v
}

// GetMessage returns the Message field value
func (o *ChatAPIConversationSendMessageBody) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ChatAPIConversationSendMessageBody) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ChatAPIConversationSendMessageBody) SetMessage(v string) {
	o.Message = v
}

// GetReceiverButtons returns the ReceiverButtons field value if set, zero value otherwise.
func (o *ChatAPIConversationSendMessageBody) GetReceiverButtons() ChatapiChatButtonGrid {
	if o == nil || IsNil(o.ReceiverButtons) {
		var ret ChatapiChatButtonGrid
		return ret
	}
	return *o.ReceiverButtons
}

// GetReceiverButtonsOk returns a tuple with the ReceiverButtons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatAPIConversationSendMessageBody) GetReceiverButtonsOk() (*ChatapiChatButtonGrid, bool) {
	if o == nil || IsNil(o.ReceiverButtons) {
		return nil, false
	}
	return o.ReceiverButtons, true
}

// HasReceiverButtons returns a boolean if a field has been set.
func (o *ChatAPIConversationSendMessageBody) HasReceiverButtons() bool {
	if o != nil && !IsNil(o.ReceiverButtons) {
		return true
	}

	return false
}

// SetReceiverButtons gets a reference to the given ChatapiChatButtonGrid and assigns it to the ReceiverButtons field.
func (o *ChatAPIConversationSendMessageBody) SetReceiverButtons(v ChatapiChatButtonGrid) {
	o.ReceiverButtons = &v
}

// GetSenderButtons returns the SenderButtons field value if set, zero value otherwise.
func (o *ChatAPIConversationSendMessageBody) GetSenderButtons() ChatapiChatButtonGrid {
	if o == nil || IsNil(o.SenderButtons) {
		var ret ChatapiChatButtonGrid
		return ret
	}
	return *o.SenderButtons
}

// GetSenderButtonsOk returns a tuple with the SenderButtons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatAPIConversationSendMessageBody) GetSenderButtonsOk() (*ChatapiChatButtonGrid, bool) {
	if o == nil || IsNil(o.SenderButtons) {
		return nil, false
	}
	return o.SenderButtons, true
}

// HasSenderButtons returns a boolean if a field has been set.
func (o *ChatAPIConversationSendMessageBody) HasSenderButtons() bool {
	if o != nil && !IsNil(o.SenderButtons) {
		return true
	}

	return false
}

// SetSenderButtons gets a reference to the given ChatapiChatButtonGrid and assigns it to the SenderButtons field.
func (o *ChatAPIConversationSendMessageBody) SetSenderButtons(v ChatapiChatButtonGrid) {
	o.SenderButtons = &v
}

func (o ChatAPIConversationSendMessageBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatAPIConversationSendMessageBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediaToken) {
		toSerialize["media_token"] = o.MediaToken
	}
	toSerialize["message"] = o.Message
	if !IsNil(o.ReceiverButtons) {
		toSerialize["receiver_buttons"] = o.ReceiverButtons
	}
	if !IsNil(o.SenderButtons) {
		toSerialize["sender_buttons"] = o.SenderButtons
	}
	return toSerialize, nil
}

func (o *ChatAPIConversationSendMessageBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatAPIConversationSendMessageBody := _ChatAPIConversationSendMessageBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatAPIConversationSendMessageBody)

	if err != nil {
		return err
	}

	*o = ChatAPIConversationSendMessageBody(varChatAPIConversationSendMessageBody)

	return err
}

type NullableChatAPIConversationSendMessageBody struct {
	value *ChatAPIConversationSendMessageBody
	isSet bool
}

func (v NullableChatAPIConversationSendMessageBody) Get() *ChatAPIConversationSendMessageBody {
	return v.value
}

func (v *NullableChatAPIConversationSendMessageBody) Set(val *ChatAPIConversationSendMessageBody) {
	v.value = val
	v.isSet = true
}

func (v NullableChatAPIConversationSendMessageBody) IsSet() bool {
	return v.isSet
}

func (v *NullableChatAPIConversationSendMessageBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatAPIConversationSendMessageBody(val *ChatAPIConversationSendMessageBody) *NullableChatAPIConversationSendMessageBody {
	return &NullableChatAPIConversationSendMessageBody{value: val, isSet: true}
}

func (v NullableChatAPIConversationSendMessageBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatAPIConversationSendMessageBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


