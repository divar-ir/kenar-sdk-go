/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AppsApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppsApp{}

// AppsApp struct for AppsApp
type AppsApp struct {
	Slug *string `json:"slug,omitempty"`
	Display *string `json:"display,omitempty"`
	Avatar *string `json:"avatar,omitempty"`
	DivarIdentificationKey *string `json:"divar_identification_key,omitempty"`
	Status *AppsAppStatus `json:"status,omitempty"`
	ServiceType *AppsServiceType `json:"service_type,omitempty"`
	ServiceTags []AppsServiceTag `json:"service_tags,omitempty"`
}

// NewAppsApp instantiates a new AppsApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppsApp() *AppsApp {
	this := AppsApp{}
	return &this
}

// NewAppsAppWithDefaults instantiates a new AppsApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppsAppWithDefaults() *AppsApp {
	this := AppsApp{}
	return &this
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *AppsApp) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *AppsApp) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *AppsApp) SetSlug(v string) {
	o.Slug = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *AppsApp) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *AppsApp) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *AppsApp) SetDisplay(v string) {
	o.Display = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *AppsApp) GetAvatar() string {
	if o == nil || IsNil(o.Avatar) {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetAvatarOk() (*string, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *AppsApp) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *AppsApp) SetAvatar(v string) {
	o.Avatar = &v
}

// GetDivarIdentificationKey returns the DivarIdentificationKey field value if set, zero value otherwise.
func (o *AppsApp) GetDivarIdentificationKey() string {
	if o == nil || IsNil(o.DivarIdentificationKey) {
		var ret string
		return ret
	}
	return *o.DivarIdentificationKey
}

// GetDivarIdentificationKeyOk returns a tuple with the DivarIdentificationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetDivarIdentificationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DivarIdentificationKey) {
		return nil, false
	}
	return o.DivarIdentificationKey, true
}

// HasDivarIdentificationKey returns a boolean if a field has been set.
func (o *AppsApp) HasDivarIdentificationKey() bool {
	if o != nil && !IsNil(o.DivarIdentificationKey) {
		return true
	}

	return false
}

// SetDivarIdentificationKey gets a reference to the given string and assigns it to the DivarIdentificationKey field.
func (o *AppsApp) SetDivarIdentificationKey(v string) {
	o.DivarIdentificationKey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AppsApp) GetStatus() AppsAppStatus {
	if o == nil || IsNil(o.Status) {
		var ret AppsAppStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetStatusOk() (*AppsAppStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AppsApp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AppsAppStatus and assigns it to the Status field.
func (o *AppsApp) SetStatus(v AppsAppStatus) {
	o.Status = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *AppsApp) GetServiceType() AppsServiceType {
	if o == nil || IsNil(o.ServiceType) {
		var ret AppsServiceType
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetServiceTypeOk() (*AppsServiceType, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *AppsApp) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given AppsServiceType and assigns it to the ServiceType field.
func (o *AppsApp) SetServiceType(v AppsServiceType) {
	o.ServiceType = &v
}

// GetServiceTags returns the ServiceTags field value if set, zero value otherwise.
func (o *AppsApp) GetServiceTags() []AppsServiceTag {
	if o == nil || IsNil(o.ServiceTags) {
		var ret []AppsServiceTag
		return ret
	}
	return o.ServiceTags
}

// GetServiceTagsOk returns a tuple with the ServiceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsApp) GetServiceTagsOk() ([]AppsServiceTag, bool) {
	if o == nil || IsNil(o.ServiceTags) {
		return nil, false
	}
	return o.ServiceTags, true
}

// HasServiceTags returns a boolean if a field has been set.
func (o *AppsApp) HasServiceTags() bool {
	if o != nil && !IsNil(o.ServiceTags) {
		return true
	}

	return false
}

// SetServiceTags gets a reference to the given []AppsServiceTag and assigns it to the ServiceTags field.
func (o *AppsApp) SetServiceTags(v []AppsServiceTag) {
	o.ServiceTags = v
}

func (o AppsApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppsApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.DivarIdentificationKey) {
		toSerialize["divar_identification_key"] = o.DivarIdentificationKey
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ServiceType) {
		toSerialize["service_type"] = o.ServiceType
	}
	if !IsNil(o.ServiceTags) {
		toSerialize["service_tags"] = o.ServiceTags
	}
	return toSerialize, nil
}

type NullableAppsApp struct {
	value *AppsApp
	isSet bool
}

func (v NullableAppsApp) Get() *AppsApp {
	return v.value
}

func (v *NullableAppsApp) Set(val *AppsApp) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsApp) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsApp(val *AppsApp) *NullableAppsApp {
	return &NullableAppsApp{value: val, isSet: true}
}

func (v NullableAppsApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


