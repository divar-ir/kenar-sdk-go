/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// HomePresellFieldsDeliveryYear سال تحویل (تقویم شمسی)
type HomePresellFieldsDeliveryYear string

// List of HomePresellFieldsDeliveryYear
const (
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1404 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1404"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1405 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1405"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1406 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1406"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1407 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1407"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1408 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1408"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1409 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1409"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1410 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1410"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1411 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1411"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1412 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1412"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1413 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1413"
	HOMEPRESELLFIELDSDELIVERYYEAR_DELIVERY_YEAR_1414 HomePresellFieldsDeliveryYear = "DELIVERY_YEAR_1414"
)

// All allowed values of HomePresellFieldsDeliveryYear enum
var AllowedHomePresellFieldsDeliveryYearEnumValues = []HomePresellFieldsDeliveryYear{
	"DELIVERY_YEAR_1404",
	"DELIVERY_YEAR_1405",
	"DELIVERY_YEAR_1406",
	"DELIVERY_YEAR_1407",
	"DELIVERY_YEAR_1408",
	"DELIVERY_YEAR_1409",
	"DELIVERY_YEAR_1410",
	"DELIVERY_YEAR_1411",
	"DELIVERY_YEAR_1412",
	"DELIVERY_YEAR_1413",
	"DELIVERY_YEAR_1414",
}

func (v *HomePresellFieldsDeliveryYear) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := HomePresellFieldsDeliveryYear(value)
	for _, existing := range AllowedHomePresellFieldsDeliveryYearEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid HomePresellFieldsDeliveryYear", value)
}

// NewHomePresellFieldsDeliveryYearFromValue returns a pointer to a valid HomePresellFieldsDeliveryYear
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewHomePresellFieldsDeliveryYearFromValue(v string) (*HomePresellFieldsDeliveryYear, error) {
	ev := HomePresellFieldsDeliveryYear(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for HomePresellFieldsDeliveryYear: valid values are %v", v, AllowedHomePresellFieldsDeliveryYearEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v HomePresellFieldsDeliveryYear) IsValid() bool {
	for _, existing := range AllowedHomePresellFieldsDeliveryYearEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to HomePresellFieldsDeliveryYear value
func (v HomePresellFieldsDeliveryYear) Ptr() *HomePresellFieldsDeliveryYear {
	return &v
}

type NullableHomePresellFieldsDeliveryYear struct {
	value *HomePresellFieldsDeliveryYear
	isSet bool
}

func (v NullableHomePresellFieldsDeliveryYear) Get() *HomePresellFieldsDeliveryYear {
	return v.value
}

func (v *NullableHomePresellFieldsDeliveryYear) Set(val *HomePresellFieldsDeliveryYear) {
	v.value = val
	v.isSet = true
}

func (v NullableHomePresellFieldsDeliveryYear) IsSet() bool {
	return v.isSet
}

func (v *NullableHomePresellFieldsDeliveryYear) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHomePresellFieldsDeliveryYear(val *HomePresellFieldsDeliveryYear) *NullableHomePresellFieldsDeliveryYear {
	return &NullableHomePresellFieldsDeliveryYear{value: val, isSet: true}
}

func (v NullableHomePresellFieldsDeliveryYear) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHomePresellFieldsDeliveryYear) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

