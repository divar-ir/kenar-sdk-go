/*
divar_interface/open_platform/chatapi/chatapi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// AppsAppStatusStatus the model 'AppsAppStatusStatus'
type AppsAppStatusStatus string

// List of appsAppStatusStatus
const (
	APPSAPPSTATUSSTATUS_ACTIVE AppsAppStatusStatus = "ACTIVE"
	APPSAPPSTATUSSTATUS_INACTIVE AppsAppStatusStatus = "INACTIVE"
	APPSAPPSTATUSSTATUS_SUSPENDED AppsAppStatusStatus = "SUSPENDED"
	APPSAPPSTATUSSTATUS_DEVELOPMENT AppsAppStatusStatus = "DEVELOPMENT"
)

// All allowed values of AppsAppStatusStatus enum
var AllowedAppsAppStatusStatusEnumValues = []AppsAppStatusStatus{
	"ACTIVE",
	"INACTIVE",
	"SUSPENDED",
	"DEVELOPMENT",
}

func (v *AppsAppStatusStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppsAppStatusStatus(value)
	for _, existing := range AllowedAppsAppStatusStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppsAppStatusStatus", value)
}

// NewAppsAppStatusStatusFromValue returns a pointer to a valid AppsAppStatusStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAppsAppStatusStatusFromValue(v string) (*AppsAppStatusStatus, error) {
	ev := AppsAppStatusStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AppsAppStatusStatus: valid values are %v", v, AllowedAppsAppStatusStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AppsAppStatusStatus) IsValid() bool {
	for _, existing := range AllowedAppsAppStatusStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to appsAppStatusStatus value
func (v AppsAppStatusStatus) Ptr() *AppsAppStatusStatus {
	return &v
}

type NullableAppsAppStatusStatus struct {
	value *AppsAppStatusStatus
	isSet bool
}

func (v NullableAppsAppStatusStatus) Get() *AppsAppStatusStatus {
	return v.value
}

func (v *NullableAppsAppStatusStatus) Set(val *AppsAppStatusStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsAppStatusStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsAppStatusStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsAppStatusStatus(val *AppsAppStatusStatus) *NullableAppsAppStatusStatus {
	return &NullableAppsAppStatusStatus{value: val, isSet: true}
}

func (v NullableAppsAppStatusStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsAppStatusStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

