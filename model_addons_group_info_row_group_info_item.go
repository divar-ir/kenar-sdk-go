/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsGroupInfoRowGroupInfoItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsGroupInfoRowGroupInfoItem{}

// AddonsGroupInfoRowGroupInfoItem struct for AddonsGroupInfoRowGroupInfoItem
type AddonsGroupInfoRowGroupInfoItem struct {
	Title *string `json:"title,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAddonsGroupInfoRowGroupInfoItem instantiates a new AddonsGroupInfoRowGroupInfoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsGroupInfoRowGroupInfoItem() *AddonsGroupInfoRowGroupInfoItem {
	this := AddonsGroupInfoRowGroupInfoItem{}
	return &this
}

// NewAddonsGroupInfoRowGroupInfoItemWithDefaults instantiates a new AddonsGroupInfoRowGroupInfoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsGroupInfoRowGroupInfoItemWithDefaults() *AddonsGroupInfoRowGroupInfoItem {
	this := AddonsGroupInfoRowGroupInfoItem{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AddonsGroupInfoRowGroupInfoItem) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsGroupInfoRowGroupInfoItem) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AddonsGroupInfoRowGroupInfoItem) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AddonsGroupInfoRowGroupInfoItem) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AddonsGroupInfoRowGroupInfoItem) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsGroupInfoRowGroupInfoItem) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AddonsGroupInfoRowGroupInfoItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AddonsGroupInfoRowGroupInfoItem) SetValue(v string) {
	o.Value = &v
}

func (o AddonsGroupInfoRowGroupInfoItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsGroupInfoRowGroupInfoItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAddonsGroupInfoRowGroupInfoItem struct {
	value *AddonsGroupInfoRowGroupInfoItem
	isSet bool
}

func (v NullableAddonsGroupInfoRowGroupInfoItem) Get() *AddonsGroupInfoRowGroupInfoItem {
	return v.value
}

func (v *NullableAddonsGroupInfoRowGroupInfoItem) Set(val *AddonsGroupInfoRowGroupInfoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsGroupInfoRowGroupInfoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsGroupInfoRowGroupInfoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsGroupInfoRowGroupInfoItem(val *AddonsGroupInfoRowGroupInfoItem) *NullableAddonsGroupInfoRowGroupInfoItem {
	return &NullableAddonsGroupInfoRowGroupInfoItem{value: val, isSet: true}
}

func (v NullableAddonsGroupInfoRowGroupInfoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsGroupInfoRowGroupInfoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


