/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostSubmitUserPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostSubmitUserPostRequest{}

// PostSubmitUserPostRequest struct for PostSubmitUserPostRequest
type PostSubmitUserPostRequest struct {
	// فیلدهای ویژه هر دسته‌بندی که باید مطابق ساختار مشخص شده تکمیل شوند. ساختار را از اینجا ببینید: https://divar-ir.github.io/kenar-docs/openapi-doc/assets-get-submit-schema/
	CategoryFields map[string]interface{} `json:"category_fields"`
	GeneralData PostSubmitPostGeneralData `json:"general_data"`
}

type _PostSubmitUserPostRequest PostSubmitUserPostRequest

// NewPostSubmitUserPostRequest instantiates a new PostSubmitUserPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostSubmitUserPostRequest(categoryFields map[string]interface{}, generalData PostSubmitPostGeneralData) *PostSubmitUserPostRequest {
	this := PostSubmitUserPostRequest{}
	this.CategoryFields = categoryFields
	this.GeneralData = generalData
	return &this
}

// NewPostSubmitUserPostRequestWithDefaults instantiates a new PostSubmitUserPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostSubmitUserPostRequestWithDefaults() *PostSubmitUserPostRequest {
	this := PostSubmitUserPostRequest{}
	return &this
}

// GetCategoryFields returns the CategoryFields field value
func (o *PostSubmitUserPostRequest) GetCategoryFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.CategoryFields
}

// GetCategoryFieldsOk returns a tuple with the CategoryFields field value
// and a boolean to check if the value has been set.
func (o *PostSubmitUserPostRequest) GetCategoryFieldsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.CategoryFields, true
}

// SetCategoryFields sets field value
func (o *PostSubmitUserPostRequest) SetCategoryFields(v map[string]interface{}) {
	o.CategoryFields = v
}

// GetGeneralData returns the GeneralData field value
func (o *PostSubmitUserPostRequest) GetGeneralData() PostSubmitPostGeneralData {
	if o == nil {
		var ret PostSubmitPostGeneralData
		return ret
	}

	return o.GeneralData
}

// GetGeneralDataOk returns a tuple with the GeneralData field value
// and a boolean to check if the value has been set.
func (o *PostSubmitUserPostRequest) GetGeneralDataOk() (*PostSubmitPostGeneralData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GeneralData, true
}

// SetGeneralData sets field value
func (o *PostSubmitUserPostRequest) SetGeneralData(v PostSubmitPostGeneralData) {
	o.GeneralData = v
}

func (o PostSubmitUserPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostSubmitUserPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category_fields"] = o.CategoryFields
	toSerialize["general_data"] = o.GeneralData
	return toSerialize, nil
}

func (o *PostSubmitUserPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_fields",
		"general_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostSubmitUserPostRequest := _PostSubmitUserPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostSubmitUserPostRequest)

	if err != nil {
		return err
	}

	*o = PostSubmitUserPostRequest(varPostSubmitUserPostRequest)

	return err
}

type NullablePostSubmitUserPostRequest struct {
	value *PostSubmitUserPostRequest
	isSet bool
}

func (v NullablePostSubmitUserPostRequest) Get() *PostSubmitUserPostRequest {
	return v.value
}

func (v *NullablePostSubmitUserPostRequest) Set(val *PostSubmitUserPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSubmitUserPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSubmitUserPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSubmitUserPostRequest(val *PostSubmitUserPostRequest) *NullablePostSubmitUserPostRequest {
	return &NullablePostSubmitUserPostRequest{value: val, isSet: true}
}

func (v NullablePostSubmitUserPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSubmitUserPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


