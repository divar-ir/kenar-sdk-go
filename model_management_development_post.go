/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"time"
)

// checks if the ManagementDevelopmentPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementDevelopmentPost{}

// ManagementDevelopmentPost struct for ManagementDevelopmentPost
type ManagementDevelopmentPost struct {
	Preset *ManagementPreset `json:"preset,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Token *string `json:"token,omitempty"`
	MngToken *string `json:"mng_token,omitempty"`
}

// NewManagementDevelopmentPost instantiates a new ManagementDevelopmentPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementDevelopmentPost() *ManagementDevelopmentPost {
	this := ManagementDevelopmentPost{}
	return &this
}

// NewManagementDevelopmentPostWithDefaults instantiates a new ManagementDevelopmentPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementDevelopmentPostWithDefaults() *ManagementDevelopmentPost {
	this := ManagementDevelopmentPost{}
	return &this
}

// GetPreset returns the Preset field value if set, zero value otherwise.
func (o *ManagementDevelopmentPost) GetPreset() ManagementPreset {
	if o == nil || IsNil(o.Preset) {
		var ret ManagementPreset
		return ret
	}
	return *o.Preset
}

// GetPresetOk returns a tuple with the Preset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementDevelopmentPost) GetPresetOk() (*ManagementPreset, bool) {
	if o == nil || IsNil(o.Preset) {
		return nil, false
	}
	return o.Preset, true
}

// HasPreset returns a boolean if a field has been set.
func (o *ManagementDevelopmentPost) HasPreset() bool {
	if o != nil && !IsNil(o.Preset) {
		return true
	}

	return false
}

// SetPreset gets a reference to the given ManagementPreset and assigns it to the Preset field.
func (o *ManagementDevelopmentPost) SetPreset(v ManagementPreset) {
	o.Preset = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ManagementDevelopmentPost) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementDevelopmentPost) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ManagementDevelopmentPost) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ManagementDevelopmentPost) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ManagementDevelopmentPost) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementDevelopmentPost) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ManagementDevelopmentPost) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ManagementDevelopmentPost) SetToken(v string) {
	o.Token = &v
}

// GetMngToken returns the MngToken field value if set, zero value otherwise.
func (o *ManagementDevelopmentPost) GetMngToken() string {
	if o == nil || IsNil(o.MngToken) {
		var ret string
		return ret
	}
	return *o.MngToken
}

// GetMngTokenOk returns a tuple with the MngToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementDevelopmentPost) GetMngTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MngToken) {
		return nil, false
	}
	return o.MngToken, true
}

// HasMngToken returns a boolean if a field has been set.
func (o *ManagementDevelopmentPost) HasMngToken() bool {
	if o != nil && !IsNil(o.MngToken) {
		return true
	}

	return false
}

// SetMngToken gets a reference to the given string and assigns it to the MngToken field.
func (o *ManagementDevelopmentPost) SetMngToken(v string) {
	o.MngToken = &v
}

func (o ManagementDevelopmentPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementDevelopmentPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Preset) {
		toSerialize["preset"] = o.Preset
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.MngToken) {
		toSerialize["mng_token"] = o.MngToken
	}
	return toSerialize, nil
}

type NullableManagementDevelopmentPost struct {
	value *ManagementDevelopmentPost
	isSet bool
}

func (v NullableManagementDevelopmentPost) Get() *ManagementDevelopmentPost {
	return v.value
}

func (v *NullableManagementDevelopmentPost) Set(val *ManagementDevelopmentPost) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementDevelopmentPost) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementDevelopmentPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementDevelopmentPost(val *ManagementDevelopmentPost) *NullableManagementDevelopmentPost {
	return &NullableManagementDevelopmentPost{value: val, isSet: true}
}

func (v NullableManagementDevelopmentPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementDevelopmentPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


