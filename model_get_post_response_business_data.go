/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the GetPostResponseBusinessData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPostResponseBusinessData{}

// GetPostResponseBusinessData struct for GetPostResponseBusinessData
type GetPostResponseBusinessData struct {
	BusinessName *string `json:"business_name,omitempty"`
	BusinessType *PremiumPanelBusinessDataSubBusinessType `json:"business_type,omitempty"`
}

// NewGetPostResponseBusinessData instantiates a new GetPostResponseBusinessData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPostResponseBusinessData() *GetPostResponseBusinessData {
	this := GetPostResponseBusinessData{}
	return &this
}

// NewGetPostResponseBusinessDataWithDefaults instantiates a new GetPostResponseBusinessData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPostResponseBusinessDataWithDefaults() *GetPostResponseBusinessData {
	this := GetPostResponseBusinessData{}
	return &this
}

// GetBusinessName returns the BusinessName field value if set, zero value otherwise.
func (o *GetPostResponseBusinessData) GetBusinessName() string {
	if o == nil || IsNil(o.BusinessName) {
		var ret string
		return ret
	}
	return *o.BusinessName
}

// GetBusinessNameOk returns a tuple with the BusinessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostResponseBusinessData) GetBusinessNameOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessName) {
		return nil, false
	}
	return o.BusinessName, true
}

// HasBusinessName returns a boolean if a field has been set.
func (o *GetPostResponseBusinessData) HasBusinessName() bool {
	if o != nil && !IsNil(o.BusinessName) {
		return true
	}

	return false
}

// SetBusinessName gets a reference to the given string and assigns it to the BusinessName field.
func (o *GetPostResponseBusinessData) SetBusinessName(v string) {
	o.BusinessName = &v
}

// GetBusinessType returns the BusinessType field value if set, zero value otherwise.
func (o *GetPostResponseBusinessData) GetBusinessType() PremiumPanelBusinessDataSubBusinessType {
	if o == nil || IsNil(o.BusinessType) {
		var ret PremiumPanelBusinessDataSubBusinessType
		return ret
	}
	return *o.BusinessType
}

// GetBusinessTypeOk returns a tuple with the BusinessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostResponseBusinessData) GetBusinessTypeOk() (*PremiumPanelBusinessDataSubBusinessType, bool) {
	if o == nil || IsNil(o.BusinessType) {
		return nil, false
	}
	return o.BusinessType, true
}

// HasBusinessType returns a boolean if a field has been set.
func (o *GetPostResponseBusinessData) HasBusinessType() bool {
	if o != nil && !IsNil(o.BusinessType) {
		return true
	}

	return false
}

// SetBusinessType gets a reference to the given PremiumPanelBusinessDataSubBusinessType and assigns it to the BusinessType field.
func (o *GetPostResponseBusinessData) SetBusinessType(v PremiumPanelBusinessDataSubBusinessType) {
	o.BusinessType = &v
}

func (o GetPostResponseBusinessData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPostResponseBusinessData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessName) {
		toSerialize["business_name"] = o.BusinessName
	}
	if !IsNil(o.BusinessType) {
		toSerialize["business_type"] = o.BusinessType
	}
	return toSerialize, nil
}

type NullableGetPostResponseBusinessData struct {
	value *GetPostResponseBusinessData
	isSet bool
}

func (v NullableGetPostResponseBusinessData) Get() *GetPostResponseBusinessData {
	return v.value
}

func (v *NullableGetPostResponseBusinessData) Set(val *GetPostResponseBusinessData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPostResponseBusinessData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPostResponseBusinessData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPostResponseBusinessData(val *GetPostResponseBusinessData) *NullableGetPostResponseBusinessData {
	return &NullableGetPostResponseBusinessData{value: val, isSet: true}
}

func (v NullableGetPostResponseBusinessData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPostResponseBusinessData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


