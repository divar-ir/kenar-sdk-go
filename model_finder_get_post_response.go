/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"time"
)

// checks if the FinderGetPostResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinderGetPostResponse{}

// FinderGetPostResponse struct for FinderGetPostResponse
type FinderGetPostResponse struct {
	BusinessData *GetPostResponseBusinessData `json:"business_data,omitempty"`
	Category *string `json:"category,omitempty"`
	ChatEnabled *bool `json:"chat_enabled,omitempty"`
	City *string `json:"city,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	District *string `json:"district,omitempty"`
	FirstPublishedAt *time.Time `json:"first_published_at,omitempty"`
	IsPhoneHidden *bool `json:"is_phone_hidden,omitempty"`
	LastModifiedAt *time.Time `json:"last_modified_at,omitempty"`
	State *FinderPostExtState `json:"state,omitempty"`
	SupplierChatAssistantEnabled *bool `json:"supplier_chat_assistant_enabled,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewFinderGetPostResponse instantiates a new FinderGetPostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinderGetPostResponse() *FinderGetPostResponse {
	this := FinderGetPostResponse{}
	return &this
}

// NewFinderGetPostResponseWithDefaults instantiates a new FinderGetPostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinderGetPostResponseWithDefaults() *FinderGetPostResponse {
	this := FinderGetPostResponse{}
	return &this
}

// GetBusinessData returns the BusinessData field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetBusinessData() GetPostResponseBusinessData {
	if o == nil || IsNil(o.BusinessData) {
		var ret GetPostResponseBusinessData
		return ret
	}
	return *o.BusinessData
}

// GetBusinessDataOk returns a tuple with the BusinessData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetBusinessDataOk() (*GetPostResponseBusinessData, bool) {
	if o == nil || IsNil(o.BusinessData) {
		return nil, false
	}
	return o.BusinessData, true
}

// HasBusinessData returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasBusinessData() bool {
	if o != nil && !IsNil(o.BusinessData) {
		return true
	}

	return false
}

// SetBusinessData gets a reference to the given GetPostResponseBusinessData and assigns it to the BusinessData field.
func (o *FinderGetPostResponse) SetBusinessData(v GetPostResponseBusinessData) {
	o.BusinessData = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *FinderGetPostResponse) SetCategory(v string) {
	o.Category = &v
}

// GetChatEnabled returns the ChatEnabled field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetChatEnabled() bool {
	if o == nil || IsNil(o.ChatEnabled) {
		var ret bool
		return ret
	}
	return *o.ChatEnabled
}

// GetChatEnabledOk returns a tuple with the ChatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetChatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ChatEnabled) {
		return nil, false
	}
	return o.ChatEnabled, true
}

// HasChatEnabled returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasChatEnabled() bool {
	if o != nil && !IsNil(o.ChatEnabled) {
		return true
	}

	return false
}

// SetChatEnabled gets a reference to the given bool and assigns it to the ChatEnabled field.
func (o *FinderGetPostResponse) SetChatEnabled(v bool) {
	o.ChatEnabled = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *FinderGetPostResponse) SetCity(v string) {
	o.City = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *FinderGetPostResponse) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetDistrict returns the District field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetDistrict() string {
	if o == nil || IsNil(o.District) {
		var ret string
		return ret
	}
	return *o.District
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetDistrictOk() (*string, bool) {
	if o == nil || IsNil(o.District) {
		return nil, false
	}
	return o.District, true
}

// HasDistrict returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasDistrict() bool {
	if o != nil && !IsNil(o.District) {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given string and assigns it to the District field.
func (o *FinderGetPostResponse) SetDistrict(v string) {
	o.District = &v
}

// GetFirstPublishedAt returns the FirstPublishedAt field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetFirstPublishedAt() time.Time {
	if o == nil || IsNil(o.FirstPublishedAt) {
		var ret time.Time
		return ret
	}
	return *o.FirstPublishedAt
}

// GetFirstPublishedAtOk returns a tuple with the FirstPublishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetFirstPublishedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstPublishedAt) {
		return nil, false
	}
	return o.FirstPublishedAt, true
}

// HasFirstPublishedAt returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasFirstPublishedAt() bool {
	if o != nil && !IsNil(o.FirstPublishedAt) {
		return true
	}

	return false
}

// SetFirstPublishedAt gets a reference to the given time.Time and assigns it to the FirstPublishedAt field.
func (o *FinderGetPostResponse) SetFirstPublishedAt(v time.Time) {
	o.FirstPublishedAt = &v
}

// GetIsPhoneHidden returns the IsPhoneHidden field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetIsPhoneHidden() bool {
	if o == nil || IsNil(o.IsPhoneHidden) {
		var ret bool
		return ret
	}
	return *o.IsPhoneHidden
}

// GetIsPhoneHiddenOk returns a tuple with the IsPhoneHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetIsPhoneHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPhoneHidden) {
		return nil, false
	}
	return o.IsPhoneHidden, true
}

// HasIsPhoneHidden returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasIsPhoneHidden() bool {
	if o != nil && !IsNil(o.IsPhoneHidden) {
		return true
	}

	return false
}

// SetIsPhoneHidden gets a reference to the given bool and assigns it to the IsPhoneHidden field.
func (o *FinderGetPostResponse) SetIsPhoneHidden(v bool) {
	o.IsPhoneHidden = &v
}

// GetLastModifiedAt returns the LastModifiedAt field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetLastModifiedAt() time.Time {
	if o == nil || IsNil(o.LastModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedAt
}

// GetLastModifiedAtOk returns a tuple with the LastModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetLastModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedAt) {
		return nil, false
	}
	return o.LastModifiedAt, true
}

// HasLastModifiedAt returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasLastModifiedAt() bool {
	if o != nil && !IsNil(o.LastModifiedAt) {
		return true
	}

	return false
}

// SetLastModifiedAt gets a reference to the given time.Time and assigns it to the LastModifiedAt field.
func (o *FinderGetPostResponse) SetLastModifiedAt(v time.Time) {
	o.LastModifiedAt = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetState() FinderPostExtState {
	if o == nil || IsNil(o.State) {
		var ret FinderPostExtState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetStateOk() (*FinderPostExtState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given FinderPostExtState and assigns it to the State field.
func (o *FinderGetPostResponse) SetState(v FinderPostExtState) {
	o.State = &v
}

// GetSupplierChatAssistantEnabled returns the SupplierChatAssistantEnabled field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetSupplierChatAssistantEnabled() bool {
	if o == nil || IsNil(o.SupplierChatAssistantEnabled) {
		var ret bool
		return ret
	}
	return *o.SupplierChatAssistantEnabled
}

// GetSupplierChatAssistantEnabledOk returns a tuple with the SupplierChatAssistantEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetSupplierChatAssistantEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SupplierChatAssistantEnabled) {
		return nil, false
	}
	return o.SupplierChatAssistantEnabled, true
}

// HasSupplierChatAssistantEnabled returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasSupplierChatAssistantEnabled() bool {
	if o != nil && !IsNil(o.SupplierChatAssistantEnabled) {
		return true
	}

	return false
}

// SetSupplierChatAssistantEnabled gets a reference to the given bool and assigns it to the SupplierChatAssistantEnabled field.
func (o *FinderGetPostResponse) SetSupplierChatAssistantEnabled(v bool) {
	o.SupplierChatAssistantEnabled = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *FinderGetPostResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinderGetPostResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *FinderGetPostResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *FinderGetPostResponse) SetToken(v string) {
	o.Token = &v
}

func (o FinderGetPostResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinderGetPostResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessData) {
		toSerialize["business_data"] = o.BusinessData
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ChatEnabled) {
		toSerialize["chat_enabled"] = o.ChatEnabled
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.District) {
		toSerialize["district"] = o.District
	}
	if !IsNil(o.FirstPublishedAt) {
		toSerialize["first_published_at"] = o.FirstPublishedAt
	}
	if !IsNil(o.IsPhoneHidden) {
		toSerialize["is_phone_hidden"] = o.IsPhoneHidden
	}
	if !IsNil(o.LastModifiedAt) {
		toSerialize["last_modified_at"] = o.LastModifiedAt
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SupplierChatAssistantEnabled) {
		toSerialize["supplier_chat_assistant_enabled"] = o.SupplierChatAssistantEnabled
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableFinderGetPostResponse struct {
	value *FinderGetPostResponse
	isSet bool
}

func (v NullableFinderGetPostResponse) Get() *FinderGetPostResponse {
	return v.value
}

func (v *NullableFinderGetPostResponse) Set(val *FinderGetPostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFinderGetPostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFinderGetPostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinderGetPostResponse(val *FinderGetPostResponse) *NullableFinderGetPostResponse {
	return &NullableFinderGetPostResponse{value: val, isSet: true}
}

func (v NullableFinderGetPostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinderGetPostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


