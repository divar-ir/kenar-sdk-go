/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsWidget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsWidget{}

// AddonsWidget struct for AddonsWidget
type AddonsWidget struct {
	ButtonBar *AddonsButtonBar `json:"button_bar,omitempty"`
	DescriptionRow *AddonsDescriptionRow `json:"description_row,omitempty"`
	EvaluationRow *AddonsEvaluationRow `json:"evaluation_row,omitempty"`
	EventRow *AddonsEventRow `json:"event_row,omitempty"`
	GroupInfoRow *AddonsGroupInfoRow `json:"group_info_row,omitempty"`
	ImageCarouselRow *AddonsImageCarouselRow `json:"image_carousel_row,omitempty"`
	ScoreRow *AddonsScoreRow `json:"score_row,omitempty"`
	SelectorRow *AddonsSelectorRow `json:"selector_row,omitempty"`
	SemanticPaths *map[string]string `json:"semantic_paths,omitempty"`
	SubtitleRow *AddonsSubtitleRow `json:"subtitle_row,omitempty"`
	TitleRow *AddonsTitleRow `json:"title_row,omitempty"`
}

// NewAddonsWidget instantiates a new AddonsWidget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsWidget() *AddonsWidget {
	this := AddonsWidget{}
	return &this
}

// NewAddonsWidgetWithDefaults instantiates a new AddonsWidget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsWidgetWithDefaults() *AddonsWidget {
	this := AddonsWidget{}
	return &this
}

// GetButtonBar returns the ButtonBar field value if set, zero value otherwise.
func (o *AddonsWidget) GetButtonBar() AddonsButtonBar {
	if o == nil || IsNil(o.ButtonBar) {
		var ret AddonsButtonBar
		return ret
	}
	return *o.ButtonBar
}

// GetButtonBarOk returns a tuple with the ButtonBar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetButtonBarOk() (*AddonsButtonBar, bool) {
	if o == nil || IsNil(o.ButtonBar) {
		return nil, false
	}
	return o.ButtonBar, true
}

// HasButtonBar returns a boolean if a field has been set.
func (o *AddonsWidget) HasButtonBar() bool {
	if o != nil && !IsNil(o.ButtonBar) {
		return true
	}

	return false
}

// SetButtonBar gets a reference to the given AddonsButtonBar and assigns it to the ButtonBar field.
func (o *AddonsWidget) SetButtonBar(v AddonsButtonBar) {
	o.ButtonBar = &v
}

// GetDescriptionRow returns the DescriptionRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetDescriptionRow() AddonsDescriptionRow {
	if o == nil || IsNil(o.DescriptionRow) {
		var ret AddonsDescriptionRow
		return ret
	}
	return *o.DescriptionRow
}

// GetDescriptionRowOk returns a tuple with the DescriptionRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetDescriptionRowOk() (*AddonsDescriptionRow, bool) {
	if o == nil || IsNil(o.DescriptionRow) {
		return nil, false
	}
	return o.DescriptionRow, true
}

// HasDescriptionRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasDescriptionRow() bool {
	if o != nil && !IsNil(o.DescriptionRow) {
		return true
	}

	return false
}

// SetDescriptionRow gets a reference to the given AddonsDescriptionRow and assigns it to the DescriptionRow field.
func (o *AddonsWidget) SetDescriptionRow(v AddonsDescriptionRow) {
	o.DescriptionRow = &v
}

// GetEvaluationRow returns the EvaluationRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetEvaluationRow() AddonsEvaluationRow {
	if o == nil || IsNil(o.EvaluationRow) {
		var ret AddonsEvaluationRow
		return ret
	}
	return *o.EvaluationRow
}

// GetEvaluationRowOk returns a tuple with the EvaluationRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetEvaluationRowOk() (*AddonsEvaluationRow, bool) {
	if o == nil || IsNil(o.EvaluationRow) {
		return nil, false
	}
	return o.EvaluationRow, true
}

// HasEvaluationRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasEvaluationRow() bool {
	if o != nil && !IsNil(o.EvaluationRow) {
		return true
	}

	return false
}

// SetEvaluationRow gets a reference to the given AddonsEvaluationRow and assigns it to the EvaluationRow field.
func (o *AddonsWidget) SetEvaluationRow(v AddonsEvaluationRow) {
	o.EvaluationRow = &v
}

// GetEventRow returns the EventRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetEventRow() AddonsEventRow {
	if o == nil || IsNil(o.EventRow) {
		var ret AddonsEventRow
		return ret
	}
	return *o.EventRow
}

// GetEventRowOk returns a tuple with the EventRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetEventRowOk() (*AddonsEventRow, bool) {
	if o == nil || IsNil(o.EventRow) {
		return nil, false
	}
	return o.EventRow, true
}

// HasEventRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasEventRow() bool {
	if o != nil && !IsNil(o.EventRow) {
		return true
	}

	return false
}

// SetEventRow gets a reference to the given AddonsEventRow and assigns it to the EventRow field.
func (o *AddonsWidget) SetEventRow(v AddonsEventRow) {
	o.EventRow = &v
}

// GetGroupInfoRow returns the GroupInfoRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetGroupInfoRow() AddonsGroupInfoRow {
	if o == nil || IsNil(o.GroupInfoRow) {
		var ret AddonsGroupInfoRow
		return ret
	}
	return *o.GroupInfoRow
}

// GetGroupInfoRowOk returns a tuple with the GroupInfoRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetGroupInfoRowOk() (*AddonsGroupInfoRow, bool) {
	if o == nil || IsNil(o.GroupInfoRow) {
		return nil, false
	}
	return o.GroupInfoRow, true
}

// HasGroupInfoRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasGroupInfoRow() bool {
	if o != nil && !IsNil(o.GroupInfoRow) {
		return true
	}

	return false
}

// SetGroupInfoRow gets a reference to the given AddonsGroupInfoRow and assigns it to the GroupInfoRow field.
func (o *AddonsWidget) SetGroupInfoRow(v AddonsGroupInfoRow) {
	o.GroupInfoRow = &v
}

// GetImageCarouselRow returns the ImageCarouselRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetImageCarouselRow() AddonsImageCarouselRow {
	if o == nil || IsNil(o.ImageCarouselRow) {
		var ret AddonsImageCarouselRow
		return ret
	}
	return *o.ImageCarouselRow
}

// GetImageCarouselRowOk returns a tuple with the ImageCarouselRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetImageCarouselRowOk() (*AddonsImageCarouselRow, bool) {
	if o == nil || IsNil(o.ImageCarouselRow) {
		return nil, false
	}
	return o.ImageCarouselRow, true
}

// HasImageCarouselRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasImageCarouselRow() bool {
	if o != nil && !IsNil(o.ImageCarouselRow) {
		return true
	}

	return false
}

// SetImageCarouselRow gets a reference to the given AddonsImageCarouselRow and assigns it to the ImageCarouselRow field.
func (o *AddonsWidget) SetImageCarouselRow(v AddonsImageCarouselRow) {
	o.ImageCarouselRow = &v
}

// GetScoreRow returns the ScoreRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetScoreRow() AddonsScoreRow {
	if o == nil || IsNil(o.ScoreRow) {
		var ret AddonsScoreRow
		return ret
	}
	return *o.ScoreRow
}

// GetScoreRowOk returns a tuple with the ScoreRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetScoreRowOk() (*AddonsScoreRow, bool) {
	if o == nil || IsNil(o.ScoreRow) {
		return nil, false
	}
	return o.ScoreRow, true
}

// HasScoreRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasScoreRow() bool {
	if o != nil && !IsNil(o.ScoreRow) {
		return true
	}

	return false
}

// SetScoreRow gets a reference to the given AddonsScoreRow and assigns it to the ScoreRow field.
func (o *AddonsWidget) SetScoreRow(v AddonsScoreRow) {
	o.ScoreRow = &v
}

// GetSelectorRow returns the SelectorRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetSelectorRow() AddonsSelectorRow {
	if o == nil || IsNil(o.SelectorRow) {
		var ret AddonsSelectorRow
		return ret
	}
	return *o.SelectorRow
}

// GetSelectorRowOk returns a tuple with the SelectorRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetSelectorRowOk() (*AddonsSelectorRow, bool) {
	if o == nil || IsNil(o.SelectorRow) {
		return nil, false
	}
	return o.SelectorRow, true
}

// HasSelectorRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasSelectorRow() bool {
	if o != nil && !IsNil(o.SelectorRow) {
		return true
	}

	return false
}

// SetSelectorRow gets a reference to the given AddonsSelectorRow and assigns it to the SelectorRow field.
func (o *AddonsWidget) SetSelectorRow(v AddonsSelectorRow) {
	o.SelectorRow = &v
}

// GetSemanticPaths returns the SemanticPaths field value if set, zero value otherwise.
func (o *AddonsWidget) GetSemanticPaths() map[string]string {
	if o == nil || IsNil(o.SemanticPaths) {
		var ret map[string]string
		return ret
	}
	return *o.SemanticPaths
}

// GetSemanticPathsOk returns a tuple with the SemanticPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetSemanticPathsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SemanticPaths) {
		return nil, false
	}
	return o.SemanticPaths, true
}

// HasSemanticPaths returns a boolean if a field has been set.
func (o *AddonsWidget) HasSemanticPaths() bool {
	if o != nil && !IsNil(o.SemanticPaths) {
		return true
	}

	return false
}

// SetSemanticPaths gets a reference to the given map[string]string and assigns it to the SemanticPaths field.
func (o *AddonsWidget) SetSemanticPaths(v map[string]string) {
	o.SemanticPaths = &v
}

// GetSubtitleRow returns the SubtitleRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetSubtitleRow() AddonsSubtitleRow {
	if o == nil || IsNil(o.SubtitleRow) {
		var ret AddonsSubtitleRow
		return ret
	}
	return *o.SubtitleRow
}

// GetSubtitleRowOk returns a tuple with the SubtitleRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetSubtitleRowOk() (*AddonsSubtitleRow, bool) {
	if o == nil || IsNil(o.SubtitleRow) {
		return nil, false
	}
	return o.SubtitleRow, true
}

// HasSubtitleRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasSubtitleRow() bool {
	if o != nil && !IsNil(o.SubtitleRow) {
		return true
	}

	return false
}

// SetSubtitleRow gets a reference to the given AddonsSubtitleRow and assigns it to the SubtitleRow field.
func (o *AddonsWidget) SetSubtitleRow(v AddonsSubtitleRow) {
	o.SubtitleRow = &v
}

// GetTitleRow returns the TitleRow field value if set, zero value otherwise.
func (o *AddonsWidget) GetTitleRow() AddonsTitleRow {
	if o == nil || IsNil(o.TitleRow) {
		var ret AddonsTitleRow
		return ret
	}
	return *o.TitleRow
}

// GetTitleRowOk returns a tuple with the TitleRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsWidget) GetTitleRowOk() (*AddonsTitleRow, bool) {
	if o == nil || IsNil(o.TitleRow) {
		return nil, false
	}
	return o.TitleRow, true
}

// HasTitleRow returns a boolean if a field has been set.
func (o *AddonsWidget) HasTitleRow() bool {
	if o != nil && !IsNil(o.TitleRow) {
		return true
	}

	return false
}

// SetTitleRow gets a reference to the given AddonsTitleRow and assigns it to the TitleRow field.
func (o *AddonsWidget) SetTitleRow(v AddonsTitleRow) {
	o.TitleRow = &v
}

func (o AddonsWidget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsWidget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ButtonBar) {
		toSerialize["button_bar"] = o.ButtonBar
	}
	if !IsNil(o.DescriptionRow) {
		toSerialize["description_row"] = o.DescriptionRow
	}
	if !IsNil(o.EvaluationRow) {
		toSerialize["evaluation_row"] = o.EvaluationRow
	}
	if !IsNil(o.EventRow) {
		toSerialize["event_row"] = o.EventRow
	}
	if !IsNil(o.GroupInfoRow) {
		toSerialize["group_info_row"] = o.GroupInfoRow
	}
	if !IsNil(o.ImageCarouselRow) {
		toSerialize["image_carousel_row"] = o.ImageCarouselRow
	}
	if !IsNil(o.ScoreRow) {
		toSerialize["score_row"] = o.ScoreRow
	}
	if !IsNil(o.SelectorRow) {
		toSerialize["selector_row"] = o.SelectorRow
	}
	if !IsNil(o.SemanticPaths) {
		toSerialize["semantic_paths"] = o.SemanticPaths
	}
	if !IsNil(o.SubtitleRow) {
		toSerialize["subtitle_row"] = o.SubtitleRow
	}
	if !IsNil(o.TitleRow) {
		toSerialize["title_row"] = o.TitleRow
	}
	return toSerialize, nil
}

type NullableAddonsWidget struct {
	value *AddonsWidget
	isSet bool
}

func (v NullableAddonsWidget) Get() *AddonsWidget {
	return v.value
}

func (v *NullableAddonsWidget) Set(val *AddonsWidget) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsWidget) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsWidget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsWidget(val *AddonsWidget) *NullableAddonsWidget {
	return &NullableAddonsWidget{value: val, isSet: true}
}

func (v NullableAddonsWidget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsWidget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


