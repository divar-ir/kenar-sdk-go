/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the PaymentWalletTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentWalletTransaction{}

// PaymentWalletTransaction struct for PaymentWalletTransaction
type PaymentWalletTransaction struct {
	AmountRials *string `json:"amount_rials,omitempty"`
	Status *PaymentWalletTransactionStatus `json:"status,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewPaymentWalletTransaction instantiates a new PaymentWalletTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentWalletTransaction() *PaymentWalletTransaction {
	this := PaymentWalletTransaction{}
	return &this
}

// NewPaymentWalletTransactionWithDefaults instantiates a new PaymentWalletTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentWalletTransactionWithDefaults() *PaymentWalletTransaction {
	this := PaymentWalletTransaction{}
	return &this
}

// GetAmountRials returns the AmountRials field value if set, zero value otherwise.
func (o *PaymentWalletTransaction) GetAmountRials() string {
	if o == nil || IsNil(o.AmountRials) {
		var ret string
		return ret
	}
	return *o.AmountRials
}

// GetAmountRialsOk returns a tuple with the AmountRials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentWalletTransaction) GetAmountRialsOk() (*string, bool) {
	if o == nil || IsNil(o.AmountRials) {
		return nil, false
	}
	return o.AmountRials, true
}

// HasAmountRials returns a boolean if a field has been set.
func (o *PaymentWalletTransaction) HasAmountRials() bool {
	if o != nil && !IsNil(o.AmountRials) {
		return true
	}

	return false
}

// SetAmountRials gets a reference to the given string and assigns it to the AmountRials field.
func (o *PaymentWalletTransaction) SetAmountRials(v string) {
	o.AmountRials = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentWalletTransaction) GetStatus() PaymentWalletTransactionStatus {
	if o == nil || IsNil(o.Status) {
		var ret PaymentWalletTransactionStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentWalletTransaction) GetStatusOk() (*PaymentWalletTransactionStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentWalletTransaction) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentWalletTransactionStatus and assigns it to the Status field.
func (o *PaymentWalletTransaction) SetStatus(v PaymentWalletTransactionStatus) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PaymentWalletTransaction) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentWalletTransaction) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PaymentWalletTransaction) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PaymentWalletTransaction) SetToken(v string) {
	o.Token = &v
}

func (o PaymentWalletTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentWalletTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountRials) {
		toSerialize["amount_rials"] = o.AmountRials
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullablePaymentWalletTransaction struct {
	value *PaymentWalletTransaction
	isSet bool
}

func (v NullablePaymentWalletTransaction) Get() *PaymentWalletTransaction {
	return v.value
}

func (v *NullablePaymentWalletTransaction) Set(val *PaymentWalletTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentWalletTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentWalletTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentWalletTransaction(val *PaymentWalletTransaction) *NullablePaymentWalletTransaction {
	return &NullablePaymentWalletTransaction{value: val, isSet: true}
}

func (v NullablePaymentWalletTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentWalletTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


