/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// AddonSemanticOnlineReservationCapability the model 'AddonSemanticOnlineReservationCapability'
type AddonSemanticOnlineReservationCapability string

// List of AddonSemanticOnlineReservationCapability
const (
	ADDONSEMANTICONLINERESERVATIONCAPABILITY_ONLINE_RESERVATION_AVAILABLE AddonSemanticOnlineReservationCapability = "ONLINE_RESERVATION_AVAILABLE"
)

// All allowed values of AddonSemanticOnlineReservationCapability enum
var AllowedAddonSemanticOnlineReservationCapabilityEnumValues = []AddonSemanticOnlineReservationCapability{
	"ONLINE_RESERVATION_AVAILABLE",
}

func (v *AddonSemanticOnlineReservationCapability) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AddonSemanticOnlineReservationCapability(value)
	for _, existing := range AllowedAddonSemanticOnlineReservationCapabilityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AddonSemanticOnlineReservationCapability", value)
}

// NewAddonSemanticOnlineReservationCapabilityFromValue returns a pointer to a valid AddonSemanticOnlineReservationCapability
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAddonSemanticOnlineReservationCapabilityFromValue(v string) (*AddonSemanticOnlineReservationCapability, error) {
	ev := AddonSemanticOnlineReservationCapability(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AddonSemanticOnlineReservationCapability: valid values are %v", v, AllowedAddonSemanticOnlineReservationCapabilityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AddonSemanticOnlineReservationCapability) IsValid() bool {
	for _, existing := range AllowedAddonSemanticOnlineReservationCapabilityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AddonSemanticOnlineReservationCapability value
func (v AddonSemanticOnlineReservationCapability) Ptr() *AddonSemanticOnlineReservationCapability {
	return &v
}

type NullableAddonSemanticOnlineReservationCapability struct {
	value *AddonSemanticOnlineReservationCapability
	isSet bool
}

func (v NullableAddonSemanticOnlineReservationCapability) Get() *AddonSemanticOnlineReservationCapability {
	return v.value
}

func (v *NullableAddonSemanticOnlineReservationCapability) Set(val *AddonSemanticOnlineReservationCapability) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonSemanticOnlineReservationCapability) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonSemanticOnlineReservationCapability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonSemanticOnlineReservationCapability(val *AddonSemanticOnlineReservationCapability) *NullableAddonSemanticOnlineReservationCapability {
	return &NullableAddonSemanticOnlineReservationCapability{value: val, isSet: true}
}

func (v NullableAddonSemanticOnlineReservationCapability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonSemanticOnlineReservationCapability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

