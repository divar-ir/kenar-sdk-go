/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsAddonSemantic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsAddonSemantic{}

// AddonsAddonSemantic This is the message extracted by OpenPlatform from service provider semantics. Guidelines:  - Always check to see if an appropriate enum field or value exists before  adding one.  - Zero value of every enum should be {ENUM_NAME}_UNSPECIFIED.  - Enum values should not correspond to any specific post or person  attribute.
type AddonsAddonSemantic struct {
	PaymentMethod *AddonsAddonSemanticPaymentMethod `json:"payment_method,omitempty"`
	IdentityVerificationResult *AddonSemanticIdentityVerificationResult `json:"identity_verification_result,omitempty"`
	PostVerificationResult *AddonSemanticPostVerificationResult `json:"post_verification_result,omitempty"`
	Status *AddonsAddonSemanticStatus `json:"status,omitempty"`
	IdentityVerificationLastSuccessfulStage *AddonSemanticIdentityVerificationStage `json:"identity_verification_last_successful_stage,omitempty"`
	IdentityVerificationFailureReason *AddonSemanticIdentityVerificationStage `json:"identity_verification_failure_reason,omitempty"`
	CarVerificationLastSuccessfulStage *AddonSemanticCarVerificationStage `json:"car_verification_last_successful_stage,omitempty"`
	CarVerificationFailureReason *AddonSemanticCarVerificationStage `json:"car_verification_failure_reason,omitempty"`
	OwnershipResult *AddonSemanticOwnershipResult `json:"ownership_result,omitempty"`
	InspectionResult *AddonSemanticInspectionResult `json:"inspection_result,omitempty"`
	NewFaceVerificationResult *AddonSemanticNewFaceVerificationResult `json:"new_face_verification_result,omitempty"`
}

// NewAddonsAddonSemantic instantiates a new AddonsAddonSemantic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsAddonSemantic() *AddonsAddonSemantic {
	this := AddonsAddonSemantic{}
	return &this
}

// NewAddonsAddonSemanticWithDefaults instantiates a new AddonsAddonSemantic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsAddonSemanticWithDefaults() *AddonsAddonSemantic {
	this := AddonsAddonSemantic{}
	return &this
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetPaymentMethod() AddonsAddonSemanticPaymentMethod {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret AddonsAddonSemanticPaymentMethod
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetPaymentMethodOk() (*AddonsAddonSemanticPaymentMethod, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given AddonsAddonSemanticPaymentMethod and assigns it to the PaymentMethod field.
func (o *AddonsAddonSemantic) SetPaymentMethod(v AddonsAddonSemanticPaymentMethod) {
	o.PaymentMethod = &v
}

// GetIdentityVerificationResult returns the IdentityVerificationResult field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetIdentityVerificationResult() AddonSemanticIdentityVerificationResult {
	if o == nil || IsNil(o.IdentityVerificationResult) {
		var ret AddonSemanticIdentityVerificationResult
		return ret
	}
	return *o.IdentityVerificationResult
}

// GetIdentityVerificationResultOk returns a tuple with the IdentityVerificationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetIdentityVerificationResultOk() (*AddonSemanticIdentityVerificationResult, bool) {
	if o == nil || IsNil(o.IdentityVerificationResult) {
		return nil, false
	}
	return o.IdentityVerificationResult, true
}

// HasIdentityVerificationResult returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasIdentityVerificationResult() bool {
	if o != nil && !IsNil(o.IdentityVerificationResult) {
		return true
	}

	return false
}

// SetIdentityVerificationResult gets a reference to the given AddonSemanticIdentityVerificationResult and assigns it to the IdentityVerificationResult field.
func (o *AddonsAddonSemantic) SetIdentityVerificationResult(v AddonSemanticIdentityVerificationResult) {
	o.IdentityVerificationResult = &v
}

// GetPostVerificationResult returns the PostVerificationResult field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetPostVerificationResult() AddonSemanticPostVerificationResult {
	if o == nil || IsNil(o.PostVerificationResult) {
		var ret AddonSemanticPostVerificationResult
		return ret
	}
	return *o.PostVerificationResult
}

// GetPostVerificationResultOk returns a tuple with the PostVerificationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetPostVerificationResultOk() (*AddonSemanticPostVerificationResult, bool) {
	if o == nil || IsNil(o.PostVerificationResult) {
		return nil, false
	}
	return o.PostVerificationResult, true
}

// HasPostVerificationResult returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasPostVerificationResult() bool {
	if o != nil && !IsNil(o.PostVerificationResult) {
		return true
	}

	return false
}

// SetPostVerificationResult gets a reference to the given AddonSemanticPostVerificationResult and assigns it to the PostVerificationResult field.
func (o *AddonsAddonSemantic) SetPostVerificationResult(v AddonSemanticPostVerificationResult) {
	o.PostVerificationResult = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetStatus() AddonsAddonSemanticStatus {
	if o == nil || IsNil(o.Status) {
		var ret AddonsAddonSemanticStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetStatusOk() (*AddonsAddonSemanticStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AddonsAddonSemanticStatus and assigns it to the Status field.
func (o *AddonsAddonSemantic) SetStatus(v AddonsAddonSemanticStatus) {
	o.Status = &v
}

// GetIdentityVerificationLastSuccessfulStage returns the IdentityVerificationLastSuccessfulStage field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetIdentityVerificationLastSuccessfulStage() AddonSemanticIdentityVerificationStage {
	if o == nil || IsNil(o.IdentityVerificationLastSuccessfulStage) {
		var ret AddonSemanticIdentityVerificationStage
		return ret
	}
	return *o.IdentityVerificationLastSuccessfulStage
}

// GetIdentityVerificationLastSuccessfulStageOk returns a tuple with the IdentityVerificationLastSuccessfulStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetIdentityVerificationLastSuccessfulStageOk() (*AddonSemanticIdentityVerificationStage, bool) {
	if o == nil || IsNil(o.IdentityVerificationLastSuccessfulStage) {
		return nil, false
	}
	return o.IdentityVerificationLastSuccessfulStage, true
}

// HasIdentityVerificationLastSuccessfulStage returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasIdentityVerificationLastSuccessfulStage() bool {
	if o != nil && !IsNil(o.IdentityVerificationLastSuccessfulStage) {
		return true
	}

	return false
}

// SetIdentityVerificationLastSuccessfulStage gets a reference to the given AddonSemanticIdentityVerificationStage and assigns it to the IdentityVerificationLastSuccessfulStage field.
func (o *AddonsAddonSemantic) SetIdentityVerificationLastSuccessfulStage(v AddonSemanticIdentityVerificationStage) {
	o.IdentityVerificationLastSuccessfulStage = &v
}

// GetIdentityVerificationFailureReason returns the IdentityVerificationFailureReason field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetIdentityVerificationFailureReason() AddonSemanticIdentityVerificationStage {
	if o == nil || IsNil(o.IdentityVerificationFailureReason) {
		var ret AddonSemanticIdentityVerificationStage
		return ret
	}
	return *o.IdentityVerificationFailureReason
}

// GetIdentityVerificationFailureReasonOk returns a tuple with the IdentityVerificationFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetIdentityVerificationFailureReasonOk() (*AddonSemanticIdentityVerificationStage, bool) {
	if o == nil || IsNil(o.IdentityVerificationFailureReason) {
		return nil, false
	}
	return o.IdentityVerificationFailureReason, true
}

// HasIdentityVerificationFailureReason returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasIdentityVerificationFailureReason() bool {
	if o != nil && !IsNil(o.IdentityVerificationFailureReason) {
		return true
	}

	return false
}

// SetIdentityVerificationFailureReason gets a reference to the given AddonSemanticIdentityVerificationStage and assigns it to the IdentityVerificationFailureReason field.
func (o *AddonsAddonSemantic) SetIdentityVerificationFailureReason(v AddonSemanticIdentityVerificationStage) {
	o.IdentityVerificationFailureReason = &v
}

// GetCarVerificationLastSuccessfulStage returns the CarVerificationLastSuccessfulStage field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetCarVerificationLastSuccessfulStage() AddonSemanticCarVerificationStage {
	if o == nil || IsNil(o.CarVerificationLastSuccessfulStage) {
		var ret AddonSemanticCarVerificationStage
		return ret
	}
	return *o.CarVerificationLastSuccessfulStage
}

// GetCarVerificationLastSuccessfulStageOk returns a tuple with the CarVerificationLastSuccessfulStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetCarVerificationLastSuccessfulStageOk() (*AddonSemanticCarVerificationStage, bool) {
	if o == nil || IsNil(o.CarVerificationLastSuccessfulStage) {
		return nil, false
	}
	return o.CarVerificationLastSuccessfulStage, true
}

// HasCarVerificationLastSuccessfulStage returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasCarVerificationLastSuccessfulStage() bool {
	if o != nil && !IsNil(o.CarVerificationLastSuccessfulStage) {
		return true
	}

	return false
}

// SetCarVerificationLastSuccessfulStage gets a reference to the given AddonSemanticCarVerificationStage and assigns it to the CarVerificationLastSuccessfulStage field.
func (o *AddonsAddonSemantic) SetCarVerificationLastSuccessfulStage(v AddonSemanticCarVerificationStage) {
	o.CarVerificationLastSuccessfulStage = &v
}

// GetCarVerificationFailureReason returns the CarVerificationFailureReason field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetCarVerificationFailureReason() AddonSemanticCarVerificationStage {
	if o == nil || IsNil(o.CarVerificationFailureReason) {
		var ret AddonSemanticCarVerificationStage
		return ret
	}
	return *o.CarVerificationFailureReason
}

// GetCarVerificationFailureReasonOk returns a tuple with the CarVerificationFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetCarVerificationFailureReasonOk() (*AddonSemanticCarVerificationStage, bool) {
	if o == nil || IsNil(o.CarVerificationFailureReason) {
		return nil, false
	}
	return o.CarVerificationFailureReason, true
}

// HasCarVerificationFailureReason returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasCarVerificationFailureReason() bool {
	if o != nil && !IsNil(o.CarVerificationFailureReason) {
		return true
	}

	return false
}

// SetCarVerificationFailureReason gets a reference to the given AddonSemanticCarVerificationStage and assigns it to the CarVerificationFailureReason field.
func (o *AddonsAddonSemantic) SetCarVerificationFailureReason(v AddonSemanticCarVerificationStage) {
	o.CarVerificationFailureReason = &v
}

// GetOwnershipResult returns the OwnershipResult field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetOwnershipResult() AddonSemanticOwnershipResult {
	if o == nil || IsNil(o.OwnershipResult) {
		var ret AddonSemanticOwnershipResult
		return ret
	}
	return *o.OwnershipResult
}

// GetOwnershipResultOk returns a tuple with the OwnershipResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetOwnershipResultOk() (*AddonSemanticOwnershipResult, bool) {
	if o == nil || IsNil(o.OwnershipResult) {
		return nil, false
	}
	return o.OwnershipResult, true
}

// HasOwnershipResult returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasOwnershipResult() bool {
	if o != nil && !IsNil(o.OwnershipResult) {
		return true
	}

	return false
}

// SetOwnershipResult gets a reference to the given AddonSemanticOwnershipResult and assigns it to the OwnershipResult field.
func (o *AddonsAddonSemantic) SetOwnershipResult(v AddonSemanticOwnershipResult) {
	o.OwnershipResult = &v
}

// GetInspectionResult returns the InspectionResult field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetInspectionResult() AddonSemanticInspectionResult {
	if o == nil || IsNil(o.InspectionResult) {
		var ret AddonSemanticInspectionResult
		return ret
	}
	return *o.InspectionResult
}

// GetInspectionResultOk returns a tuple with the InspectionResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetInspectionResultOk() (*AddonSemanticInspectionResult, bool) {
	if o == nil || IsNil(o.InspectionResult) {
		return nil, false
	}
	return o.InspectionResult, true
}

// HasInspectionResult returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasInspectionResult() bool {
	if o != nil && !IsNil(o.InspectionResult) {
		return true
	}

	return false
}

// SetInspectionResult gets a reference to the given AddonSemanticInspectionResult and assigns it to the InspectionResult field.
func (o *AddonsAddonSemantic) SetInspectionResult(v AddonSemanticInspectionResult) {
	o.InspectionResult = &v
}

// GetNewFaceVerificationResult returns the NewFaceVerificationResult field value if set, zero value otherwise.
func (o *AddonsAddonSemantic) GetNewFaceVerificationResult() AddonSemanticNewFaceVerificationResult {
	if o == nil || IsNil(o.NewFaceVerificationResult) {
		var ret AddonSemanticNewFaceVerificationResult
		return ret
	}
	return *o.NewFaceVerificationResult
}

// GetNewFaceVerificationResultOk returns a tuple with the NewFaceVerificationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAddonSemantic) GetNewFaceVerificationResultOk() (*AddonSemanticNewFaceVerificationResult, bool) {
	if o == nil || IsNil(o.NewFaceVerificationResult) {
		return nil, false
	}
	return o.NewFaceVerificationResult, true
}

// HasNewFaceVerificationResult returns a boolean if a field has been set.
func (o *AddonsAddonSemantic) HasNewFaceVerificationResult() bool {
	if o != nil && !IsNil(o.NewFaceVerificationResult) {
		return true
	}

	return false
}

// SetNewFaceVerificationResult gets a reference to the given AddonSemanticNewFaceVerificationResult and assigns it to the NewFaceVerificationResult field.
func (o *AddonsAddonSemantic) SetNewFaceVerificationResult(v AddonSemanticNewFaceVerificationResult) {
	o.NewFaceVerificationResult = &v
}

func (o AddonsAddonSemantic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsAddonSemantic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.IdentityVerificationResult) {
		toSerialize["identity_verification_result"] = o.IdentityVerificationResult
	}
	if !IsNil(o.PostVerificationResult) {
		toSerialize["post_verification_result"] = o.PostVerificationResult
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IdentityVerificationLastSuccessfulStage) {
		toSerialize["identity_verification_last_successful_stage"] = o.IdentityVerificationLastSuccessfulStage
	}
	if !IsNil(o.IdentityVerificationFailureReason) {
		toSerialize["identity_verification_failure_reason"] = o.IdentityVerificationFailureReason
	}
	if !IsNil(o.CarVerificationLastSuccessfulStage) {
		toSerialize["car_verification_last_successful_stage"] = o.CarVerificationLastSuccessfulStage
	}
	if !IsNil(o.CarVerificationFailureReason) {
		toSerialize["car_verification_failure_reason"] = o.CarVerificationFailureReason
	}
	if !IsNil(o.OwnershipResult) {
		toSerialize["ownership_result"] = o.OwnershipResult
	}
	if !IsNil(o.InspectionResult) {
		toSerialize["inspection_result"] = o.InspectionResult
	}
	if !IsNil(o.NewFaceVerificationResult) {
		toSerialize["new_face_verification_result"] = o.NewFaceVerificationResult
	}
	return toSerialize, nil
}

type NullableAddonsAddonSemantic struct {
	value *AddonsAddonSemantic
	isSet bool
}

func (v NullableAddonsAddonSemantic) Get() *AddonsAddonSemantic {
	return v.value
}

func (v *NullableAddonsAddonSemantic) Set(val *AddonsAddonSemantic) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsAddonSemantic) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsAddonSemantic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsAddonSemantic(val *AddonsAddonSemantic) *NullableAddonsAddonSemantic {
	return &NullableAddonsAddonSemantic{value: val, isSet: true}
}

func (v NullableAddonsAddonSemantic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsAddonSemantic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


