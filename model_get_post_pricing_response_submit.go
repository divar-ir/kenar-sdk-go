/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the GetPostPricingResponseSubmit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPostPricingResponseSubmit{}

// GetPostPricingResponseSubmit struct for GetPostPricingResponseSubmit
type GetPostPricingResponseSubmit struct {
	// Indicates if the post can be submitted. If false, the submit API will return an error
	Available *bool `json:"available,omitempty"`
	// The cost of submitting post in rials
	CostRials *string `json:"cost_rials,omitempty"`
}

// NewGetPostPricingResponseSubmit instantiates a new GetPostPricingResponseSubmit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPostPricingResponseSubmit() *GetPostPricingResponseSubmit {
	this := GetPostPricingResponseSubmit{}
	return &this
}

// NewGetPostPricingResponseSubmitWithDefaults instantiates a new GetPostPricingResponseSubmit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPostPricingResponseSubmitWithDefaults() *GetPostPricingResponseSubmit {
	this := GetPostPricingResponseSubmit{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *GetPostPricingResponseSubmit) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostPricingResponseSubmit) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *GetPostPricingResponseSubmit) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *GetPostPricingResponseSubmit) SetAvailable(v bool) {
	o.Available = &v
}

// GetCostRials returns the CostRials field value if set, zero value otherwise.
func (o *GetPostPricingResponseSubmit) GetCostRials() string {
	if o == nil || IsNil(o.CostRials) {
		var ret string
		return ret
	}
	return *o.CostRials
}

// GetCostRialsOk returns a tuple with the CostRials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPostPricingResponseSubmit) GetCostRialsOk() (*string, bool) {
	if o == nil || IsNil(o.CostRials) {
		return nil, false
	}
	return o.CostRials, true
}

// HasCostRials returns a boolean if a field has been set.
func (o *GetPostPricingResponseSubmit) HasCostRials() bool {
	if o != nil && !IsNil(o.CostRials) {
		return true
	}

	return false
}

// SetCostRials gets a reference to the given string and assigns it to the CostRials field.
func (o *GetPostPricingResponseSubmit) SetCostRials(v string) {
	o.CostRials = &v
}

func (o GetPostPricingResponseSubmit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPostPricingResponseSubmit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.CostRials) {
		toSerialize["cost_rials"] = o.CostRials
	}
	return toSerialize, nil
}

type NullableGetPostPricingResponseSubmit struct {
	value *GetPostPricingResponseSubmit
	isSet bool
}

func (v NullableGetPostPricingResponseSubmit) Get() *GetPostPricingResponseSubmit {
	return v.value
}

func (v *NullableGetPostPricingResponseSubmit) Set(val *GetPostPricingResponseSubmit) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPostPricingResponseSubmit) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPostPricingResponseSubmit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPostPricingResponseSubmit(val *GetPostPricingResponseSubmit) *NullableGetPostPricingResponseSubmit {
	return &NullableGetPostPricingResponseSubmit{value: val, isSet: true}
}

func (v NullableGetPostPricingResponseSubmit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPostPricingResponseSubmit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


