/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"fmt"
)

// DarvazeGetCarOwnershipStatusResponseStatus the model 'DarvazeGetCarOwnershipStatusResponseStatus'
type DarvazeGetCarOwnershipStatusResponseStatus string

// List of darvazeGetCarOwnershipStatusResponseStatus
const (
	DARVAZEGETCAROWNERSHIPSTATUSRESPONSESTATUS_PENDING DarvazeGetCarOwnershipStatusResponseStatus = "PENDING"
	DARVAZEGETCAROWNERSHIPSTATUSRESPONSESTATUS_VERIFIED DarvazeGetCarOwnershipStatusResponseStatus = "VERIFIED"
	DARVAZEGETCAROWNERSHIPSTATUSRESPONSESTATUS_REJECTED DarvazeGetCarOwnershipStatusResponseStatus = "REJECTED"
)

// All allowed values of DarvazeGetCarOwnershipStatusResponseStatus enum
var AllowedDarvazeGetCarOwnershipStatusResponseStatusEnumValues = []DarvazeGetCarOwnershipStatusResponseStatus{
	"PENDING",
	"VERIFIED",
	"REJECTED",
}

func (v *DarvazeGetCarOwnershipStatusResponseStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DarvazeGetCarOwnershipStatusResponseStatus(value)
	for _, existing := range AllowedDarvazeGetCarOwnershipStatusResponseStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DarvazeGetCarOwnershipStatusResponseStatus", value)
}

// NewDarvazeGetCarOwnershipStatusResponseStatusFromValue returns a pointer to a valid DarvazeGetCarOwnershipStatusResponseStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDarvazeGetCarOwnershipStatusResponseStatusFromValue(v string) (*DarvazeGetCarOwnershipStatusResponseStatus, error) {
	ev := DarvazeGetCarOwnershipStatusResponseStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DarvazeGetCarOwnershipStatusResponseStatus: valid values are %v", v, AllowedDarvazeGetCarOwnershipStatusResponseStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DarvazeGetCarOwnershipStatusResponseStatus) IsValid() bool {
	for _, existing := range AllowedDarvazeGetCarOwnershipStatusResponseStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to darvazeGetCarOwnershipStatusResponseStatus value
func (v DarvazeGetCarOwnershipStatusResponseStatus) Ptr() *DarvazeGetCarOwnershipStatusResponseStatus {
	return &v
}

type NullableDarvazeGetCarOwnershipStatusResponseStatus struct {
	value *DarvazeGetCarOwnershipStatusResponseStatus
	isSet bool
}

func (v NullableDarvazeGetCarOwnershipStatusResponseStatus) Get() *DarvazeGetCarOwnershipStatusResponseStatus {
	return v.value
}

func (v *NullableDarvazeGetCarOwnershipStatusResponseStatus) Set(val *DarvazeGetCarOwnershipStatusResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDarvazeGetCarOwnershipStatusResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDarvazeGetCarOwnershipStatusResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDarvazeGetCarOwnershipStatusResponseStatus(val *DarvazeGetCarOwnershipStatusResponseStatus) *NullableDarvazeGetCarOwnershipStatusResponseStatus {
	return &NullableDarvazeGetCarOwnershipStatusResponseStatus{value: val, isSet: true}
}

func (v NullableDarvazeGetCarOwnershipStatusResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDarvazeGetCarOwnershipStatusResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

