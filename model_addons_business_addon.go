/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsBusinessAddon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsBusinessAddon{}

// AddonsBusinessAddon struct for AddonsBusinessAddon
type AddonsBusinessAddon struct {
	MetaData *AddonsAddonMetaData `json:"meta_data,omitempty"`
	BusinessRef *string `json:"business_ref,omitempty"`
	Widgets map[string]interface{} `json:"widgets,omitempty"`
}

// NewAddonsBusinessAddon instantiates a new AddonsBusinessAddon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsBusinessAddon() *AddonsBusinessAddon {
	this := AddonsBusinessAddon{}
	return &this
}

// NewAddonsBusinessAddonWithDefaults instantiates a new AddonsBusinessAddon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsBusinessAddonWithDefaults() *AddonsBusinessAddon {
	this := AddonsBusinessAddon{}
	return &this
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AddonsBusinessAddon) GetMetaData() AddonsAddonMetaData {
	if o == nil || IsNil(o.MetaData) {
		var ret AddonsAddonMetaData
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsBusinessAddon) GetMetaDataOk() (*AddonsAddonMetaData, bool) {
	if o == nil || IsNil(o.MetaData) {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AddonsBusinessAddon) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given AddonsAddonMetaData and assigns it to the MetaData field.
func (o *AddonsBusinessAddon) SetMetaData(v AddonsAddonMetaData) {
	o.MetaData = &v
}

// GetBusinessRef returns the BusinessRef field value if set, zero value otherwise.
func (o *AddonsBusinessAddon) GetBusinessRef() string {
	if o == nil || IsNil(o.BusinessRef) {
		var ret string
		return ret
	}
	return *o.BusinessRef
}

// GetBusinessRefOk returns a tuple with the BusinessRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsBusinessAddon) GetBusinessRefOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessRef) {
		return nil, false
	}
	return o.BusinessRef, true
}

// HasBusinessRef returns a boolean if a field has been set.
func (o *AddonsBusinessAddon) HasBusinessRef() bool {
	if o != nil && !IsNil(o.BusinessRef) {
		return true
	}

	return false
}

// SetBusinessRef gets a reference to the given string and assigns it to the BusinessRef field.
func (o *AddonsBusinessAddon) SetBusinessRef(v string) {
	o.BusinessRef = &v
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *AddonsBusinessAddon) GetWidgets() map[string]interface{} {
	if o == nil || IsNil(o.Widgets) {
		var ret map[string]interface{}
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsBusinessAddon) GetWidgetsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Widgets) {
		return map[string]interface{}{}, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *AddonsBusinessAddon) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given map[string]interface{} and assigns it to the Widgets field.
func (o *AddonsBusinessAddon) SetWidgets(v map[string]interface{}) {
	o.Widgets = v
}

func (o AddonsBusinessAddon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsBusinessAddon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}
	if !IsNil(o.BusinessRef) {
		toSerialize["business_ref"] = o.BusinessRef
	}
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	return toSerialize, nil
}

type NullableAddonsBusinessAddon struct {
	value *AddonsBusinessAddon
	isSet bool
}

func (v NullableAddonsBusinessAddon) Get() *AddonsBusinessAddon {
	return v.value
}

func (v *NullableAddonsBusinessAddon) Set(val *AddonsBusinessAddon) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsBusinessAddon) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsBusinessAddon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsBusinessAddon(val *AddonsBusinessAddon) *NullableAddonsBusinessAddon {
	return &NullableAddonsBusinessAddon{value: val, isSet: true}
}

func (v NullableAddonsBusinessAddon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsBusinessAddon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


