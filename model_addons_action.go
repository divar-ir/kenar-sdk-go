/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsAction{}

// AddonsAction Represents an action that can be performed
type AddonsAction struct {
	GetDynamicAction *AddonsGetDynamicAction `json:"get_dynamic_action,omitempty"`
	// An action to send user to your URL directly with just a resource id (if applicable)
	OpenDirectLink *string `json:"open_direct_link,omitempty"`
	OpenPostManagePage *AddonsOpenPostManagePage `json:"open_post_manage_page,omitempty"`
	OpenPostPage *AddonsOpenPostPage `json:"open_post_page,omitempty"`
	OpenServerLink *AddonsOpenServerLink `json:"open_server_link,omitempty"`
}

// NewAddonsAction instantiates a new AddonsAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsAction() *AddonsAction {
	this := AddonsAction{}
	return &this
}

// NewAddonsActionWithDefaults instantiates a new AddonsAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsActionWithDefaults() *AddonsAction {
	this := AddonsAction{}
	return &this
}

// GetGetDynamicAction returns the GetDynamicAction field value if set, zero value otherwise.
func (o *AddonsAction) GetGetDynamicAction() AddonsGetDynamicAction {
	if o == nil || IsNil(o.GetDynamicAction) {
		var ret AddonsGetDynamicAction
		return ret
	}
	return *o.GetDynamicAction
}

// GetGetDynamicActionOk returns a tuple with the GetDynamicAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAction) GetGetDynamicActionOk() (*AddonsGetDynamicAction, bool) {
	if o == nil || IsNil(o.GetDynamicAction) {
		return nil, false
	}
	return o.GetDynamicAction, true
}

// HasGetDynamicAction returns a boolean if a field has been set.
func (o *AddonsAction) HasGetDynamicAction() bool {
	if o != nil && !IsNil(o.GetDynamicAction) {
		return true
	}

	return false
}

// SetGetDynamicAction gets a reference to the given AddonsGetDynamicAction and assigns it to the GetDynamicAction field.
func (o *AddonsAction) SetGetDynamicAction(v AddonsGetDynamicAction) {
	o.GetDynamicAction = &v
}

// GetOpenDirectLink returns the OpenDirectLink field value if set, zero value otherwise.
func (o *AddonsAction) GetOpenDirectLink() string {
	if o == nil || IsNil(o.OpenDirectLink) {
		var ret string
		return ret
	}
	return *o.OpenDirectLink
}

// GetOpenDirectLinkOk returns a tuple with the OpenDirectLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAction) GetOpenDirectLinkOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDirectLink) {
		return nil, false
	}
	return o.OpenDirectLink, true
}

// HasOpenDirectLink returns a boolean if a field has been set.
func (o *AddonsAction) HasOpenDirectLink() bool {
	if o != nil && !IsNil(o.OpenDirectLink) {
		return true
	}

	return false
}

// SetOpenDirectLink gets a reference to the given string and assigns it to the OpenDirectLink field.
func (o *AddonsAction) SetOpenDirectLink(v string) {
	o.OpenDirectLink = &v
}

// GetOpenPostManagePage returns the OpenPostManagePage field value if set, zero value otherwise.
func (o *AddonsAction) GetOpenPostManagePage() AddonsOpenPostManagePage {
	if o == nil || IsNil(o.OpenPostManagePage) {
		var ret AddonsOpenPostManagePage
		return ret
	}
	return *o.OpenPostManagePage
}

// GetOpenPostManagePageOk returns a tuple with the OpenPostManagePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAction) GetOpenPostManagePageOk() (*AddonsOpenPostManagePage, bool) {
	if o == nil || IsNil(o.OpenPostManagePage) {
		return nil, false
	}
	return o.OpenPostManagePage, true
}

// HasOpenPostManagePage returns a boolean if a field has been set.
func (o *AddonsAction) HasOpenPostManagePage() bool {
	if o != nil && !IsNil(o.OpenPostManagePage) {
		return true
	}

	return false
}

// SetOpenPostManagePage gets a reference to the given AddonsOpenPostManagePage and assigns it to the OpenPostManagePage field.
func (o *AddonsAction) SetOpenPostManagePage(v AddonsOpenPostManagePage) {
	o.OpenPostManagePage = &v
}

// GetOpenPostPage returns the OpenPostPage field value if set, zero value otherwise.
func (o *AddonsAction) GetOpenPostPage() AddonsOpenPostPage {
	if o == nil || IsNil(o.OpenPostPage) {
		var ret AddonsOpenPostPage
		return ret
	}
	return *o.OpenPostPage
}

// GetOpenPostPageOk returns a tuple with the OpenPostPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAction) GetOpenPostPageOk() (*AddonsOpenPostPage, bool) {
	if o == nil || IsNil(o.OpenPostPage) {
		return nil, false
	}
	return o.OpenPostPage, true
}

// HasOpenPostPage returns a boolean if a field has been set.
func (o *AddonsAction) HasOpenPostPage() bool {
	if o != nil && !IsNil(o.OpenPostPage) {
		return true
	}

	return false
}

// SetOpenPostPage gets a reference to the given AddonsOpenPostPage and assigns it to the OpenPostPage field.
func (o *AddonsAction) SetOpenPostPage(v AddonsOpenPostPage) {
	o.OpenPostPage = &v
}

// GetOpenServerLink returns the OpenServerLink field value if set, zero value otherwise.
func (o *AddonsAction) GetOpenServerLink() AddonsOpenServerLink {
	if o == nil || IsNil(o.OpenServerLink) {
		var ret AddonsOpenServerLink
		return ret
	}
	return *o.OpenServerLink
}

// GetOpenServerLinkOk returns a tuple with the OpenServerLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsAction) GetOpenServerLinkOk() (*AddonsOpenServerLink, bool) {
	if o == nil || IsNil(o.OpenServerLink) {
		return nil, false
	}
	return o.OpenServerLink, true
}

// HasOpenServerLink returns a boolean if a field has been set.
func (o *AddonsAction) HasOpenServerLink() bool {
	if o != nil && !IsNil(o.OpenServerLink) {
		return true
	}

	return false
}

// SetOpenServerLink gets a reference to the given AddonsOpenServerLink and assigns it to the OpenServerLink field.
func (o *AddonsAction) SetOpenServerLink(v AddonsOpenServerLink) {
	o.OpenServerLink = &v
}

func (o AddonsAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GetDynamicAction) {
		toSerialize["get_dynamic_action"] = o.GetDynamicAction
	}
	if !IsNil(o.OpenDirectLink) {
		toSerialize["open_direct_link"] = o.OpenDirectLink
	}
	if !IsNil(o.OpenPostManagePage) {
		toSerialize["open_post_manage_page"] = o.OpenPostManagePage
	}
	if !IsNil(o.OpenPostPage) {
		toSerialize["open_post_page"] = o.OpenPostPage
	}
	if !IsNil(o.OpenServerLink) {
		toSerialize["open_server_link"] = o.OpenServerLink
	}
	return toSerialize, nil
}

type NullableAddonsAction struct {
	value *AddonsAction
	isSet bool
}

func (v NullableAddonsAction) Get() *AddonsAction {
	return v.value
}

func (v *NullableAddonsAction) Set(val *AddonsAction) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsAction) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsAction(val *AddonsAction) *NullableAddonsAction {
	return &NullableAddonsAction{value: val, isSet: true}
}

func (v NullableAddonsAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


