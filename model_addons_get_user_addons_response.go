/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
)

// checks if the AddonsGetUserAddonsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsGetUserAddonsResponse{}

// AddonsGetUserAddonsResponse struct for AddonsGetUserAddonsResponse
type AddonsGetUserAddonsResponse struct {
	UserAddons []AddonsUserAddon `json:"user_addons,omitempty"`
}

// NewAddonsGetUserAddonsResponse instantiates a new AddonsGetUserAddonsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsGetUserAddonsResponse() *AddonsGetUserAddonsResponse {
	this := AddonsGetUserAddonsResponse{}
	return &this
}

// NewAddonsGetUserAddonsResponseWithDefaults instantiates a new AddonsGetUserAddonsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsGetUserAddonsResponseWithDefaults() *AddonsGetUserAddonsResponse {
	this := AddonsGetUserAddonsResponse{}
	return &this
}

// GetUserAddons returns the UserAddons field value if set, zero value otherwise.
func (o *AddonsGetUserAddonsResponse) GetUserAddons() []AddonsUserAddon {
	if o == nil || IsNil(o.UserAddons) {
		var ret []AddonsUserAddon
		return ret
	}
	return o.UserAddons
}

// GetUserAddonsOk returns a tuple with the UserAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsGetUserAddonsResponse) GetUserAddonsOk() ([]AddonsUserAddon, bool) {
	if o == nil || IsNil(o.UserAddons) {
		return nil, false
	}
	return o.UserAddons, true
}

// HasUserAddons returns a boolean if a field has been set.
func (o *AddonsGetUserAddonsResponse) HasUserAddons() bool {
	if o != nil && !IsNil(o.UserAddons) {
		return true
	}

	return false
}

// SetUserAddons gets a reference to the given []AddonsUserAddon and assigns it to the UserAddons field.
func (o *AddonsGetUserAddonsResponse) SetUserAddons(v []AddonsUserAddon) {
	o.UserAddons = v
}

func (o AddonsGetUserAddonsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsGetUserAddonsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserAddons) {
		toSerialize["user_addons"] = o.UserAddons
	}
	return toSerialize, nil
}

type NullableAddonsGetUserAddonsResponse struct {
	value *AddonsGetUserAddonsResponse
	isSet bool
}

func (v NullableAddonsGetUserAddonsResponse) Get() *AddonsGetUserAddonsResponse {
	return v.value
}

func (v *NullableAddonsGetUserAddonsResponse) Set(val *AddonsGetUserAddonsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsGetUserAddonsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsGetUserAddonsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsGetUserAddonsResponse(val *AddonsGetUserAddonsResponse) *NullableAddonsGetUserAddonsResponse {
	return &NullableAddonsGetUserAddonsResponse{value: val, isSet: true}
}

func (v NullableAddonsGetUserAddonsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsGetUserAddonsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


