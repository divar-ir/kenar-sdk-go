/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentSubmitUserPaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentSubmitUserPaymentRequest{}

// PaymentSubmitUserPaymentRequest struct for PaymentSubmitUserPaymentRequest
type PaymentSubmitUserPaymentRequest struct {
	// کل مبلغ پرداختی توسط کاربر، به ریال
	AmountRials string `json:"amount_rials"`
	// بخشی از مبلغ پرداختی که به شما تعلق می‌گیرد (سود یا کمیسیون)، به ریال
	ProfitRials string `json:"profit_rials"`
	// شناسه مرجع فاکتور یا تراکنش
	ReferenceId string `json:"reference_id"`
	// لیست شناسه خدماتی که کاربر برای آنها پرداخت انجام داده است (مثلاً «banner»، «title_refinement» و ...). توصیه می‌شود از نام‌های انگلیسی کوتاه و توصیفی به‌عنوان شناسه خدمت استفاده شود.
	Services []string `json:"services"`
}

type _PaymentSubmitUserPaymentRequest PaymentSubmitUserPaymentRequest

// NewPaymentSubmitUserPaymentRequest instantiates a new PaymentSubmitUserPaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSubmitUserPaymentRequest(amountRials string, profitRials string, referenceId string, services []string) *PaymentSubmitUserPaymentRequest {
	this := PaymentSubmitUserPaymentRequest{}
	this.AmountRials = amountRials
	this.ProfitRials = profitRials
	this.ReferenceId = referenceId
	this.Services = services
	return &this
}

// NewPaymentSubmitUserPaymentRequestWithDefaults instantiates a new PaymentSubmitUserPaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentSubmitUserPaymentRequestWithDefaults() *PaymentSubmitUserPaymentRequest {
	this := PaymentSubmitUserPaymentRequest{}
	return &this
}

// GetAmountRials returns the AmountRials field value
func (o *PaymentSubmitUserPaymentRequest) GetAmountRials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountRials
}

// GetAmountRialsOk returns a tuple with the AmountRials field value
// and a boolean to check if the value has been set.
func (o *PaymentSubmitUserPaymentRequest) GetAmountRialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountRials, true
}

// SetAmountRials sets field value
func (o *PaymentSubmitUserPaymentRequest) SetAmountRials(v string) {
	o.AmountRials = v
}

// GetProfitRials returns the ProfitRials field value
func (o *PaymentSubmitUserPaymentRequest) GetProfitRials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfitRials
}

// GetProfitRialsOk returns a tuple with the ProfitRials field value
// and a boolean to check if the value has been set.
func (o *PaymentSubmitUserPaymentRequest) GetProfitRialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfitRials, true
}

// SetProfitRials sets field value
func (o *PaymentSubmitUserPaymentRequest) SetProfitRials(v string) {
	o.ProfitRials = v
}

// GetReferenceId returns the ReferenceId field value
func (o *PaymentSubmitUserPaymentRequest) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubmitUserPaymentRequest) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *PaymentSubmitUserPaymentRequest) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetServices returns the Services field value
func (o *PaymentSubmitUserPaymentRequest) GetServices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *PaymentSubmitUserPaymentRequest) GetServicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *PaymentSubmitUserPaymentRequest) SetServices(v []string) {
	o.Services = v
}

func (o PaymentSubmitUserPaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentSubmitUserPaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount_rials"] = o.AmountRials
	toSerialize["profit_rials"] = o.ProfitRials
	toSerialize["reference_id"] = o.ReferenceId
	toSerialize["services"] = o.Services
	return toSerialize, nil
}

func (o *PaymentSubmitUserPaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount_rials",
		"profit_rials",
		"reference_id",
		"services",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentSubmitUserPaymentRequest := _PaymentSubmitUserPaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentSubmitUserPaymentRequest)

	if err != nil {
		return err
	}

	*o = PaymentSubmitUserPaymentRequest(varPaymentSubmitUserPaymentRequest)

	return err
}

type NullablePaymentSubmitUserPaymentRequest struct {
	value *PaymentSubmitUserPaymentRequest
	isSet bool
}

func (v NullablePaymentSubmitUserPaymentRequest) Get() *PaymentSubmitUserPaymentRequest {
	return v.value
}

func (v *NullablePaymentSubmitUserPaymentRequest) Set(val *PaymentSubmitUserPaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSubmitUserPaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSubmitUserPaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSubmitUserPaymentRequest(val *PaymentSubmitUserPaymentRequest) *NullablePaymentSubmitUserPaymentRequest {
	return &NullablePaymentSubmitUserPaymentRequest{value: val, isSet: true}
}

func (v NullablePaymentSubmitUserPaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSubmitUserPaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


