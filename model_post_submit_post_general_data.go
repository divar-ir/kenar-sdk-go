/*
Kenar API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kenarapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostSubmitPostGeneralData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostSubmitPostGeneralData{}

// PostSubmitPostGeneralData struct for PostSubmitPostGeneralData
type PostSubmitPostGeneralData struct {
	// نام دسته‌بندی هدف. دسته‌بندی‌های موجود را در این آدرس بیابید: https://divar-ir.github.io/kenar-docs/openapi-doc/assets-get-categories/
	CategorySlug string `json:"category_slug"`
	// امکان چت فعال باشد
	ChatEnabled bool `json:"chat_enabled"`
	// شهر آگهی
	City string `json:"city"`
	// توضیحات آگهی
	Description string `json:"description"`
	// عدم نمایش شماره تماس به کاربران
	HidePhone bool `json:"hide_phone"`
	Images []string `json:"images"`
	LocationType PostLocationType `json:"location_type"`
	// عنوان آگهی
	Title string `json:"title"`
	// محله آگهی
	District *string `json:"district,omitempty"`
	// عرض جغرافیایی آگهی
	Latitude *float64 `json:"latitude,omitempty"`
	// طول جغرافیایی آگهی
	Longitude *float64 `json:"longitude,omitempty"`
}

type _PostSubmitPostGeneralData PostSubmitPostGeneralData

// NewPostSubmitPostGeneralData instantiates a new PostSubmitPostGeneralData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostSubmitPostGeneralData(categorySlug string, chatEnabled bool, city string, description string, hidePhone bool, images []string, locationType PostLocationType, title string) *PostSubmitPostGeneralData {
	this := PostSubmitPostGeneralData{}
	this.CategorySlug = categorySlug
	this.ChatEnabled = chatEnabled
	this.City = city
	this.Description = description
	this.HidePhone = hidePhone
	this.Images = images
	this.LocationType = locationType
	this.Title = title
	return &this
}

// NewPostSubmitPostGeneralDataWithDefaults instantiates a new PostSubmitPostGeneralData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostSubmitPostGeneralDataWithDefaults() *PostSubmitPostGeneralData {
	this := PostSubmitPostGeneralData{}
	return &this
}

// GetCategorySlug returns the CategorySlug field value
func (o *PostSubmitPostGeneralData) GetCategorySlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CategorySlug
}

// GetCategorySlugOk returns a tuple with the CategorySlug field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetCategorySlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategorySlug, true
}

// SetCategorySlug sets field value
func (o *PostSubmitPostGeneralData) SetCategorySlug(v string) {
	o.CategorySlug = v
}

// GetChatEnabled returns the ChatEnabled field value
func (o *PostSubmitPostGeneralData) GetChatEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ChatEnabled
}

// GetChatEnabledOk returns a tuple with the ChatEnabled field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetChatEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChatEnabled, true
}

// SetChatEnabled sets field value
func (o *PostSubmitPostGeneralData) SetChatEnabled(v bool) {
	o.ChatEnabled = v
}

// GetCity returns the City field value
func (o *PostSubmitPostGeneralData) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *PostSubmitPostGeneralData) SetCity(v string) {
	o.City = v
}

// GetDescription returns the Description field value
func (o *PostSubmitPostGeneralData) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PostSubmitPostGeneralData) SetDescription(v string) {
	o.Description = v
}

// GetHidePhone returns the HidePhone field value
func (o *PostSubmitPostGeneralData) GetHidePhone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HidePhone
}

// GetHidePhoneOk returns a tuple with the HidePhone field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetHidePhoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HidePhone, true
}

// SetHidePhone sets field value
func (o *PostSubmitPostGeneralData) SetHidePhone(v bool) {
	o.HidePhone = v
}

// GetImages returns the Images field value
func (o *PostSubmitPostGeneralData) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetImagesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *PostSubmitPostGeneralData) SetImages(v []string) {
	o.Images = v
}

// GetLocationType returns the LocationType field value
func (o *PostSubmitPostGeneralData) GetLocationType() PostLocationType {
	if o == nil {
		var ret PostLocationType
		return ret
	}

	return o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetLocationTypeOk() (*PostLocationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationType, true
}

// SetLocationType sets field value
func (o *PostSubmitPostGeneralData) SetLocationType(v PostLocationType) {
	o.LocationType = v
}

// GetTitle returns the Title field value
func (o *PostSubmitPostGeneralData) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PostSubmitPostGeneralData) SetTitle(v string) {
	o.Title = v
}

// GetDistrict returns the District field value if set, zero value otherwise.
func (o *PostSubmitPostGeneralData) GetDistrict() string {
	if o == nil || IsNil(o.District) {
		var ret string
		return ret
	}
	return *o.District
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetDistrictOk() (*string, bool) {
	if o == nil || IsNil(o.District) {
		return nil, false
	}
	return o.District, true
}

// HasDistrict returns a boolean if a field has been set.
func (o *PostSubmitPostGeneralData) HasDistrict() bool {
	if o != nil && !IsNil(o.District) {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given string and assigns it to the District field.
func (o *PostSubmitPostGeneralData) SetDistrict(v string) {
	o.District = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *PostSubmitPostGeneralData) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *PostSubmitPostGeneralData) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *PostSubmitPostGeneralData) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *PostSubmitPostGeneralData) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSubmitPostGeneralData) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *PostSubmitPostGeneralData) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *PostSubmitPostGeneralData) SetLongitude(v float64) {
	o.Longitude = &v
}

func (o PostSubmitPostGeneralData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostSubmitPostGeneralData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category_slug"] = o.CategorySlug
	toSerialize["chat_enabled"] = o.ChatEnabled
	toSerialize["city"] = o.City
	toSerialize["description"] = o.Description
	toSerialize["hide_phone"] = o.HidePhone
	toSerialize["images"] = o.Images
	toSerialize["location_type"] = o.LocationType
	toSerialize["title"] = o.Title
	if !IsNil(o.District) {
		toSerialize["district"] = o.District
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return toSerialize, nil
}

func (o *PostSubmitPostGeneralData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_slug",
		"chat_enabled",
		"city",
		"description",
		"hide_phone",
		"images",
		"location_type",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostSubmitPostGeneralData := _PostSubmitPostGeneralData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostSubmitPostGeneralData)

	if err != nil {
		return err
	}

	*o = PostSubmitPostGeneralData(varPostSubmitPostGeneralData)

	return err
}

type NullablePostSubmitPostGeneralData struct {
	value *PostSubmitPostGeneralData
	isSet bool
}

func (v NullablePostSubmitPostGeneralData) Get() *PostSubmitPostGeneralData {
	return v.value
}

func (v *NullablePostSubmitPostGeneralData) Set(val *PostSubmitPostGeneralData) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSubmitPostGeneralData) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSubmitPostGeneralData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSubmitPostGeneralData(val *PostSubmitPostGeneralData) *NullablePostSubmitPostGeneralData {
	return &NullablePostSubmitPostGeneralData{value: val, isSet: true}
}

func (v NullablePostSubmitPostGeneralData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSubmitPostGeneralData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


